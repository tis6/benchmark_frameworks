Id,PostTypeId,AcceptedAnswerId,ParentId,CreationDate,DeletionDate,Score,ViewCount,Body,OwnerUserId,OwnerDisplayName,LastEditorUserId,LastEditorDisplayName,LastEditDate,LastActivityDate,Title,Tags,AnswerCount,CommentCount,FavoriteCount,ClosedDate,CommunityOwnedDate,PostId,TagId,Id,TagName,Count,ExcerptPostId,WikiPostId
"44611934","1","44612211","","2017-06-18 05:12:51","","1","398","<p>I have copied one object into another with help of </p>

<pre><code>BeanUtils.CopyProperties(Src,Dest);

From : package org.springframework.beans;
</code></pre>

<p>Now further in logic , with help of iterator I modify the list inside Dest object.</p>

<p>I want src object to be as it is.</p>

<p>But I see a weird behavior.
My Src is also getting modified.</p>

<p>What can be the reason ?</p>

<p><strong>Example:</strong>
src and Dest have list:   [Mango , Apple]
<br></p>

<p>I removed Mango from Dest with help of iteartor.
<br></p>

<p>later I see<br>
Src have [Apple]<br>
Dest have [Apple] <br></p>

<p>Is it happening because of shallow copy ?</p>
","1878022","","1878022","","2017-06-18 06:01:49","2017-06-18 06:13:36","Source getting modiefied when I modify target object of BeanUtils.CopyProperties","<java><list><clone><spring-framework-beans>","1","2","","","","44611934","127018","127018","spring-framework-beans","105","",""
"44655455","1","","","2017-06-20 14:11:29","","0","140","<p>i have query</p>

<pre><code>db.getCollection('collectionName').aggregate([
{
    $project: {
        '_id':1,
        'arrayField': {
            $filter: {
                input: '$arrayField',
                as: 'arrayField',
                cond: { $or: [ 
                    {$eq: [ [LUUID(""********-****-****-****-************"")],['$$arrayField._id'] ] },
                    {$eq: [ [LUUID(""********-****-****-****-************"")],['$$arrayField._id'] ] }
                  ] }
            }
        }
    }
}])
</code></pre>

<p>How will it look in MongoTemplate? And it is possible to rewrite the <strong>cond</strong>?</p>
","7126025","","","","","2017-07-05 08:14:02","Mongo string query to MongoTemplate (java, springframework)","<java><mongodb><spring-framework-beans>","1","0","","","","44655455","127018","127018","spring-framework-beans","105","",""
"44931127","1","44954250","","2017-07-05 16:03:42","","1","925","<p>I  am having some issues running my integration tests after upgrading the Spring Framework spring-test dependency from 4.2.9 to 4.3.9.</p>

<p>I am using a ContextConfiguration class which implements the spring test <code>SmartContextLoader</code> which allowed me to load different .xml config files which are split by profile. Based on the current spring profile it will run the specific beans for that profile.</p>

<p>This <code>ContextConfigurationLoader</code> I have ran perfectly fine in version <code>4.2.9</code> but after upgrading to version <code>4.3</code> and I am struggling to resolve this issue.</p>

<p>I am including the <code>ContextConfigurationLoader</code> I created in my integration tests like so.</p>

<pre><code>@ContextConfiguration(loader=ContextConfigurationLoader.class)
@RunWith(SpringJUnit4ClassRunner.class)
public class MyIntegrationTest {
     // Test Body
}
</code></pre>

<p>The <code>ContextConfigurationLoader</code> looks like this,</p>

<pre><code>public class ContextConfigurationLoader implements SmartContextLoader {

    @Override
    public void processContextConfiguration(ContextConfigurationAttributes contextConfigurationAttributes) {

    }

    @Override
    public ApplicationContext loadContext(MergedContextConfiguration mergedContextConfiguration) throws Exception {

        GenericXmlApplicationContext context = new GenericXmlApplicationContext();

        context.getEnvironment().setActiveProfiles(mergedContextConfiguration.getActiveProfiles());

        new XmlBeanDefinitionReader(context).
                loadBeanDefinitions(mergedContextConfiguration.getLocations());

        context.load(
                ""/development.xml"",
                ""/staging.xml"",
                ""/production.xml"",
        );

        AnnotationConfigUtils.registerAnnotationConfigProcessors(context);

        context.refresh();
        context.registerShutdownHook();

        return context;
    }

    @Override
    public String[] processLocations(Class&lt;?&gt; aClass, String... strings) {
        return new String[0];
    }

    @Override
    public ApplicationContext loadContext(String... strings) throws Exception {
        ApplicationContext context = ApplicationContextFactory.create();

        context.getBean(""dbUnitDatabaseConnection"");
        return ApplicationContextFactory.create();
    }
}
</code></pre>

<p>Lastly this is the error response I get after attempting to run my tests.</p>

<pre><code>java.lang.IllegalStateException: ContextConfigurationLoader was unable to detect defaults, and no ApplicationContextInitializers or ContextCustomizers were declared for context configuration attributes [[ContextConfigurationAttributes@53ca01a2 declaringClass = 'com.class.path.to.MyIntegrationTest', classes = '{}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'com.class.path.to.ContextConfigurationLoader']]
</code></pre>

<p>Thanks for your help, let me know if you need anymore information.</p>

<p>One solution I have found is including all of the .xml config files into one file and using the <code>@ContextConfiguration</code> annotation like this.</p>

<pre><code>@ContextConfiguration(""/config.xml"")
</code></pre>

<p>But this would require some other changes to the rest of the code outside of the tests. This also doesn't help explain why my current implementation doesn't work on the latest Spring Framework spring-test version.</p>
","844226","","388980","","2017-07-06 16:09:57","2017-07-06 16:21:14","Custom ContextConfiguration Loader issues when upgrading from Spring Framework 4.2.9 to 4.3+","<java><spring><spring-test><context-configuration><spring-framework-beans>","1","0","1","","","44931127","127018","127018","spring-framework-beans","105","",""
"45287079","1","45287211","","2017-07-24 17:57:14","","0","421","<p>I am absolutely new to TestNG, Spring framework etc. and I'm trying to use the annotation <code>@Value</code> access to configuration file via the <code>@Configuration</code> annotation.</p>

<p>All I'm trying to achieve here is to make the console write out ""hi"" from the config file accessing the value via <code>@Value</code>. I must be obviously missing the whole point of the <code>@Value</code> annotation (or <code>@Autowired</code> or some other annotations) as all I'm gettting is <code>java.lang.NullPointerException</code>.</p>

<p>I have the following three files (reduced to the absolute minimum):</p>

<p>config.properties</p>

<pre><code>a=""hi""
</code></pre>

<p>TestConfiguration.java</p>

<pre><code>@Configuration
@PropertySource(""config.properties"")
public class TestConfiguration {
    @Value(""${a}"")
    public String A;
}
</code></pre>

<p>TrialTest.java</p>

<pre><code>public class TrialTest {
    @Autowired
    private TestConfiguration testConfiguration;

    @Test
    public void test() {
        System.out.println(testConfiguration.A);
   }
}
</code></pre>

<p>Thanks a lot.</p>
","1770501","","","","","2017-07-24 18:15:22","Cannot @Autowire configuration","<java><selenium><testng><spring-framework-beans>","2","4","","","","45287079","127018","127018","spring-framework-beans","105","",""
"45363290","1","","","2017-07-28 01:02:13","","1","869","<p>The UsersDAOImpl class is supposed to add a new user when I run the file as a JUnit test, but I keep getting a NullPointerException when I call sessionFactory.getCurrentSession() and I don't know why.</p>

<p>The session factory is put in the beans.xml.</p>

<p>The credentials to the database were removed for obvious reasons.</p>

<p>[beans.XML]</p>

<pre><code>    &lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
    &lt;beans xmlns=""http://www.springframework.org/schema/beans""
xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:context=""http://www.springframework.org/schema/context""
xmlns:tx=""http://www.springframework.org/schema/tx""
xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd""&gt;
        &lt;!-- enable autowiring --&gt;
        &lt;context:component-scan base-package=""src""&gt;&lt;/context:component-scan&gt;
        &lt;!-- enable @Transactional --&gt;
        &lt;tx:annotation-driven /&gt;
        &lt;bean id=""myDataSource"" class=""org.apache.commons.dbcp.BasicDataSource""&gt;
            &lt;property name=""driverClassName"" value=""oracle.jdbc.driver.OracleDriver""&gt;&lt;/property&gt;
            &lt;property name=""username"" value=""{Master}""&gt;&lt;/property&gt;
            &lt;property name=""password"" value=""{password}""&gt;&lt;/property&gt;
            &lt;property name=""url"" value=""{url}""&gt;&lt;/property&gt;
        &lt;/bean&gt;
        &lt;bean id=""mySessionFactory"" class=""org.springframework.orm.hibernate4.LocalSessionFactoryBean""&gt;
            &lt;property name=""dataSource"" ref=""myDataSource""&gt;&lt;/property&gt;
            &lt;property name=""packagesToScan"" value=""src""&gt;&lt;/property&gt;
            &lt;property name=""hibernateProperties""&gt;
                &lt;props&gt;
                    &lt;prop key=""hibernate.dialect""&gt;org.hibernate.dialect.Oracle10gDialect&lt;/prop&gt;
                    &lt;prop key=""hibernate.show_sql""&gt;true&lt;/prop&gt;
                    &lt;prop key=""hibernate.format_sql""&gt;true&lt;/prop&gt;
                &lt;/props&gt;
            &lt;/property&gt;
        &lt;/bean&gt;
        &lt;bean id=""transactionManager"" class=""org.springframework.orm.hibernate4.HibernateTransactionManager""&gt;
            &lt;property name=""sessionFactory"" ref=""mySessionFactory""&gt;
    &lt;/property&gt; 
                &lt;/bean&gt;
        &lt;bean id=""usersDAO"" class=""dao.UsersDAOImpl""&gt;
            &lt;property name=""sessionFactory"" ref=""mySessionFactory""&gt;        &lt;/property&gt;
        &lt;/bean&gt;
     &lt;/beans&gt;
</code></pre>

<p>[UsersDAOImpl.java]</p>

<pre><code>package dao;

import static org.junit.Assert.*;
import java.util.List;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;
import customExceptions.*;
import util.Debug;
import util.HibernateUtil;
import domain.Users;
@Transactional
public class UsersDAOImpl implements UsersDAO {

@Autowired
private SessionFactory sessionFactory;

public void setSessionFactory(SessionFactory sessionfactory) {
    this.sessionFactory = sessionfactory;
}

@Test
public void testPush() {
    try {
        push(new Users(""username6"", ""email@gmail.com"", ""password"", ""firstName"", ""lastName"", false));
    } catch (UserNameTakenException e) {
        e.printStackTrace();
        fail();
    } catch (InvalidNameException e) {
        e.printStackTrace();
        fail();
    }
}

/**
 * Adds a new user to the database
 * 
 * @param newUser
 *            The user to be added
 * @throws UserNameTakenException
 *             In the case a username is taken
 * @throws InvalidNameException
 *             If a field is left blank, but front end should prevent that
 */
@Override
@Transactional(propagation = Propagation.REQUIRED)
public void push(Users newUser) throws UserNameTakenException, InvalidNameException {
    // For debugging purposes:
    Debug.printMessage(this.getClass(), ""push()"", ""invoked"");
    // Check if there are any empty Strings
    if (newUser.getUsername().isEmpty() || newUser.getPassword().isEmpty() || newUser.getFirstName().isEmpty()
            || newUser.getLastName().isEmpty()) {
        throw new InvalidNameException(""There is an empty String"");
    }




    // Get the session
    //THIS IS WHERE I GET THE EXCEPTION
    Session sess = sessionFactory.getCurrentSession();




    // Check to see if the username is taken
    Users users = getUserByName(newUser.getUsername());
    // If the list is not empty, a user with the name was found
    if (users != null) {
        sess.close();
        throw new UserNameTakenException(""The username was found in the database"");
    } else {
        // Otherwise, add the new user
        // Debug
        Debug.printMessage(this.getClass(), ""push()"", ""username available."");
        Debug.printErrorMessage(this.getClass(), ""push()"", ""saving "" + newUser.getUsername());
        sess.save(newUser);
        sess.close();
    }

}

/**
 * Updates the User's password in the database
 * 
 * @param user
 *            The user to change
 * @param newVal
 *            The new password
 */
@Override
public void updatePassword(Users user, String newVal) {
    Debug.printMessage(this.getClass(), ""updatePassword()"", ""invoked"");
    Session sess = HibernateUtil.getSession();
    Transaction trans = sess.beginTransaction();
    user.setPassword(newVal);
    sess.update(user);
    trans.commit();
    sess.close();
}

/**
 * Updates the User's first name in the database
 * 
 * @param user
 *            The user to change
 * @param newVal
 *            The new first name
 */
@Override
public void updateFirstName(Users user, String newVal) {
    // For debugging purposes:
    Debug.printMessage(this.getClass(), ""updateFirstName()"", ""invoked"");
    Session sess = HibernateUtil.getSession();
    Transaction trans = sess.beginTransaction();
    user.setFirstName(newVal);
    sess.update(user);
    trans.commit();
    sess.close();
}

/**
 * Updates the User's last name in the database
 * 
 * @param user
 *            The user to change
 * @param newVal
 *            The new last name
 */
@Override
public void updateLastName(Users user, String newVal) {
    // For debugging purposes:
    Debug.printMessage(this.getClass(), ""updateLastName()"", ""invoked"");
    Session sess = HibernateUtil.getSession();
    Transaction trans = sess.beginTransaction();
    user.setLastName(newVal);
    sess.update(user);
    trans.commit();
    sess.close();
}

/**
 * Returns the user with the given username
 * 
 * @param username
 *            The username to find
 */
@Override
public Users getUserByName(String username) {
    // For debugging purposes:
    Debug.printMessage(this.getClass(), ""getUserByName()"", ""invoked"");
    Session sess = HibernateUtil.getSession();
    Users user = (Users) sess.get(Users.class, username);
    sess.close();
    return user;
}

/**
 * Returns a list of all users from A_USERS
 */
@Override
public List&lt;Users&gt; getAllUsers() {
    // For debugging purposes:
    Debug.printMessage(this.getClass(), ""getAllUsers()"", ""invoked"");
    Session sess = HibernateUtil.getSession();
    Query query = sess.getNamedQuery(""getAllUsers"");
    List&lt;Users&gt; users = query.list();
    sess.close();
    return users;
 }
}
</code></pre>

<p>Also, I apologize if this is formatted incorrectly. This is my first time posting a question.</p>

<p>The Stack Trace</p>

<pre><code>java.lang.NullPointerException
at dao.UsersDAOImpl.push(UsersDAOImpl.java:65)
at dao.UsersDAOImpl.testPush(UsersDAOImpl.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
</code></pre>

<p>null</p>
","8379051","","8379051","","2017-07-28 01:15:36","2017-07-28 01:50:50","sessionFactory.getCurrentSession() causes a NullPointerException","<java><spring><spring-framework-beans>","2","4","","2017-07-29 10:57:16","","45363290","127018","127018","spring-framework-beans","105","",""
"45570146","1","","","2017-08-08 13:47:50","","0","1249","<p>I'm trying to implement an SSO service with Spring SAML and ADFS, I generated the <code>.keystore</code> file using <code>""%JAVA_HOME%\bin\keytool"" -genkey -alias tomcat -keyalg RSA</code> and added it as mentionned to server.xml file like this <code>&lt;Connector SSLEnabled=""true"" clientAuth=""false"" keystoreFile=""${user.home}/.keystore"" keystorePass=""changeit"" maxThreads=""150"" port=""8443"" protocol=""org.apache.coyote.http11.Http11NioProtocol"" scheme=""https"" secure=""true"" sslProtocol=""TLS""/&gt;</code>.
I'm also using the identical java code as in this <a href=""https://github.com/vdenotaris/spring-boot-security-saml-sample/blob/master/src/main/java/com/vdenotaris/spring/boot/security/saml/web/config/WebSecurityConfig.java"" rel=""nofollow noreferrer"">link</a>. 
but I'm getting this error message:</p>

<pre><code>2017-08-08 14:36:20,097 WARN  org.apache.xml.security.signature.XMLSignature.checkSignatureValue:724 - Signature verification failed.
[http-nio-8443-exec-6] INFO org.springframework.security.saml.log.SAMLDefaultLogger - AuthNResponse;FAILURE;0:0:0:0:0:0:0:1;https://localhost:8443/webapp/saml/metadata;http://SERVER6.myserver.com/adfs/services/trust;;;org.opensaml.common.SAMLException: Response doesn't have any valid assertion which would pass subject validation
at org.springframework.security.saml.websso.WebSSOProfileConsumerImpl.processAuthenticationResponse(WebSSOProfileConsumerImpl.java:229)
at org.springframework.security.saml.SAMLAuthenticationProvider.authenticate(SAMLAuthenticationProvider.java:87)
at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:174)
at org.springframework.security.saml.SAMLProcessingFilter.attemptAuthentication(SAMLProcessingFilter.java:87)
at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:185)
at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
at org.springframework.security.saml.metadata.MetadataGeneratorFilter.doFilter(MetadataGeneratorFilter.java:87)
at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:521)
at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1096)
at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:674)
at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
at java.lang.Thread.run(Thread.java:745)
Caused by: org.opensaml.xml.validation.ValidationException: Signature is not trusted or invalid
at org.springframework.security.saml.websso.AbstractProfileBase.verifySignature(AbstractProfileBase.java:272)
at org.springframework.security.saml.websso.WebSSOProfileConsumerImpl.verifyAssertionSignature(WebSSOProfileConsumerImpl.java:419)
at org.springframework.security.saml.websso.WebSSOProfileConsumerImpl.verifyAssertion(WebSSOProfileConsumerImpl.java:292)
at org.springframework.security.saml.websso.WebSSOProfileConsumerImpl.processAuthenticationResponse(WebSSOProfileConsumerImpl.java:214)
... 45 more
</code></pre>

<p>any help is really appreciated</p>
","5950428","","","","","2017-08-11 09:15:37","Spring SAML + ADFS : Response doesn't have any valid assertion which would pass subject validation","<ssl><saml-2.0><spring-saml><adfs2.0><spring-framework-beans>","1","0","","","","45570146","127018","127018","spring-framework-beans","105","",""
"45570222","1","","","2017-08-08 13:51:39","","1","146","<p>I have a JavaFX Application (not a Server-Application!) with many different areas.</p>

<p>These areas have a hierarchy of sub-areas, parts of it reused.</p>

<p>I am using Spring (4.x) for DI and it's getting painful complex.</p>

<p>My question: What is best practice to ensure that I get the right thing (mostly prototype scoped beans) injected into a Sub-Area?</p>

<p>Do I have to implement Custom-Scopes or Sub-Contexts?</p>

<hr>

<p>PS: The Sub-Context solution already worked, but the entire frontend got way too slow from that (about 10 Seconds for building the subcontext)</p>
","470370","","470370","","2017-08-08 14:55:19","2017-08-08 14:55:19","When to use Spring Sub-Contexts and when to use Custom-Scopes?","<java><spring><javafx><dependency-injection><spring-framework-beans>","0","0","","","","45570222","127018","127018","spring-framework-beans","105","",""
"45572067","1","","","2017-08-08 15:12:46","","0","120","<p>I have this myProperties.properties files with the following content:</p>

<pre><code>enum1 = a
enum2 = b
enum3 = c
enum4 = d
and so on...
</code></pre>

<p>My problem is how can I populate or inject all property values in a <code>Map&lt;String,String&gt;</code> - enum1..4 as the key and 1..d as the value from Environment variable.</p>

<p>Thanks for your help.</p>
","1154062","","1154062","","2017-08-08 15:41:32","2017-08-08 16:11:36","Populate Map<String,String> with entire .property file from Environment Spring","<spring><spring-mvc><spring-properties><spring-environment><spring-framework-beans>","1","0","","","","45572067","127018","127018","spring-framework-beans","105","",""
"45750453","1","45750702","","2017-08-18 07:02:59","","1","1283","<p>I can see that I can do component scan and restrict what packages are scanned using XML file.</p>

<pre><code>&lt;beans&gt;
    &lt;context:component-scan base-package=""com.mycompany""/&gt;
&lt;/beans&gt;
</code></pre>

<p>How can I do the same in YML file?</p>
","78000","","","","","2018-03-15 08:39:49","How to set Spring component scan in the Spring YML configuration file?","<spring><spring-framework-beans>","2","1","1","","","45750453","127018","127018","spring-framework-beans","105","",""
"46006413","1","","","2017-09-01 18:53:37","","1","356","<p>I am wondering how to initialize a variable in abstract class in Spring Framework. I cannot change the constructor which is already present. I have referred to <a href=""http://forum.spring.io/forum/spring-projects/container/47496-dependency-inject-abstract-class-property"" rel=""nofollow noreferrer"">http://forum.spring.io/forum/spring-projects/container/47496-dependency-inject-abstract-class-property</a> but the property has <code>null</code> value. </p>

<p>I have used <code>abtract=true</code> in my xml file.</p>

<p>My Abstract Class:</p>

<pre><code>    package com.hi;
    public abstract class Xyz implements Serializable{
            private String path;
            public String getPath(){return path;}
            public void setPath(String path){this.path = path;}
            private void init(){
                //path will be used to get the file from the location
            }
            public Serializable getExpr(){
                 init();
            }
    }
</code></pre>

<p>My Inherited Class:</p>

<pre><code>public class Abc extends Xyz implements Serializable{
   private Abc(String a){
       super(a,TYPE.data);
   }
   public static Abc of(){
      return new Abc(a);
   }
}
</code></pre>

<p>My xml file:</p>

<pre><code>&lt;bean id=""xyz""
          class=""com.hi.Xyz""
          abstract=""true""&gt;
        &lt;property name=""path"" value=""${PATH}"" /&gt;
&lt;/bean&gt;
</code></pre>

<p>The inherited class does not have to get the file. So the abstract class can have the path directly injected and use the path.</p>
","2887503","","2887503","","2017-09-01 21:54:09","2017-09-01 21:54:09","Initialize Abstract Property in Spring Framework","<java><spring><abstract-class><spring-framework-beans>","0","10","","","","46006413","127018","127018","spring-framework-beans","105","",""
"46114628","1","","","2017-09-08 10:41:35","","2","306","<p>I created a test basic application on Grails 3.1.16 that has <strong>two services</strong>, a first async and <strong>scheduled</strong> service (ex. FirstService) calling a second <strong>session scoped</strong> service (ex. SessionScopeService), as below:</p>

<p>""<strong>FirstService.groovy</strong>"":</p>

<pre><code>import org.springframework.scheduling.annotation.Async
import org.springframework.scheduling.annotation.Scheduled

class FirstService {

   def sessionScopeService
   boolean lazyInit = false

   @Async
   @Scheduled(cron=""*/10 * * * * MON-FRI"") 
   void firstServiceMethod() {
       sessionScopeService.serviceMethod()
   }
}
</code></pre>

<p>""<strong>SessionScopeService.groovy</strong>"":</p>

<pre><code>class SessionScopeService {

   static scope = ""session""
   static proxy = ""true""

   def serviceMethod() {
       log.info(""test OK"")
   }
}
</code></pre>

<p>The application fails to start, reporting scope session error: </p>

<pre><code>ERROR org.springframework.boot.SpringApplication - Application startup 
failed
org.springframework.beans.factory.BeanCreationException: Error creating bean 

with name 'firstService': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionScopeService ': Scope 'session' is not active for the current thread; consider defining a scoped proxy for this bean if you intend to refer to it from a singleton; nested exception is java.lang.IllegalStateException: No thread-bound request found: Are you referring to request attributes outside of an actual web request, or processing a request outside of the originally receiving thread? If you are actually operating within a web request and still receive this message, your code is probably running outside of DispatcherServlet/DispatcherPortlet: In this case, use RequestContextListener or RequestContextFilter to expose the current request.
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:778)
at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:118)
at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:760)
at org.springframework.boot.SpringApplication.createAndRefreshContext(SpringApplication.java:360)
at org.springframework.boot.SpringApplication.run(SpringApplication.java:306)
at grails.boot.GrailsApp.run(GrailsApp.groovy:55)
at grails.boot.GrailsApp.run(GrailsApp.groovy:375)
at grails.boot.GrailsApp.run(GrailsApp.groovy:364)
at grails.boot.GrailsApp$run.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:133)
at testservice.Application.main(Application.groovy:8)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionScopeService': Scope 'session' is not active for the current thread; consider defining a scoped proxy for this bean if you intend to refer to it from a singleton; nested exception is java.lang.IllegalStateException: No thread-bound request found: Are you referring to request attributes outside of an actual web request, or processing a request outside of the originally receiving thread? If you are actually operating within a web request and still receive this message, your code is probably running outside of DispatcherServlet/DispatcherPortlet: In this case, use RequestContextListener or RequestContextFilter to expose the current request.
at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:355)
at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1248)
at org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory.autowireByName(OptimizedAutowireCapableBeanFactory.java:160)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1198)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
... 20 common frames omitted
Caused by: java.lang.IllegalStateException: No thread-bound request found: Are you referring to request attributes outside of an actual web request, or processing a request outside of the originally receiving thread? If you are actually operating within a web request and still receive this message, your code is probably running outside of DispatcherServlet/DispatcherPortlet: In this case, use RequestContextListener or RequestContextFilter to expose the current request.
at org.springframework.web.context.request.RequestContextHolder.currentRequestAttributes(RequestContextHolder.java:131)
at org.springframework.web.context.request.SessionScope.get(SessionScope.java:91)
at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:340)
... 25 common frames omitted
</code></pre>

<p>I also tried to create manually scoped proxy on '<strong>resources.groovy</strong>' :</p>

<pre><code>  beans = {

     sessionScopeServiceProxy(ScopedProxyFactoryBean) {
        targetBeanName = 'sessionScopeService'
        proxyTargetClass = true
    }
  }
</code></pre>

<p>and then in the FirstService injected this proxy:</p>

<pre><code>  def sessionScopeServiceProxy
</code></pre>

<p>but without success (the method of ""sessionScopeServiceProxy"" is not even recognized by the ""FirstService"").</p>

<p>How can I solve this? 
Thanks for your time </p>
","8575210","","1123245","","2017-10-20 07:58:55","2017-10-20 07:58:55","Grails 3.1.16 - Call method of session scope service from scheduled service","<spring><grails><spring-framework-beans>","1","0","","","","46114628","127018","127018","spring-framework-beans","105","",""
"46295702","1","","","2017-09-19 08:38:05","","2","40","<p>I would like to add additional logic for all components injected into an object. I have a following code:</p>

<pre><code>@Component
public class ItemA extends Item { /*...*/ }


@Component
public class ItemB extends Item { /*...*/ }


@Component
public class ItemC extends Item { /*...*/ }


public class Group {

    public void add(Item item) {
        // some logic here
    }
}


@Component
public class Group1 extends Group {

    @Autowired
    private ItemA itemA;

    @Autowired
    private ItemB itemB;

}


@Component
public class Group2 extends Group {

    @Autowired
    private ItemB itemB;

    @Autowired
    private ItemC itemC;

}
</code></pre>

<p>I would like to apply <code>add()</code> method for each injected component, i.e. <code>itemA</code> and <code>itemB</code> in case of <code>Group1</code> or <code>itemB</code> and <code>itemC</code> in case of <code>Group2</code>. Is it possible in Spring to do this ""automatically"" for all children of <code>Group</code> by some bean factory extension, AOP or others or do I have to do it manually in each <code>Group1</code>, <code>Group2</code>, etc?</p>
","391782","","","","","2017-09-19 08:38:05","Get all components injected in the specific one","<java><spring><spring-framework-beans>","0","0","","","","46295702","127018","127018","spring-framework-beans","105","",""
"46563392","1","","","2017-10-04 11:11:56","","3","2683","<p>I am going to read a file available in resources folder in my Springboot application. I have used ResourceLoader to do it. But I get a FileNotFoundException when I try to execute my application.</p>

<pre><code>Error creating bean with name 'demoController': Invocation of init method failed; nested exception is java.io.FileNotFoundException: class path resource [schema.graphql] cannot be resolved to absolute file path because it does not reside in the file system: jar:file:/home/dilan/Projects/demo/target/demo.jar!/BOOT-INF/classes!/schema.graphql
    at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:137) ~[spring-beans-4.3.9.RELEASE.jar!/:4.3.9.RELEASE]
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:409) ~[spring-beans-4.3.9.RELEASE.jar!/:4.3.9.RELEASE]
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1620) ~[spring-beans-4.3.9.RELEASE.jar!/:4.3.9.RELEASE]
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-4.3.9.RELEASE.jar!/:4.3.9.RELEASE]
</code></pre>

<p>Below is my Code </p>

<pre><code> @Autowired
private ResourceLoader resourceLoader;

final Resource fileResource = resourceLoader.getResource(""classpath:schema.graphql"");
File schemaFile = fileResource.getFile();
TypeDefinitionRegistry definitionRegistry = new SchemaParser().parse(schemaFile);
RuntimeWiring wiring = buildRuntimeWiring();
</code></pre>

<p>Can anybody please help me to sort this out</p>

<p><a href=""https://i.stack.imgur.com/VxhXY.png"" rel=""nofollow noreferrer"">enter image description here</a></p>
","5489038","","5489038","","2017-10-04 11:19:36","2017-10-04 11:39:07","Reading file available in resources folder with SpringBoot","<java><spring><spring-boot><spring-framework-beans>","2","2","","","","46563392","127018","127018","spring-framework-beans","105","",""
"46577857","1","","","2017-10-05 04:29:31","","0","151","<p>I want  to Send some <em>xml</em>  file to an active Mq queue, and receive from a receiver class . I did it , but  there is a problem to send response message from receiver class to an other queue to get the message in producer class. I tried to change Spring configuration to add new queue but it doesn't working .
Here is My  configuration.
Can any one help me to Solve my issue ? </p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;beans xmlns=""http://www.springframework.org/schema/beans""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd""&gt;

    &lt;bean id=""connectionFactory"" class=""org.apache.activemq.ActiveMQConnectionFactory""&gt;
        &lt;property name=""brokerURL"" value=""tcp://localhost:61616"" /&gt;
    &lt;/bean&gt;
    &lt;bean id=""messageDestination"" class=""org.apache.activemq.command.ActiveMQQueue""&gt;
        &lt;constructor-arg value=""messageQueue1"" /&gt;
    &lt;/bean&gt;
    &lt;bean id=""jmsTemplate"" class=""org.springframework.jms.core.JmsTemplate""&gt;
        &lt;property name=""connectionFactory"" ref=""connectionFactory"" /&gt;
        &lt;property name=""receiveTimeout"" value=""15000"" /&gt;
        &lt;property name=""defaultDestination"" ref=""messageDestination"" /&gt;
    &lt;/bean&gt;

    &lt;bean id=""springJmsProducer"" class=""rfid.Producer""&gt;
        &lt;property name=""jmsTemplate"" ref=""jmsTemplate"" /&gt;
    &lt;/bean&gt;
&lt;/beans&gt;
</code></pre>
","8318556","","4672474","","2017-10-05 06:50:40","2017-10-05 06:50:40","Spring active Mq Configuration for multiple queue","<java><spring><activemq><spring-framework-beans>","0","2","","","","46577857","127018","127018","spring-framework-beans","105","",""
"46645771","1","46645988","","2017-10-09 11:49:57","","-1","417","<p>I want to upgrade my application from spring 3.0.5 version to Spring 4.x version, and I would like to know which one is the most stable(no bugs).. thanks for your help :)</p>

<p>I want to know the Major and Minor version we should use for the upgrade please?</p>
","2967948","","","","","2017-10-09 12:01:55","Most stable version of Spring 4.x . Upgrade needed from 3.0.5","<spring><spring-mvc><spring-jms><spring-framework-beans>","1","0","","","","46645771","127018","127018","spring-framework-beans","105","",""
"47239821","1","","","2017-11-11 15:53:04","","0","115","<p>I'm building an Angular app that communicates with a restful API written with the Spring Framework.</p>

<p>My class hierarchy is something like this:</p>

<pre><code>class Resource
class FileResource extends Resource
class DbResource extends Resource
class DbFileResource extends DbResource
class DbServerResource extends DbResource
</code></pre>

<p>and I'm sending such a json object in my post request for example, which suites the DbServerResource in my class hierarchy:</p>

<pre><code>{
""resourceName"": ""Res2"",
""resourceType"": ""DB_SERVER"",
""dbms"": ""DB2"",
""dbName"": ""SHOP"",
""host"": ""&lt;some ip&gt;"",
""port"": 50000,
""userName"": ""user"",
""password"": ""password""
}
</code></pre>

<p>In my controller I have a I have <code>addResource</code> method:</p>

<pre><code>@RequestMapping (method = RequestMethod.POST, value=""/resource"")
private void addResource(@RequestBody Resource resource)
</code></pre>

<p>And I have a Factory class that I'm calling to retrieve the exact object to work with by using <code>instanceof</code>:</p>

<pre><code>public ResourceId getResourceId(Resource res){

    if (res== null){
        return null;
    }....
</code></pre>

<p>But when sending my request I am getting a NullPointerException:</p>

<blockquote>
  <p>java.lang.NullPointerException
      com...ResourceManager.validateResourceId(ResourceManager.java:861)
      com...management.resource.manager.ResourceManager.addResource(ResourceManager.java:127)</p>
</blockquote>

<p>Seems that the Factory is not managing to recognize the relevant object and returning null!
How shall spring recognize to which object it should map the json?! Or am I doing something else wrong!</p>
","7236133","","559745","","2017-11-11 16:12:36","2017-11-12 09:19:42","Passing hierarchical objects in Http post method in springframework","<json><spring><angular><http-post><spring-framework-beans>","1","1","","","","47239821","127018","127018","spring-framework-beans","105","",""
"47257480","1","","","2017-11-13 05:14:49","","2","6195","<p>This super class DAO:</p>

<pre><code>public class CrudDAO{

}
</code></pre>

<p>This child class:</p>

<pre><code>@Repository
public class JnsTimeDao extends CrudDAO {

}

@Repository
public class BatchDAO extends CrudDAO {
}
</code></pre>

<p>this super service class</p>

<pre><code>@Transactional(readOnly = true)
public abstract class CrudService&lt;D extends CrudDAO&gt; {

    @Autowired
    protected D dao;
}
</code></pre>

<p>startup error:</p>

<blockquote>
  <p>org.springframework.beans.factory.NoUniqueBeanDefinitionException: No
  qualifying bean of type [com.gp.dao.CrudDAO] is defined: expected
  single matching bean but found 2: batchDAO,jnsTimeDao</p>
</blockquote>
","3981342","","5235574","","2017-11-13 05:23:50","2017-11-13 05:28:37","spring framework : expected single matching bean but found 2","<spring><spring-framework-beans>","1","1","","","","47257480","127018","127018","spring-framework-beans","105","",""
"47329978","1","47330132","","2017-11-16 12:43:58","","0","19","<p>I'm making a simple blog using springframework. I'm trying to make Categories for my posts/articles. When I create articles, I have the option to choose a Category and it works fine. However, when I try to edit an Article, the drop-down menu for choosing a Category is not working. It's just and empty field with a 'down arrow' sidebad and nothing happens when I click on it</p>

<pre><code>//ARTICLE EDIT--------------------------------------------------
@GetMapping(""/article/edit/{id}"")
@PreAuthorize(""isAuthenticated()"")
public String edit(@PathVariable Integer id, Model model)
{
    if(!this.articleRepository.exists(id))
    {
        return ""redirect:/"";
    }
    Article article = this.articleRepository.findOne(id);

    if(!isUserAuthorOrAdmin(article))
    {
        return ""redirect:/article/""+id;
    }

    List&lt;Category&gt; categories = this.categoryRepository.findAll();
    String tagString = article.getTags().stream().map(Tag::getName).collect(Collectors.joining("", ""));

    model.addAttribute(""view"", ""article/edit"");
    model.addAttribute(""article"", article);
    model.addAttribute(""category"", categories);
    model.addAttribute(""tags"", tagString);

    return ""base-layout"";
}

@PostMapping(""/article/edit/{id}"")
@PreAuthorize(""isAuthenticated()"")
public String editProcess(@PathVariable Integer id, ArticleBindingModel articleBindingModel)
{
    if(!this.articleRepository.exists(id))
    {
        return ""redirect:/"";
    }
    Article article = this.articleRepository.findOne(id);
    Category category = this.categoryRepository.findOne(articleBindingModel.getCategoryId());
    HashSet&lt;Tag&gt; tags = this.findTagsFromString(articleBindingModel.getTagString());

    if(!isUserAuthorOrAdmin(article))
    {
        return ""redirect:/article/""+id;
    }

    article.setContent(articleBindingModel.getContent());
    article.setTitle(articleBindingModel.getTitle());
    article.setCategory(category);
    article.setTags(tags);

    this.articleRepository.saveAndFlush(article);

    return ""redirect:/article/"" + article.getId();
}
</code></pre>

<p>The html file is:</p>

<pre><code>&lt;main&gt;
    &lt;div class=""container body-content span=8 offset=2""&gt;
        &lt;div class=""well""&gt;
            &lt;form class=""form-horizontal"" th:action=""@{/article/edit/{id}(id=${article.id})}"" method=""POST""&gt;
                &lt;fieldset&gt;
                    &lt;legend&gt;Edit Post&lt;/legend&gt;

                    &lt;div class=""form-group""&gt;
                        &lt;label class=""col-sm-4 control-label"" for=""article_title""&gt;Post Title&lt;/label&gt;
                        &lt;div class=""col-sm-4 ""&gt;
                            &lt;input type=""text"" class=""form-control"" id=""article_title"" placeholder=""Post Title"" name=""title"" th:value=""${article.title}""/&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;

                    &lt;div class=""form-group""&gt;
                        &lt;label class=""col-sm-4 control-label"" for=""article_content""&gt;Content&lt;/label&gt;
                    &lt;div class=""col-sm-6""&gt;
                        &lt;textarea class=""form-control"" rows=""6"" id=""article_content"" name=""content"" th:field=""${article.content}""&gt;&lt;/textarea&gt;
                    &lt;/div&gt;
                &lt;/div&gt;

                &lt;div class=""form-group""&gt;
                    &lt;label class=""col-sm-4 control-label"" for=""article_tags""&gt;Tags&lt;/label&gt;
                    &lt;div class=""col-sm-6""&gt;
                        &lt;input type=""text"" class=""form-control"" id=""article_tags"" placeholder=""Tags"" name=""tagString"" th:value=""${tags}""/&gt;
                    &lt;/div&gt;
                &lt;/div&gt;

                &lt;div class=""form-group""&gt;
                    &lt;label class=""col-sm-4 control-label"" for=""article_category""&gt;Category&lt;/label&gt;
                    &lt;div class=""col-sm-6""&gt;
                        &lt;select class=""form-control"" id=""article_category"" name=""categoryId""&gt;
                            &lt;option th:each=""category : ${categories}"" th:value=""${category.id}"" th:text=""${category.name}""  th:selected=""${category.id == article.category.id}""&gt;
                            &lt;/option&gt;
                        &lt;/select&gt;
                    &lt;/div&gt;
                 &lt;/div&gt;

                &lt;div class=""form-group""&gt;
                    &lt;div class=""col-sm-4 col-sm-offset-4""&gt;
                        &lt;a class=""btn btn-default"" th:href=""@{/article/{id}(id = ${article.id})}""&gt;Cancel&lt;/a&gt;
                        &lt;input type=""submit"" class=""btn btn-success"" value=""Edit""/&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/fieldset&gt;
        &lt;/form&gt;
    &lt;/div&gt;
&lt;/div&gt;
</code></pre>

<p></p>
","5645987","","5645987","","2017-11-16 12:56:26","2017-11-16 12:56:26","Dropdown menu for editing categories doesn't work","<java><html><spring><spring-framework-beans>","1","2","","","","47329978","127018","127018","spring-framework-beans","105","",""
"47373402","1","49689153","","2017-11-19 03:22:30","","0","593","<p>I have created a websocket using STOMP inside Spring. The endpoint works like a charm when used with javascript libraries however when I use any of the simple websocket google chrome extensions (i.e. Simple WebSocket Client, Smart Websocket Client, Web Socket Client), spring throws the ""Incomplete STOMP frame content message. Diving into the code, I've been able to see that the cause of this is I cannot insert the null character /u0000 with any of these tools. I assume all the java script frameworks do this by default. Has someone found a workaround for this so that I can use any websocket client with Spring STOMP?</p>

<p>The stomp code is located here: <a href=""https://github.com/spring-projects/spring-framework/blob/master/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompDecoder.java"" rel=""nofollow noreferrer"">https://github.com/spring-projects/spring-framework/blob/master/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompDecoder.java</a></p>

<p>On [currently] lines 308-320 the below code exists. This method returns null because byteBuffer.remaining is not greater than content length (both are 0) .There is a StompSubProtocolHandler exception that fires afterrwards. I tried looking into all the handlers and interceptors but there doesn't seem to be a way to intercept things at this level without rewriting almost everything. I wanted to just inject ""\0"" into the payload...</p>

<pre><code>if (contentLength != null &amp;&amp; contentLength &gt;= 0) {
        if (byteBuffer.remaining() &gt; contentLength) {
            byte[] payload = new byte[contentLength];
            byteBuffer.get(payload);
            if (byteBuffer.get() != 0) {
                throw new StompConversionException(""Frame must be terminated with a null octet"");
            }
            return payload;
        }
        else {
            return null;
        }
    }
</code></pre>
","749979","","","","","2018-04-06 09:02:40","Spring Stromp Incomplete Frame","<spring><spring-boot><stomp><spring-framework-beans>","1","0","","","","47373402","127018","127018","spring-framework-beans","105","",""
"47852673","1","","","2017-12-17 06:12:57","","-2","142","<p>Below is the error i am getting when i am trying to execute the test case.
It says expected at least 1 bean which qualifies as autowire candidate. Full error log and the java class is given below.</p>

<pre><code>Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1493)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1104)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
    at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
    at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
    at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1193)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1095)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
    at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
    at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
    at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
    at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1193)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1095)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
    at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
    at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
    at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
    at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1193)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1095)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
    at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
    at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
    at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
    at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:120)
    at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
    at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
    at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
    at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:189)
    at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:131)
    at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:230)
    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:228)
    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:287)
    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:289)
    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:247)
    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)
    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
    at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
    at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)
    at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:283)
    at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:173)
    at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)
    at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:128)
    at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
    at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
    at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)


Results :

Tests in error: 
  ProductServiceTests.testContractService400Response » IllegalState Failed to lo...
  ProductServiceTests.testContractService500Response » IllegalState Failed to lo...
  ProductServiceTests.testInvalidRequestCancelDateFormat » IllegalState Failed t...

Tests run: 3, Failures: 0, Errors: 3, Skipped: 0
</code></pre>

<p>Given below is the java code. ProductServiceTests.java</p>

<pre><code>import static org.hamcrest.CoreMatchers.equalTo;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.hamcrest.Matchers;
import org.junit.Test;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder;
import org.springframework.test.web.servlet.result.MockMvcResultHandlers;

import com.cnanational.productservice.controller.ProductServiceController;

public class ProductServiceTests extends ProductServiceApplicationTests{

    @Value(ProductServiceController.PATH_GET_SURCHARGES)
    protected String productSurcharges;

    @Override
    public MockHttpServletRequestBuilder failureTestsRequestBuilder() throws Exception {

        String requestJson = rawJsonFromFile(
                ""com/cnanational/productservice/service/valid-request.json"");

        System.out.println(""the value of surcharges = ""+ this.restProperties);

        return post(""/surcharges"")
                .header(HttpHeaders.AUTHORIZATION, validBasicAuthHeaderValue())
                .header(this.restProperties.getHeaders().getRemoteUser(), USER_NAME)
                .content(requestJson)
                .contentType(MediaType.APPLICATION_JSON);

    }

    @Test
    public void testInvalidRequestCancelDateFormat() throws Exception
    {
        String requestJson = rawJsonFromFile(
                ""com/cnanational/productservice/service/valid-request.json"");

        System.out.println(""the value of basicAuthHeaderValue111=""+ validBasicAuthHeaderValue());

        System.out.println(""the value of surcharges = ""+ this.restProperties);

        this.mvc.perform(post(""/surcharges"")
                .header(HttpHeaders.AUTHORIZATION, validBasicAuthHeaderValue())
                .header(this.restProperties.getHeaders().getRemoteUser(), USER_NAME)
                .content(requestJson)
                .contentType(MediaType.APPLICATION_JSON))
            .andExpect(status().isBadRequest())
            .andExpect(jsonPath(""$.status"", equalTo(400)))
            .andExpect(jsonPath(""$.fields"", Matchers.hasSize(2)))
            .andExpect(jsonPath(""$.fields[?(@.name == 'cancelDate' &amp;&amp; @.code == 'ValidDate')]"").exists())
            .andExpect(jsonPath(""$.fields[?(@.name == 'cancelMiles' &amp;&amp; @.code == 'Max')]"").exists())
            .andDo(MockMvcResultHandlers.print());
    }

}
----------------------

package com.cnanational.productservice;

import static org.hamcrest.CoreMatchers.equalTo;
import static org.mockito.BDDMockito.given;
import static org.mockito.Matchers.any;
import static org.mockito.Matchers.eq;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import java.net.URI;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.function.Consumer;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;

import com.cnanational.productservice.controller.ProductServiceController;
import com.cnanational.servicecommon.config.CommonRestProperties;
import com.cnanational.servicecommon.util.RestUtils;
import com.fasterxml.jackson.databind.ObjectMapper;

@EnableWebMvc
@RunWith(SpringRunner.class)
@SpringBootTest(
        classes = ProductServiceApplication.class,
        properties = {
            ""spring.config.location=classpath:product-service/"",
            ""spring.config.name=product-service"",
            ""logging.config=classpath:logback-test.xml""
        })
@AutoConfigureMockMvc
@ActiveProfiles(value = ProductServiceApplication.PROFILE_TEST)
public abstract class ProductServiceApplicationTests
{

    @Autowired
    protected ProductServiceController controller;

    @Autowired
    protected MockMvc mvc;

    @Autowired
    protected CommonRestProperties restProperties;

    @Autowired
    protected ObjectMapper objectMapper;

    @MockBean
    protected RestTemplate restTemplate;

    @Value(""${security.user.name}"")
    protected String username;

    @Value(""${security.user.password}"")
    protected String password;

    protected static final String USER_NAME = ""web_jdoe"";

    protected String validBasicAuthHeaderValue()
    {
        return RestUtils.createBasicAuthString(
                username,
                password);
    }

    public abstract MockHttpServletRequestBuilder failureTestsRequestBuilder()
            throws Exception;

    /**
     * Asserts that an upstream 400 response is returned to the client.
     * 
     * @throws Exception
     */
    @Test
    public void testContractService400Response() throws Exception
    {
        MockHttpServletRequestBuilder failureTestsRequestBuilder = failureTestsRequestBuilder();

        if (failureTestsRequestBuilder == null)
        {
            return;
        }

        String mockedJson = rawJsonFromFile(""com/cnanational/productservice/service/invalid-response-400.json"");

        ResponseEntity&lt;String&gt; mockedResponse = ResponseEntity.status(HttpStatus.BAD_REQUEST)
                .body(mockedJson);

        given(this.restTemplate.exchange(any(), eq(String.class)))
                .willReturn(mockedResponse);

        this.mvc.perform(failureTestsRequestBuilder)
            .andExpect(status().isBadRequest())
            .andExpect(jsonPath(""$.status"", equalTo(400)))
            .andExpect(jsonPath(""$.code"", equalTo(3000)));
    }

    /**
     * Asserts that an upstream 500 response is returned to the client.
     * 
     * @throws Exception
     */
    @Test
    public void testContractService500Response() throws Exception
    {
        MockHttpServletRequestBuilder failureTestsRequestBuilder = failureTestsRequestBuilder();

        if (failureTestsRequestBuilder == null)
        {
            return;
        }

        String mockedJson = rawJsonFromFile(""com/cnanational/productservice/service/invalid-response-500.json"");

        ResponseEntity&lt;String&gt; mockedResponse = ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
                .body(mockedJson);

        given(this.restTemplate.exchange(any(), eq(String.class)))
                .willReturn(mockedResponse);

        this.mvc.perform(failureTestsRequestBuilder)
            .andExpect(status().isInternalServerError())
            .andExpect(jsonPath(""$.status"", equalTo(500)))
            .andExpect(jsonPath(""$.code"", equalTo(800004)));
    }

    @SuppressWarnings(""unchecked"")
    protected &lt;T&gt; ResponseEntity&lt;T&gt; mockResponseEntityFromFile(String path, Class&lt;T&gt; responseBodyClass) throws Exception
    {
        String responseJson = rawJsonFromFile(path);

        T responseBody = null;

        if (String.class.equals(responseBodyClass))
        {
            responseBody = (T) responseJson;
        }
        else
        {
            responseBody = this.objectMapper.readValue(
                    responseJson,
                    responseBodyClass);
        }

        ResponseEntity&lt;T&gt; mockedResponse = ResponseEntity.ok(responseBody);

        return mockedResponse;
    }

    protected void testForMultipleStringValues(
            Consumer&lt;UrlWithVariables&gt; function,
            UrlWithVariables ... urlsWithVariables) throws Exception
    {
        for (UrlWithVariables urlWithVariables : urlsWithVariables)
        {
            try
            {
                function.accept(urlWithVariables);
            }
            catch (Exception e)
            {
                throw new RuntimeException(e);
            }
        }
    }

    /**
     * Retrieves JSON from a file on the classpath.
     * 
     * @param path
     * @return
     * @throws Exception
     */
    protected String rawJsonFromFile(String path) throws Exception
    {
        System.out.println(path);
        URI uri = getClass().getClassLoader().getResource(path).toURI();

        return new String(Files.readAllBytes(Paths.get(uri)));
    }

    public static class UrlWithVariables
    {
        private String url;

        private Object[] variables;

        public UrlWithVariables(String url, Object ... variables)
        {
            this.url = url;
            this.variables = variables;
        }

        public String getUrl()
        {
            return url;
        }

        public Object[] getVariables()
        {
            return variables;
        }
    }

    public static void rethrowException(Action action)
    {
        try
        {
            action.execute();
        }
        catch (Exception e)
        {
            throw new RuntimeException(e);
        }
    }

    public static interface Action
    {
        public void execute() throws Exception;
    }

    public static class FieldNameCodePair
    {
        private String fieldName;

        private String code;

        public FieldNameCodePair(String fieldName, String code)
        {
            this.fieldName = fieldName;
            this.code = code;
        }

        public static FieldNameCodePair from(final String fieldName, final String code)
        {
            return new FieldNameCodePair(fieldName, code);
        }

        public String getFieldName()
        {
            return fieldName;
        }

        public void setFieldName(String fieldName)
        {
            this.fieldName = fieldName;
        }

        public String getCode()
        {
            return code;
        }

        public void setCode(String code)
        {
            this.code = code;
        }
    }
}
</code></pre>

<p>If any other code base is needed, I will add them to the question. Any inputs are appreciated. Thanks.</p>
","7638553","","","","","2017-12-17 07:43:22","Test case throws NoSuchBeanDefinitionException","<java><spring-framework-beans>","1","0","","","","47852673","127018","127018","spring-framework-beans","105","",""
"48034198","1","48034276","","2017-12-30 13:04:25","","0","575","<p>Here is my code, I don't know why my bean <code>MouvementToMapItemProcessor</code>  is not injected, it's always null in constructor</p>

<pre><code>@Autowired
    private MouvementToMapItemProcessor mvts;

    private Iterator it;

    public InMemoryMouvementReader() {
        it = mvts.getMouvmentFileRowMap().entrySet().iterator();
    }
</code></pre>

<p>Here is my configuration class:</p>

<pre><code>@Configuration
@EnableBatchProcessing
public class BatchConfiguration {


    public BatchConfiguration() {
    }


    @Bean
    public ItemReader&lt;MouvementFileRow&gt; mouvementMapReader() {
        return new InMemoryMouvementReader();
    }


    @Bean
    public ItemProcessor&lt;MouvementFileRow, MouvementFileRow&gt; mouvementMapProcessor() {
        return new MouvementToMapItemProcessor();
    }



    @Bean
    public Step generateDemmandeCommunication() {
        return stepBuilderFactory.get(""generateDemmandeCommunication"")
                .&lt;MouvementFileRow, DemandeCommunication&gt;chunk(10)
                .faultTolerant().skipLimit(Integer.MAX_VALUE).skip(CustomReaderSkipException.class)
                .reader(mouvementMapReader())
                .processor(mouvementProcessor())
                .writer(demandeCommunicationItemWriter())
                .listener(customStepListener())
                .build();
    }
</code></pre>

<p><br></p>

<pre><code>public class InMemoryMouvementReader implements ItemReader&lt;MouvementFileRow&gt; {

    @Autowired
    private MouvementToMapItemProcessor mvts;

    private Iterator it;

    public InMemoryMouvementReader() {
        it = mvts.getMouvmentFileRowMap().entrySet().iterator();
    }

    private void initialize() {
    }

    @Override
    public MouvementFileRow read() throws Exception {
        if (it.hasNext()) {
            return mvts.getMouvmentFileRowMap().get(it.next());
        } else return null;
    }
}
</code></pre>

<p><br></p>

<pre><code>@Component
public class MouvementToMapItemProcessor implements ItemProcessor&lt;MouvementFileRow, MouvementFileRow&gt; {

    private static final Logger log = LoggerFactory.getLogger(MouvementToMapItemProcessor.class);

    private Map&lt;Long, MouvementFileRow&gt; mouvmentFileRowMap;

    public MouvementToMapItemProcessor() {
        mouvmentFileRowMap = new HashMap&lt;Long, MouvementFileRow&gt;();

    }

    @Override
    public MouvementFileRow process(final MouvementFileRow mouvement) throws Exception {
        ........
        return null;
    }

    public Map&lt;Long, MouvementFileRow&gt; getMouvmentFileRowMap() {
        return mouvmentFileRowMap;
    }
</code></pre>

<p>My stack trace</p>

<blockquote>
  <p>Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
      11:55:29.139 [restartedMain] ERROR o.s.boot.SpringApplication - Application startup failed
      org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mouvementMapReader' defined in class path resource [fr/gouv/justice/spark/fileToBaseBatch/BatchConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.batch.item.ItemReader]: Factory method 'mouvementMapReader' threw exception; nested exception is java.lang.NullPointerException
          at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)
          at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
          at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
          at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
          at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
          at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
          at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
          at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
          at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
          at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
          at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
          at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
          at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
          at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
          at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
          at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
          at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
          at fr.gouv.justice.spark.fileToBaseBatch.Application.main(Application.java:18)
          at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
          at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
          at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
          at java.lang.reflect.Method.invoke(Method.java:498)
          at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
      Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.batch.item.ItemReader]: Factory method 'mouvementMapReader' threw exception; nested exception is java.lang.NullPointerException
          at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)
          at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
          ... 22 common frames omitted
      Caused by: java.lang.NullPointerException: null
          at fr.gouv.justice.spark.fileToBaseBatch.readers.InMemoryMouvementReader.(InMemoryMouvementReader.java:19)
          at fr.gouv.justice.spark.fileToBaseBatch.BatchConfiguration.mouvementMapReader(BatchConfiguration.java:74)
          at fr.gouv.justice.spark.fileToBaseBatch.BatchConfiguration$$EnhancerBySpringCGLIB$$e3e5804e.CGLIB$mouvementMapReader$34()
          at fr.gouv.justice.spark.fileToBaseBatch.BatchConfiguration$$EnhancerBySpringCGLIB$$e3e5804e$$FastClassBySpringCGLIB$$8f516405.invoke()
          at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
          at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
          at fr.gouv.justice.spark.fileToBaseBatch.BatchConfiguration$$EnhancerBySpringCGLIB$$e3e5804e.mouvementMapReader()
          at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
          at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
          at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
          at java.lang.reflect.Method.invoke(Method.java:498)
          at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
          ... 23 common frames omitted</p>
</blockquote>
","8640353","","4325010","","2017-12-30 13:36:58","2017-12-30 13:50:54","My bean allways returns null after injection","<java><spring><spring-framework-beans>","1","0","","","","48034198","127018","127018","spring-framework-beans","105","",""
"48071925","1","","","2018-01-03 05:55:56","","0","347","<p>I need help, I want the code to read the data which is in a csv file and the store that data into database. I have tried reading the csv file with known rows and cols. But the challenge here is that I want to create an utility where I don't know the number of cols and rows that are in the csv file so how would I do it? Please help.</p>
","9166708","","","","","2018-01-04 06:04:40","read csv file data and store it in database using spring framework","<spring><spring-framework-beans>","1","1","","","","48071925","127018","127018","spring-framework-beans","105","",""
"48079067","1","48079615","","2018-01-03 14:11:20","","1","763","<p>I have a POJO annotated with JSR-303 annotations. Some of its attributes are other POJOs.
I would like the inner POJOs to be @Valid, only if they are not null. But if they're null it's OK.
Unfortunately I'm not succeding in doing this, so Java returns me the error for the inner POJOs attribute if they're null.</p>

<pre><code>@AllArgsConstructor @NoArgsConstructor @Data
class OuterPojo{
    @NotBlank private String attributeA;
    @Valid    private InnerPojo attributeB;
}

@AllArgsConstructor @NoArgsConstructor @Data
class InnerPojo{
    @NotBlank private String attributeC;
    @NotNull  private Double attributeD;
}
</code></pre>

<p>I want an outerPojo to be valid if:</p>

<ol>
<li>attributeA is not-null and attributeB is null;</li>
<li>attributeB is not-null and attributeB is not-null and valid.</li>
</ol>

<p>So I would like the constraints on the attributes of inner pojo to be respected only if inner pojo is not null.</p>

<p>I've tried adding @Nullable to attributeB with no effect.
How can I solve this?</p>
","5882375","","","","","2018-01-03 14:43:25","@NotNull clarification for JSR-303 validation","<java><validation><hibernate-validator><spring-framework-beans><annotated-pojos>","1","2","","","","48079067","127018","127018","spring-framework-beans","105","",""
"48153551","1","","","2018-01-08 15:42:50","","1","322","<p>I have some spring batch jobs with number of steps which takes variable amount of time to run. I now need to define thresholds for each step  to check if its run crosses threshold time. </p>

<p>I was thinking of somehow passing this value  to ExcecutionContext  of StepExecution class.</p>

<p>I have gone through <a href=""https://docs.spring.io/spring-batch/trunk/reference/html/configureJob.html"" rel=""nofollow noreferrer"">https://docs.spring.io/spring-batch/trunk/reference/html/configureJob.html</a> and other docs to find out how values are passed ExcecutionContext, but couldn't find anything.</p>

<p>Can anyone help me understand how ExcecutionContext for StepExecution is initialized and can I pass some custom parameters at each step definition? </p>
","1904779","","1904779","","2018-01-09 12:32:31","2018-01-09 12:32:31","Spring Batch: Use of ExcecutionContext to pass step attributes","<java><spring><spring-batch><spring-batch-admin><spring-framework-beans>","1","5","","","","48153551","127018","127018","spring-framework-beans","105","",""
"48360352","1","48360458","","2018-01-20 19:41:22","","1","25","<p>I know there is a term <code>Bean scope</code> in Spring framework, and for some reasons it is confusing me, mainly because of the term <code>scope</code>, because we have this terms (scope) in languages, like <code>C</code>, <code>Java</code> applied to a variable scope (that is where a variable is visible).</p>

<p>I know there are five bean scope, and I am not asking explanation on them, I am not clear on what <code>Bean scope</code> means. Can anyone help me understand what does this term mean? </p>
","3438473","","","","","2018-01-20 20:04:20","Spring framework scope - Is it a misnomer?","<spring><spring-framework-beans>","1","0","","","","48360352","127018","127018","spring-framework-beans","105","",""
"49212879","1","","","2018-03-10 18:59:07","","0","142","<p>I am facing some issue while building spring-framework source, what is the issue?</p>

<pre><code>FAILURE: Build failed with an exception.

 Where:
   Build file '/home/steph/workspace_sts/spring-framework/spring-beans/spring-beans.gradle' line: 30

What went wrong:
A problem occurred evaluating project ':spring-beans'.
&gt; No such property: values for class: org.gradle.api.internal.tasks.DefaultTaskDependency
  Possible solutions: values
</code></pre>
","","user4235401","","","","2018-04-13 09:44:38","Issue while building spring-framework source","<spring><spring-framework-beans>","1","0","","","","49212879","127018","127018","spring-framework-beans","105","",""
"49431168","1","","","2018-03-22 14:25:11","","-2","320","<p>Which is more secure between <code>@RequestParam</code> and <code>@RequestBody</code> in Spring Framework application?</p>

<p>I am using <code>@PostMapping</code> in backend.
I am using <code>@RequestParam</code> as well as <code>@RequestBody</code>.</p>

<p><code>@RequestParam</code> for few request parameters, one or two. </p>

<p><code>@RequestBody</code> for large request as an object with multiple fields.</p>

<p>Thanks in advance.</p>
","7636024","","2650325","","2018-03-22 14:59:17","2018-03-22 14:59:17","HTTP Security: @RequestParam and @RequestBody","<java><spring><spring-framework-beans>","1","6","","","","49431168","127018","127018","spring-framework-beans","105","",""
"49577308","1","","","2018-03-30 15:44:45","","0","332","<p>I am developing a web app using Java springframework. I have certain buttons on my web page that I need them to fire java methods when they are clicked(No URL redirection). I think I need to use AJAX here because I dont need the page to reload nor to be redirected to any URL.</p>

<p>Here is my java controller code: </p>

<pre><code>@Controller
@RequestMapping(""/"")
public class MainController 
{
   public void run() 
   {   
    System.out.println(""Test1"");
    System.out.println(""Test2"");
    System.out.println(""Test3"");
    System.out.println(""Test4"");

   }
}
</code></pre>

<p>Here is my view html code: </p>

<pre><code>    &lt;button class=""btn btn-success btn-default"" onclick=""javascriptFunction()""&gt;
</code></pre>

<p>I want the javascriptFunction to call the run method in the MainController class. Both files are in the same project.</p>
","5434264","","","","","2018-03-30 15:44:45","Call a java method from a javascript file(Spring MVC no jsp)","<javascript><java><ajax><spring-mvc><spring-framework-beans>","0","6","","","","49577308","127018","127018","spring-framework-beans","105","",""
"49772486","1","","","2018-04-11 10:18:38","","0","446","<p>Unable to start the project After spring-boot-starter-parent version update from  <strong>1.5.9.RELEASE</strong> to  <strong>2.0.1.RELEASE</strong>. It was found that when we have a conditional bean initialization method the application is failing to start.</p>

<p><em>pom.xml</em></p>

<pre><code>&lt;parent&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
    &lt;!-- Previous version --&gt;
    &lt;!-- &lt;version&gt;1.5.9.RELEASE&lt;/version&gt; --&gt;
    &lt;!-- Updated version --&gt;
    &lt;version&gt;2.0.1.RELEASE&lt;/version&gt;
    &lt;relativePath /&gt;
&lt;/parent&gt;
</code></pre>

<p><em>application.properties</em></p>

<pre><code>host.enabled=false 
</code></pre>

<p><em>DemoApplication.java</em></p>

<pre><code>@SpringBootApplication
public class DemoApplication {

    public static void main(String[] args) {
        SpringApplication.run(DemoApplication.class, args);
    }
}
</code></pre>

<p><em>DemoClass.java</em></p>

<pre><code>@Component
@EnableScheduling
public class DemoClass {

    @Value(""${host.enabled}"")
    private boolean enableHostName;

    @Bean(name = ""hostName"")
    public String getName() {
        try {
            if(enableHostName)
                return InetAddress.getLocalHost().getHostName();
        } catch (UnknownHostException e) {
            return ""Unknown"";
        }
        return null;
        //return """";
    }

    @Autowired
    @Qualifier(""hostName"")
    String hostName;

    @Scheduled(fixedRate = 3000)
    public void print(){
        System.out.println(hostName);
    }
}
</code></pre>

<p><em>Console Log:</em></p>

<pre><code>2018-04-11 17:59:32.584  WARN 24120 --- [           main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'demoClass': Unsatisfied dependency expressed through field 'hostName'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'java.lang.String' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=hostName)}
2018-04-11 17:59:32.592  INFO 24120 --- [           main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2018-04-11 17:59:32.620  INFO 24120 --- [           main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2018-04-11 17:59:32.917 ERROR 24120 --- [           main] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************
Description:
Field hostName in com.vjs.demo.DemoClass required a bean of type 'java.lang.String' that could not be found.

Action:
Consider defining a bean of type 'java.lang.String' in your configuration.
</code></pre>
","8281254","","99256","","2018-06-21 05:55:12","2018-06-21 05:55:12","Bean Initialization on condition fails after Spring boot version update to 2.0.1.Release","<spring><spring-mvc><spring-boot><spring-bean><spring-framework-beans>","1","0","","","","49772486","127018","127018","spring-framework-beans","105","",""
"49776043","1","","","2018-04-11 13:10:37","","3","3600","<p>Trying to do something simple here. Take an Entity object and copy it's identically named properties to another bean.</p>

<p>You can do this with Apache commons</p>

<pre><code>org.apache.commons.beanutils.BeanUtils.copyProperties(source,target)
</code></pre>

<p>but the issue here is that we may have some properties that are specific to the entity bean (metadata like created,lastUpdated, etc timestamps) that we don't want to copy to the target bean and Apache Commons BeanUtils does not support ignoring of properties. I was pushed in the direction of Spring BeanUtils</p>

<pre><code>org.springframework.beans.BeanUtils.copyProperties(source,target,ignoreProperties)
</code></pre>

<p>Where ignoreProperties is an array of strings of the property name syou want to ignore. Now the issue seems to be when performing this property copy it nulls the properties of the source object! As the source object is an Entity object with a mandatory id field when the transaction is committed we  get a HibernateException</p>

<pre><code>org.hibernate.HibernateException: identifier of an instance {source} was altered from {originalId} to null
</code></pre>

<p>Anyone know a way around this or are you committed to using one or the other? Confusing to me why the commons librariy doesn't support ignoring properties while copying or why the springframework BeanUtils seems to perform a cut/paste instead of a copy/paste.</p>
","898465","","","","","2018-04-11 13:10:37","Springs BeanUtils.copyProperties() vs Apache Commons BeanUtils.copyProperties","<java><apache-commons><apache-commons-beanutils><spring-framework-beans>","0","6","1","","","49776043","127018","127018","spring-framework-beans","105","",""
"50294292","1","","","2018-05-11 14:12:31","","0","442","<p>when I deploy my first Spring MVC application on Glassfish 4/ Tomcat 8 I'm getting this error </p>

<pre><code>org.springframework.beans.factory.BeanDefinitionStoreException: IOException parsing XML document from ServletContext resource [/WEB-INF/myFirstSpring-servlet.xml]; nested exception is java.io.FileNotFoundException: Could not open ServletContext resource [/WEB-INF/myFirstSpring-servlet.xml]
</code></pre>

<p>I think is a problem with my Servlet configuration.</p>

<p>web.xml</p>

<pre><code>    &lt;web-app xmlns=""http://xmlns.jcp.org/xml/ns/javaee""
         xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
         xsi:schemaLocation=""http://xmlns.jcp.org/xml/ns/javaee 
         http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd""
         version=""3.1""&gt;
  &lt;display-name&gt;MyDemoApp&lt;/display-name&gt;
    &lt;servlet&gt;
  &lt;servlet-name&gt;myFirstSpring&lt;/servlet-name&gt;
  &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;
  &lt;init-param&gt;
  &lt;param-name&gt;contexConfiguration&lt;/param-name&gt;
  &lt;param-value&gt;/WEB-INF/config/myDemoApp-servletConfig.xml&lt;/param-value&gt;
  &lt;/init-param&gt;
  &lt;/servlet&gt;
  &lt;servlet-mapping&gt;
  &lt;servlet-name&gt;myFirstSpring&lt;/servlet-name&gt;
  &lt;url-pattern&gt;*.html&lt;/url-pattern&gt;
  &lt;/servlet-mapping&gt;

&lt;/web-app&gt;
</code></pre>

<p>my spring bean configuration file called myDemoApp-servletConfig.xml.</p>

<pre><code>[![&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;beans xmlns=""http://www.springframework.org/schema/beans""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xmlns:mvc=""http://www.springframework.org/schema/mvc""
    xmlns:context=""http://www.springframework.org/schema/context""
    xsi:schemaLocation=""http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd""&gt;
&lt;mvc:annotation-driven&gt;&lt;/mvc:annotation-driven&gt;

&lt;context:component-scan base-package=""com.demo.controllers""&gt;&lt;/context:component-scan&gt;

&lt;bean class=""org.springframework.web.servlet.view.InternalResourceViewResolver""&gt;
&lt;property name=""prefix"" value=""WEB=INF/jsp""&gt;&lt;/property&gt;
&lt;property name=""suffix"" value="".jsp""&gt;&lt;/property&gt;
&lt;/bean&gt;
&lt;/beans&gt;][1]][1]
</code></pre>

<p><a href=""https://i.stack.imgur.com/V7Sny.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/V7Sny.png"" alt=""enter image description here""></a></p>

<p>Any clue on what I have done wrong? </p>

<p>Sincerely,</p>
","3601527","","3601527","","2018-05-11 15:13:22","2018-05-11 15:13:22","Spring org.springframework.beans.factory.BeanDefinitionStoreException: IOException parsing XML document from ServletContext resource","<java><spring><spring-mvc><spring-framework-beans>","1","1","","","","50294292","127018","127018","spring-framework-beans","105","",""
"50467716","1","","","2018-05-22 12:28:48","","0","469","<p>I have two different applications one for Business and one for Rest. Both of them exist in one EAR. Rest is a war and business is a jar. I am using the business jar in Rest application.</p>

<p>In the business application i have annotated the Service Interface with @component annotation.</p>

<p>Business Module --
com.test.project.service -- package name
BaseService.java -- Interface which i am trying to autowire in my Rest Controller</p>

<p>REST Module
com.test.project.controller -- package name
BaseServiceController -- Controller Class where i am trying to auto wire BaseService.java</p>

<p>dispatcher-servlet.xml</p>

<p>To register my business and controller classes available in ""com.test.project"" package , i am mentioning the XML configuration as 
BUT the container is not able to auto wire BaseService.java in BaseServiceController.java, i am getting BeanCreationException</p>

<p>However if i am mentioning my base package name as ""com.test.project.service"" , BaseService.java is being auto wired into BaseServiceController.java, but if am trying to hit an endpoint in controller i am getting 404 as the controller is not registered in the container </p>

<p>below is my dispatcher-servlet.xml</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;beans xmlns=""http://www.springframework.org/schema/beans""
    xmlns:context=""http://www.springframework.org/schema/context""
    xmlns:mvc=""http://www.springframework.org/schema/mvc"" xmlns:p=""http://www.springframework.org/schema/p""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd""&gt;
    &lt;context:component-scan base-package=""com.test.project"" /&gt;
    &lt;mvc:annotation-driven/&gt;
    &lt;context:annotation-config/&gt;


&lt;/beans&gt;
</code></pre>

<p>Service</p>

<pre><code>public interface IBaseService {

    public void postData(String request) throws CustomException;

}
</code></pre>

<p>Controller</p>

<pre><code>@RestController
@RequestMapping(""/baseRequest"")
public class BaseServiceController{
    @Autowired
    private IBaseService baseService;
    //private static final Logger log = LoggerFactory.getLogger(BaseServiceController.class);


    @RequestMapping(value = ""/testRequest"", method = RequestMethod.GET, consumes = MediaType.APPLICATION_JSON)
    public String invokeInfo() throws CustomException{


        return ""Spring Test"";
    }

}
</code></pre>

<p>Below is the exception </p>

<pre><code>Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private ; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
    at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:334)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1218)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:778)
    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
    at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:666)
    at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:632)
    at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:680)
    at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:551)
    at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:492)
    at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:136)
    at javax.servlet.GenericServlet.init(GenericServlet.java:161)
    at com.ibm.ws.webcontainer.servlet.ServletWrapper.init(ServletWrapper.java:342)
    ... 91 more
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: private  nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
    at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:573)
    at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
    at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
    ... 109 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:1380)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1126)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1021)
    at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)
    ... 111 more
</code></pre>
","7517894","","7517894","","2018-05-22 13:33:38","2018-05-22 18:20:33","Component Scan not working as expected","<spring><spring-mvc><spring-boot><spring-framework-beans>","1","4","","","","50467716","127018","127018","spring-framework-beans","105","",""
"50830740","1","","","2018-06-13 06:50:11","","0","191","<p>Is there anyway to have a standby consumer that is only used if the primary consumer goes down?</p>

<p>If i have two instance of my same application and that application has listener which listen to ""queue1"" then the current behaviour is if one consumer is busy then another consumer take the data and read it. But i don't want that.</p>

<p>I need only consumer1 can read the queue and consumer2 is in idle state till consumer1 goes down.</p>

<p>I have tried exclusive also but that it doesn't fulfil my requirements.</p>

<p>Can somebody help me on this. </p>
","2927683","","2927683","","2018-06-13 06:59:03","2018-06-13 14:59:24","Rabbitmq allow only one concurrent consumer","<java><rabbitmq><spring-framework-beans>","1","0","","","","50830740","127018","127018","spring-framework-beans","105","",""
"51019022","1","","","2018-06-25 08:20:15","","1","600","<p>I was trying to follow <a href=""https://app.pluralsight.com/player?course=spring-fundamentals&amp;author=bryan-hansen&amp;name=spring-m3-xml-config&amp;clip=16&amp;mode=live"" rel=""nofollow noreferrer"">this</a> tutorial on PluralSight to learn Spring. The tutorial is based on spring 4.3.2 while I wanted to learn it on 5.0.0. I imported the spring dependency using mvn:</p>

<pre><code>&lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework&lt;/groupId&gt;
        &lt;artifactId&gt;spring-context&lt;/artifactId&gt;
        &lt;version&gt;5.0.0.RELEASE&lt;/version&gt;
    &lt;/dependency&gt;
  &lt;/dependencies&gt;
</code></pre>

<p>All the dependencies were imported fine. I created my <code>applicationContext.xml</code> and configured the beans. Now I am having issue importing <code>ApplicationContext</code>.</p>

<pre><code>ApplicationContext appContext = new ClassPathXmlApplicationContext(""applicationContext.xml"");
</code></pre>

<p>The above line of code says couldn't resolve <code>ApplicationContext</code> and <code>ClassPathXmlApplicationContext</code>.</p>

<p>I tried to find out if these classes have been changed in favour of any other class but I didn't found any such info on Spring website.</p>

<p>Am I missing on something or Is there any change in the way of using Spring after 5.0.0</p>

<p>My pom.xml:</p>

<pre><code>&lt;project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd""&gt;
  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
  &lt;groupId&gt;com.saurabh&lt;/groupId&gt;
  &lt;artifactId&gt;spring&lt;/artifactId&gt;
  &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
  &lt;name&gt;Spring&lt;/name&gt;
  &lt;description&gt;My first attempt at learning spring from Pluralsight&lt;/description&gt;

  &lt;!--  the stuff above this was generated automatically while I wrote all that is below --&gt;
  &lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.springframework&lt;/groupId&gt;
        &lt;artifactId&gt;spring-context&lt;/artifactId&gt;
        &lt;version&gt;5.0.0.RELEASE&lt;/version&gt;
    &lt;/dependency&gt;
  &lt;/dependencies&gt;

  &lt;build&gt;
    &lt;plugins&gt;
        &lt;plugin&gt;
            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
            &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
            &lt;version&gt;3.7.0&lt;/version&gt;
            &lt;configuration&gt;
                &lt;source&gt;1.8&lt;/source&gt;
                &lt;target&gt;1.8&lt;/target&gt;
            &lt;/configuration&gt;
        &lt;/plugin&gt;
    &lt;/plugins&gt;
  &lt;/build&gt;
&lt;/project&gt;
</code></pre>
","5316255","","2696260","","2018-11-19 08:24:17","2019-02-22 19:24:22","Why can't I import ApplicationContext in Spring-5.0.0.RELEASE","<java><spring><applicationcontext><spring-framework-beans>","1","5","","","","51019022","127018","127018","spring-framework-beans","105","",""
"51085969","1","","","2018-06-28 14:55:10","","0","567","<p>so i made simple site where i can add products to list (text area) using Spring framework 4.0.1, i can see page content but in text area on the bottom there is this exception preventing me from getting products on list.</p>

<p>Model class </p>

<pre><code>package model;

import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/**
 *
 * @author mkSS
 */
public class Products {
    public int product_id;
    public String productname;
    public String productstock;
    public String productdescription;

    public int getProduct_id() {
        return product_id;
    }

    public void setProduct_id(int product_id) {
        this.product_id = product_id;
    }

    public String getProductname() {
        return productname;
    }

    public void setProductname(String productname) {
        this.productname = productname;
    }

    public String getProductstock() {
        return productstock;
    }

    public void setProductstock(String productstock) {
        this.productstock = productstock;
    }

    public String getProductdescription() {
        return productdescription;
    }

    public void setProductdescription(String productdescription) {
        this.productdescription = productdescription;
    }


    public static String productList() throws ClassNotFoundException, SQLException {
    StringBuilder product_list = new StringBuilder();
    Class.forName(""com.mysql.jdbc.Driver"");
    try (java.sql.Connection conn= DriverManager.getConnection(""jdbc:mysql://localhost/test"", ""root"", ""miksa988"");){
    Statement st= conn.createStatement();
    st.executeQuery(""select productname, productstock,productdescription from products""); 
    ResultSet rs= st.getResultSet();

    while (rs.next()){

    product_list.append(rs.getString(""productname""));
    product_list.append(rs.getString("", ""));
    product_list.append(rs.getString(""productstock""));
    product_list.append(rs.getString("", "")); 
    product_list.append(rs.getString(""productdescription""));
    product_list.append(rs.getString(""\n""));






    }
    } catch(SQLException ex){
      product_list.append(ex.getMessage());
    }
      return product_list.toString();
    }


    public void addProduct() throws ClassNotFoundException {
    Class.forName(""com.mysql.jdbc.Driver"");
    try (java.sql.Connection conn= DriverManager.getConnection(""jdbc:mysql://localhost/test"", ""root"", ""miksa988"");){
    if (productname !=null &amp;&amp; !(productname.isEmpty()) &amp;&amp; productstock !=null &amp;&amp; !(productstock.isEmpty()) &amp;&amp; productdescription !=null &amp;&amp; !(productdescription.isEmpty())){
    Statement st = conn.createStatement();
    st.execute(""insert into products (productname,productstock, productdescription) values ('""+ productname + ""','""+productstock+""','""+productdescription+""')"");
    }  


    }catch(SQLException ex){
        System.out.println(""Error while trying to connect with databse""+ex);
}
}
}
</code></pre>

<p>And now this is my controller class </p>

<p>package controller;</p>

<pre><code>import java.sql.SQLException;
import model.Products;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@Controller
public class ProductController {

    @RequestMapping(value = ""/product"", method= RequestMethod.GET)
    public String createForm(ModelMap model) throws ClassNotFoundException, SQLException{
    model.addAttribute(""product"", new Products());
    model.addAttribute(""products"", Products.productList() );
    return ""product"";
    }
    @RequestMapping(value = ""/product"", method= RequestMethod.POST)
    public String addProduct(@ModelAttribute(""product"") Products product , ModelMap model) throws ClassNotFoundException ,SQLException {
        product.addProduct();
        createForm(model);
        return ""product"";
    }
}
</code></pre>

<p>and this is my JSP page</p>

<pre><code>&lt;%@page contentType=""text/html"" pageEncoding=""UTF-8""%&gt;
&lt;%@taglib uri=""http://www.springframework.org/tags/form"" prefix=""form""%&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8""&gt;
        &lt;title&gt;E-commerce&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h1&gt;Our Products&lt;/h1&gt;
        &lt;form:form action=""product.htm"" method=""post"" commandName=""product""&gt;
            &lt;form:label path=""productname""&gt;Enter product name:&lt;/form:label&gt;&lt;/br&gt;
            &lt;form:input id=""pname"" type=""text"" path=""productname"" placeholder=""product name""&gt;&lt;/form:input&gt;&lt;br&gt;
            &lt;form:label path=""productstock""&gt;Enter amount of items in stock:&lt;/form:label&gt;&lt;/br&gt;
            &lt;form:input id=""pstock"" type=""text"" path=""productstock"" placeholder=""product stock""&gt;&lt;/form:input&gt;&lt;br&gt;
            &lt;form:label path=""productdescription""&gt;Enter product description:&lt;/form:label&gt;&lt;/br&gt;
            &lt;form:input id=""pdescription"" type=""text"" path=""productdescription"" placeholder=""product description""&gt;&lt;/form:input&gt;&lt;br&gt;
            &lt;input type=""submit"" value=""Dodaj proizvod""/&gt;
        &lt;/form:form&gt;
            &lt;label for=""product_list"" id=""products_list_label""&gt;List of products: &lt;/label&gt; &lt;/br&gt;
            &lt;textarea id=""products_list"" rows=""20"" cols=""100"" readonly&gt;${products}&lt;/textarea&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>this is my SQL Query </p>

<pre><code> `product_id` INT NOT NULL AUTO_INCREMENT,
  `productname` VARCHAR(45) NOT NULL,
  `productstock` INT NOT NULL,
  `productdescription` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`product_id`));
</code></pre>

<p>Error occurred when i load page, i can see content (those labels and text area) but in text-area i can see this java lang class cast exception is there, so when i try to get products on list i can't. What could it be?</p>
","8957894","","8957894","","2018-06-28 15:22:33","2018-06-28 15:22:33","java.lang.ClassCastException: java.math.BigInteger cannot be cast to java.lang.Long Spring with sql and java","<java><spring><exception><spring-framework-beans>","0","6","0","","","51085969","127018","127018","spring-framework-beans","105","",""
"51127389","1","51128570","","2018-07-01 22:17:50","","1","2338","<p>I was looking for a way to create a non-singleton spring bean which can be ""partially"" autowired.</p>

<pre><code>@Component
class Example {
    private SpringBean1 bean1;
    private SpringBean2 bean2;
    private String dynamicDependancy;

    @Autowired
    public Example(SpringBean1 bean1, SpringBean2 bean2, String dynamicDepedency) {
        this.bean1 = bean1;
        this.bean2 = bean2;
        this.dynamicDepedency = dynamicDepedency;
    }
}
</code></pre>

<p>I want such a thing because sometimes the dependency is known only in runtime.
There is a way I have thought of which is creating a kind of a factory that create a static member class, in that way I can test the static member class:</p>

<pre><code>@Component
class ExampleFactory {
    private SpringBean1 bean1;
    private SpringBean2 bean2;

    @Autowired
    public ExampleFactory(SpringBean1 bean1, SpringBean2 bean2) {
        this.bean1 = bean1;
        this.bean2 = bean2;
    }

    public Example from(String dynamicDependency) {
        return new Example(bean1, bean2, dynamicDependency);
    }

    static class Example {
        private SpringBean1 bean1;
        private SpringBean2 bean2;
        private String dynamicDependancy;

        public Example(SpringBean1 bean1, SpringBean2 bean2, String 
            dynamicDependancy) {
            this.bean1 = bean1;
            this.bean2 = bean2;
            this.dynamicDependancy = dynamicDependancy;
        }
    }
}
</code></pre>

<p>I was looking a bit about the Prototype scope and using getBean(java.lang.String, java.lang.Object) make it harder to use dependency injection.
I'd like to know if there's any ""Spring way"" to do such things.</p>

<p>Thank you.</p>

<blockquote>
  <p>Update:
  I have found another solution and post an answer at another post:
  <a href=""https://stackoverflow.com/a/52021965/2580829"">https://stackoverflow.com/a/52021965/2580829</a></p>
</blockquote>
","2580829","","2580829","","2019-06-27 10:25:28","2019-06-27 10:25:28","Dynamic dependency injection in spring","<java><spring><dependency-injection><autowired><spring-framework-beans>","1","5","1","","","51127389","127018","127018","spring-framework-beans","105","",""
"51388400","1","51431602","","2018-07-17 18:49:47","","0","1789","<p>Case 1:<br>When I deploy an application with Jenkins in an environment say E1, it works successfully. App gets deployed and no errors on Jenkins console output. <br><br>Case 2:<br>When I deploy the same application with Jenkins in another environment say E2, the deploy operation fails but the app does get deploy in the server. Though I get errors in Jenkins console. I am confused, Is it code issue or server issue, how can I fix it? <br>Below is the error in this case:<br> 
<br></p>

<blockquote>
  <p>Target state: deploy failed on Cluster xCluster<br>
  15:53:27 java.lang.NoSuchMethodError: org.springframework.util.ClassUtils.forName(Ljava/lang/String;)Ljava/lang/Class;
  15:53:27    at org.springframework.oxm.jaxb.JaxbUtils.(JaxbUtils.java:44)
  15:53:27    at org.springframework.oxm.jaxb.Jaxb2Marshaller.createJaxbContext(Jaxb2Marshaller.java:272)
  15:53:27    at org.springframework.oxm.jaxb.AbstractJaxbMarshaller.afterPropertiesSet(AbstractJaxbMarshaller.java:125)
  15:53:27    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
  15:53:27    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
  15:53:27    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
  15:53:27    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
  15:53:27    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
  15:53:27    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
  15:53:27    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
  15:53:27    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
  15:53:27    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
  15:53:27    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
  15:53:27    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
  15:53:27    at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
  15:53:27    at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
  15:53:27    at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
  15:53:27    at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
  15:53:27    at org.springframework.boot.web.support.SpringBootServletInitializer.run(SpringBootServletInitializer.java:154)
  15:53:27    at org.springframework.boot.web.support.SpringBootServletInitializer.createRootApplicationContext(SpringBootServletInitializer.java:134)
  15:53:27    at org.springframework.boot.web.support.SpringBootServletInitializer.onStartup(SpringBootServletInitializer.java:87)
  15:53:27    at org.springframework.web.SpringServletContainerInitializer.onStartup(SpringServletContainerInitializer.java:169)
  15:53:27    at weblogic.servlet.internal.WebAppServletContext.initContainerInitializer(WebAppServletContext.java:1389)
  15:53:27    at weblogic.servlet.internal.WebAppServletContext.initContainerInitializers(WebAppServletContext.java:1326)
  15:53:27    at weblogic.servlet.internal.WebAppServletContext.initContainerInitializers(WebAppServletContext.java:1312)
  15:53:27    at weblogic.servlet.internal.WebAppServletContext.preloadResources(WebAppServletContext.java:1829)
  15:53:27    at weblogic.servlet.internal.WebAppServletContext.start(WebAppServletContext.java:2891)
  15:53:27    at weblogic.servlet.internal.WebAppModule.startContexts(WebAppModule.java:1661)
  15:53:27    at weblogic.servlet.internal.WebAppModule.start(WebAppModule.java:823)
  15:53:27    at weblogic.application.internal.ExtensibleModuleWrapper$StartStateChange.next(ExtensibleModuleWrapper.java:360)
  15:53:27    at weblogic.application.internal.ExtensibleModuleWrapper$StartStateChange.next(ExtensibleModuleWrapper.java:356)
  15:53:27    at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:42)
  15:53:27    at weblogic.application.internal.ExtensibleModuleWrapper.start(ExtensibleModuleWrapper.java:138)
  15:53:27    at weblogic.application.internal.flow.ModuleListenerInvoker.start(ModuleListenerInvoker.java:124)
  15:53:27    at weblogic.application.internal.flow.ModuleStateDriver$3.next(ModuleStateDriver.java:216)
  15:53:27    at weblogic.application.internal.flow.ModuleStateDriver$3.next(ModuleStateDriver.java:211)
  15:53:27    at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:42)
  15:53:27    at weblogic.application.internal.flow.ModuleStateDriver.start(ModuleStateDriver.java:73)
  15:53:27    at weblogic.application.internal.flow.StartModulesFlow.activate(StartModulesFlow.java:24)
  15:53:27    at weblogic.application.internal.BaseDeployment$2.next(BaseDeployment.java:729)
  15:53:27    at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:42)
  15:53:27    at weblogic.application.internal.BaseDeployment.activate(BaseDeployment.java:258)
  15:53:27    at weblogic.application.internal.EarDeployment.activate(EarDeployment.java:61)
  15:53:27    at weblogic.application.internal.DeploymentStateChecker.activate(DeploymentStateChecker.java:165)
  15:53:27    at weblogic.deploy.internal.targetserver.AppContainerInvoker.activate(AppContainerInvoker.java:80)
  15:53:27    at weblogic.deploy.internal.targetserver.operations.AbstractOperation.activate(AbstractOperation.java:587)
  15:53:27    at weblogic.deploy.internal.targetserver.operations.ActivateOperation.activateDeployment(ActivateOperation.java:150)
  15:53:27    at weblogic.deploy.internal.targetserver.operations.ActivateOperation.doCommit(ActivateOperation.java:116)
  15:53:27    at weblogic.deploy.internal.targetserver.operations.AbstractOperation.commit(AbstractOperation.java:339)
  15:53:27    at weblogic.deploy.internal.targetserver.DeploymentManager.handleDeploymentCommit(DeploymentManager.java:846)
  15:53:27    at weblogic.deploy.internal.targetserver.DeploymentManager.activateDeploymentList(DeploymentManager.java:1275)
  15:53:27    at weblogic.deploy.internal.targetserver.DeploymentManager.handleCommit(DeploymentManager.java:442)
  15:53:27    at weblogic.deploy.internal.targetserver.DeploymentServiceDispatcher.commit(DeploymentServiceDispatcher.java:176)
  15:53:27    at weblogic.deploy.service.internal.targetserver.DeploymentReceiverCallbackDeliverer.doCommitCallback(DeploymentReceiverCallbackDeliverer.java:195)
  15:53:27    at weblogic.deploy.service.internal.targetserver.DeploymentReceiverCallbackDeliverer.access$100(DeploymentReceiverCallbackDeliverer.java:13)
  15:53:27    at weblogic.deploy.service.internal.targetserver.DeploymentReceiverCallbackDeliverer$2.run(DeploymentReceiverCallbackDeliverer.java:68)
  15:53:27    at weblogic.work.SelfTuningWorkManagerImpl$WorkAdapterImpl.run(SelfTuningWorkManagerImpl.java:553)
  15:53:27    at weblogic.work.ExecuteThread.execute(ExecuteThread.java:311)
  15:53:27    at weblogic.work.ExecuteThread.run(ExecuteThread.java:263)</p>
</blockquote>
","7891056","","","","","2018-07-19 20:58:34","Why java.lang.NoSuchMethodError: org.springframework.util.ClassUtils.forName(Ljava/lang/String;)Ljava/lang/Class is thrown on Deploy operation?","<spring><spring-boot><weblogic12c><spring-framework-beans><spring-oxm>","1","7","","","","51388400","127018","127018","spring-framework-beans","105","",""
"51470944","1","","","2018-07-23 02:34:33","","1","48","<p>I'm struggling with sending a data which contains object as a member property.</p>

<p>This is the domain class.</p>

<pre><code>public class Timeline extends Post{
    String picture;
    User user;
    int like;
    ...
    (getters and setters)
}
</code></pre>

<p>And I've got the JSON data with this code already so I could get the data from 'obj' variable.</p>

<pre><code>var obj;
$.ajax({
method: ""GET"",
dataType: ""json"",
url: serverRoot + ""/json/auth/loginUser"",
async: false
  })
  .done(function(data) {
    obj = data;
 });
</code></pre>

<p>And the returned data looks like this.</p>

<pre><code> ""user"" : {
         ""userNo"" : 1,
         ""name"" : ""user01"",
             ...
      }
</code></pre>

<p>The next JSON data is the data I'd like to send to a server.</p>

<pre><code>{
  ""no"" : 23,
  ""content"" : ""hihi"",
  ""createdData"" : ""2018-07-22"",
  ""picture"" : null,
  ""user"" : {
     ""userNo"" : 1,
     ""name"" : ""user01"",
         ... **obj JSON data I got above**
  }
}
</code></pre>

<p>And this is the codes to send to a server.
(Here is the thing I've been stuck)</p>

<pre><code>$(""#sh-tl-post-btn"").click(() =&gt; {
  $.ajax({
     type: 'POST',
     url: '../../../json/timeline/add',
    data: {
      picture: $('#sh_tl_upload').val(),
      content: $('#sh_tl_post_write').val(),
      **user: [{""userNo"":obj.userNo}]**
    },
  }).done(function() {
    console.log(""inserted."");
    location.href = ""timeline.html""
   });
});
</code></pre>

<p>The Mapper file looks like this.</p>

<pre><code>&lt;insert id=""insert"" parameterType=""Timeline""&gt;
    &lt;choose&gt;
        &lt;when test=""picture != ''""&gt;
            insert into TML(tmlno, uno, tmlpath)
            values(#{no}, #{userNo}, #{picture})
        &lt;/when&gt;
        &lt;otherwise&gt;
            insert into TML(tmlno, uno)
            values(#{no}, #{userNo})
        &lt;/otherwise&gt;
    &lt;/choose&gt;
&lt;/insert&gt;
</code></pre>

<p>I've been searching what to write on here instead of 
   <strong>user: [{""userNo"":obj.userNo}]</strong> , this...</p>

<p>I've been trying </p>

<pre><code>user : {""userNo"" : obj.userNo}
user.userNo : obj.userNo
user.[0].userNo : obj.userNo
...
</code></pre>

<p>but the console keeps saying </p>

<pre><code>    [Request processing failed; nested exception is 
     org.springframework.beans.InvalidPropertyException:.....
</code></pre>

<p>this kind of errors.</p>

<p>Is there anyone could help me how to bind the nested object's property via ajax 
 JSON data? Thanks in advance.</p>
","9850929","","9850929","","2018-07-23 04:30:47","2018-07-23 04:30:47","How do I bind object property and send the data via ajax?","<javascript><jquery><ajax><spring-framework-beans>","0","5","","","","51470944","127018","127018","spring-framework-beans","105","",""
"51555542","1","51559127","","2018-07-27 10:02:19","","0","238","<p>I am developing an application in spark and scala and using spring to read configuration files.</p>

<p>My Environment specific files available in that directory like this</p>

<blockquote>
  <p>src/main/resource/DEV</p>

<pre><code>      mms_kafka.properties

      mms_app.properties

      pps_kafka.properties

      pps_app.properties
</code></pre>
</blockquote>

<p>And common files under src/main/resoruce like below</p>

<blockquote>
  <p>src/main/resource </p>

<pre><code>mmsmappings.properties 

ppsmappings.properties
</code></pre>
</blockquote>

<p>Currently, I am doing like below and working fine</p>

<pre><code>@PropertySource(value = Array(""classpath:${ENV}/mms_app.properties"",""classpath:${ENV}/mms_kafka.properties"",""classpath:$mmsmapping.properties""), ignoreResourceNotFound=false)

Spark submit command: spark2-submit --master yarn --deploy-mode client --class job.Driver --conf 'spark.driver.extraJavaOptions=-DENV=DEV' --driver-memory 4g --executor-memory 16g --num-executors 4 --executor-cores 4  temp-0.0.1-shaded.jar 
</code></pre>

<p>But I want to read all the files for a particular prefix(mms/pps) like below , I tried it but it is giving ENV and APP place holder is not resolve</p>

<pre><code>@PropertySource(value = Array(""classpath:${ENV}/${APP}_app.properties"",""classpath:${ENV}/${APP}_kafka.properties"",""classpath:${APP}mapping.properties""), ignoreResourceNotFound=false)


Spark submit command: spark2-submit --master yarn --deploy-mode client --class job.Driver --conf 'spark.driver.extraJavaOptions=-DENV=DEV' --conf 'spark.driver.extraJavaOptions=-DAPP=mms' --driver-memory 4g --executor-memory 16g --num-executors 4 --executor-cores 4  temp-0.0.1-shaded.jar
</code></pre>

<p>How should I fix this?</p>
","4204198","","4204198","","2018-07-27 10:07:59","2018-07-27 13:33:44","How to read all the properties files with given prefix in spark, spring application?","<spring><apache-spark><spring-boot><spring-framework-beans>","1","0","0","","","51555542","127018","127018","spring-framework-beans","105","",""
"51653709","1","","","2018-08-02 12:30:17","","0","173","<p>i've got a problem when I try to run my Citrus v.2.7.5 Tests with an API on a server which responds customized HTTP-Status-Codes to my citrus client. My tests are throwing IllegalArgument Exceptions because the Server responds an message with an 520 Http-Status-Code.</p>

<p>I think the problem is because of the spring-web v.4.3.14 framework which is used by Citrus. The spring-web contains an HttpStatus class with enums of valid Status-Codes. When u try to make a valueOf() of a custom status-code which is not ""valid"" it will throw an error:</p>

<pre><code>/**
 * Return the enum constant of this type with the specified numeric value.
 * @param statusCode the numeric value of the enum to be returned
 * @return the enum constant with the specified numeric value
 * @throws IllegalArgumentException if this enum has no constant for the specified numeric value
 */
public static HttpStatus valueOf(int statusCode) {
    HttpStatus status = resolve(statusCode);
    if (status == null) {
        throw new IllegalArgumentException(""No matching constant for ["" + statusCode + ""]"");
    }
    return status;
</code></pre>

<p>}</p>

<p>In newer versions (5.x) of spring-web this error is fixxed and u can use custom http-status-codes but citrus works with this older version....
Maybe i'm wrong and the exception get's thrown somewhere else, but it has to do with the custom http-status-code, because if we get an 200 HTTP-Status-code everything works fine.</p>

<p>Does anyone know how to solve this problem with citrus?</p>
","10170270","","","","","2018-08-02 12:30:17","Citrus framework ""no matching constant for [520]"" - Custom HTTP Status Codes","<java><http-status-codes><citrus-framework><spring-framework-beans>","0","2","","","","51653709","127018","127018","spring-framework-beans","105","",""
"51752657","1","","","2018-08-08 17:42:26","","0","717","<p>This issue is widely commented in Stack Overflow, but none of the solutions seems to fit my project.</p>

<p>I have two independant projects (<code>MainApplication</code> and <code>LibraryApplication</code>), then I want to export LibraryApplication , and import it into  main project (this is a reduced approach for keeping things simple).</p>

<p>I exported the library.jar to libs/ folder in the main project, then I added the compile files instruction to  build.gradle.</p>

<p>The jar is indeed added to the classpath, and I can see the classes from MainApplication. So I added <code>@ComponentScan</code>, <code>@EnableJpaRepositories</code>, <code>@EntityScan</code>, etc. but none of those annotations seems to work, because only MAIN_ENTITY is created when I run the <code>MainApplication</code> project.</p>

<p><a href=""https://i.stack.imgur.com/Fk7Rb.png"" rel=""nofollow noreferrer"">LibraryApplication project structure</a></p>

<p><a href=""https://i.stack.imgur.com/ieRUu.png"" rel=""nofollow noreferrer"">MainApplication project structure</a></p>

<p><a href=""https://i.stack.imgur.com/JjwWj.png"" rel=""nofollow noreferrer"">Only MAIN_ENTITY is created</a></p>

<p>I tried many of the solutions commented in other related  questions, but none works for me:</p>

<ul>
<li>I moved <code>MainApplication.java</code> to an upper package level without results.</li>
<li>I created an <code>AppConfig.java</code> in <code>LibraryApplication</code> project, and configured <code>@ComponentScan(""com.app"")</code>,<code>@EntityScan(""com.app"")</code>, <code>@EnableJpaRepositories(""com.app"")</code> and injected the class in the <code>MainApplication</code> without results.</li>
<li>I removed the <code>.*</code> from my annotations, so instead of <code>@ComponentScan(""com.app.*"")</code> I have <code>@ComponentScan(""com.app"")</code> without results.</li>
</ul>

<p>How can I achieve the expected results?</p>

<p>I created two github repos so you can check/download the code.</p>

<ul>
<li><a href=""https://github.com/ferdonof/main.git"" rel=""nofollow noreferrer"">https://github.com/ferdonof/main.git</a></li>
<li><a href=""https://github.com/ferdonof/library.git"" rel=""nofollow noreferrer"">https://github.com/ferdonof/library.git</a></li>
</ul>

<p>Thanks in advance!</p>

<p><strong>UPDATE</strong></p>

<p>Sharing the build.gradle config of each project:</p>

<p><strong><em>For library</em></strong></p>

<pre><code>buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath(""org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.app'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

bootRepackage  {
    classifier = 'exec'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    runtime('com.h2database:h2')
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}
</code></pre>

<p><strong><em>For main</em></strong></p>

<pre><code>buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath(""org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.app'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile files('libs/library.jar')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    runtime('com.h2database:h2')
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}
</code></pre>
","3997936","","3997936","","2018-08-11 19:04:01","2018-08-11 19:04:01","Spring Boot: can't load entities, services, etc. from jar","<java><spring-boot><spring-data-jpa><spring-framework-beans>","0","7","","","","51752657","127018","127018","spring-framework-beans","105","",""
"51784883","1","","","2018-08-10 10:51:18","","1","22","<p>I'm new to both using gradle and springframework.</p>

<p>How can I use springframework as a gradle plugin without using any external repositories (including a local maven repository.)? i.e. just use dowloaded springframework files, place them on my local directory and tell gradle to reference to them instead.</p>
","10208022","","","","","2018-08-10 10:59:47","How do I setup springframework on gradle with only using local directories as repositories?","<java><spring><gradle><spring-framework-beans>","1","1","","","","51784883","127018","127018","spring-framework-beans","105","",""
"52173285","1","","","2018-09-04 20:03:20","","0","29","<p>I am using spring and in that unable to read Spring.xml file.
ApplicationContext context = new ClassPathXmlApplicationContext(""Spring.xml"");
showing me this error:
Caused by: java.io.FileNotFoundException: class path resource [Spring.xml] cannot be opened because it does not exist</p>

<p><a href=""https://i.stack.imgur.com/0GPvl.png"" rel=""nofollow noreferrer""><em>xml path</em>emphasized text</a></p>
","8994530","","","","","2018-09-04 20:31:06","Unable to access XML file in spring","<xml><spring><spring-framework-beans>","1","1","","","","52173285","127018","127018","spring-framework-beans","105","",""
"52174157","1","","","2018-09-04 21:23:05","","0","24","<p>I am working with spring framework. My project is a ""Maven Project"".</p>

<pre><code>//This is a function inside my navigator.jsp file
function selectNavigator(id) {
    var color = """";
    var colorSelected = ""rgba(80,165,219)"";
    $(""#nav-beacons"").css(""background-color"", color);
    $(""#nav-messages"").css(""background-color"", color);
    $(""#nav-locations"").css(""background-color"", color);
    $(""#nav-analytics"").css(""background-color"", color);
    $(""#nav-company"").css(""background-color"", color);
    $(""#nav-users"").css(""background-color"", color);
    $(id).css(""background-color"", colorSelected);
}
</code></pre>

<p>This function changes the selected item's background with particular color while leaving the rest of navigation items un-colored.</p>

<p>And this is my template...</p>

<pre><code>&lt;definition name=""mainTemplate"" template=""/WEB-INF/templates/dashboard/index.jsp""&gt;
    &lt;put-attribute name=""title"" value=""Home"" /&gt;
    &lt;put-attribute name=""heading"" value=""Home"" /&gt;
    &lt;put-attribute name=""onLoad"" value=""selectNavigator('nav-users')"" /&gt;
    &lt;put-attribute name=""header""    value=""/WEB-INF/templates/dashboard/header.jsp"" /&gt;
    &lt;put-attribute name=""body""&gt;
        &lt;definition template=""/WEB-INF/templates/dashboard/body.jsp""&gt;
            &lt;put-attribute name=""navigator"" value=""/WEB-INF/templates/dashboard/navigator.jsp"" /&gt;
            &lt;put-attribute name=""body_content"" value="""" /&gt;
        &lt;/definition&gt;
    &lt;/put-attribute&gt;
    &lt;put-attribute name=""footer""    value=""/WEB-INF/templates/dashboard/footer.jsp"" /&gt;  
&lt;/definition&gt;
</code></pre>

<p>I have my ""selectNavigator"" function be called ""onload"" but it doesn't work. and I have no idea why it doesn't work.</p>
","5213658","","5213658","","2018-09-05 15:19:54","2018-09-05 15:19:54","How to call javascript function while loading a new template?","<javascript><jsp><spring-framework-beans>","2","4","","","","52174157","127018","127018","spring-framework-beans","105","",""
"52439033","1","","","2018-09-21 07:50:12","","0","3054","<p>Can you please help with this: </p>

<p>I start my application but it is closing down after few seconds error below:    </p>

<pre><code>2018-09-21 17:34:59,500  INFO | main | com.zaxxer.hikari.HikariDataSource                        93 | springHikariCP - is starting. | 
        2018-09-21 17:35:29,535  INFO | main | com.zaxxer.hikari.pool.HikariPool                        213 | springHikariCP - is closing down. | 
        2018-09-21 17:35:29,855  WARN | main | o.s.context.support.ClassPathXmlApplicationContext       551 | Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'appEntityManagerFactory' defined in class path resource [META-INF/spring/app.repositories.xml]: Invocation of init method failed; nested exception is com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Exception during pool initialization: springHikariCP - Connection is not available, request timed out after 30002ms. | 
        2018-09-21 17:35:29,870 ERROR | main | com.my.jos.jmx.Driver                            72 | CRITICAL ERROR: Error encountered starting application. | 
        org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'appEntityManagerFactory' defined in class path resource [META-INF/spring/app.repositories.xml]: Invocation of init method failed; nested exception is com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Exception during pool initialization: springHikariCP - Connection is not available, request timed out after 30002ms.
</code></pre>
","8094897","","","","","2018-11-14 12:46:33","com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Exception during pool initialization: springHikariCP - Connection is not available","<spring-boot><hikaricp><spring-framework-beans>","1","0","","","","52439033","127018","127018","spring-framework-beans","105","",""
"52447223","1","","","2018-09-21 15:49:11","","2","2990","<p>APPLICATION FAILED TO START</p>

<hr>

<p>Description:</p>

<p>Parameter 0 of method <code>modifyRequestBodyGatewayFilterFactory</code> in <code>org.springframework.cloud.gateway.config.GatewayAutoConfiguration</code> required a bean of type <code>'org.springframework.http.codec.ServerCodecConfigurer'</code> that could not be found.</p>

<p>Action:</p>

<p>Consider defining a bean of type <code>'org.springframework.http.codec.ServerCodecConfigurer'</code> in your configuration.</p>

<p>Picked up JAVA_TOOL_OPTIONS: -agentlib:jvmhook<br>
Picked up _JAVA_OPTIONS: -Xbootclasspath/a:""C:\Program Files (x86)\HPE\Unified Functional Testing\bin\java_shared\classes\jasmine.jar""<br>
Picked up JAVA_TOOL_OPTIONS: -agentlib:jvmhook</p>
","10326161","","5490782","","2018-10-20 03:09:15","2020-01-10 04:17:52","bean of type 'org.springframework.http.codec.ServerCodecConfigurer' that could not be found","<java><spring><spring-boot><javabeans><spring-framework-beans>","2","2","1","","","52447223","127018","127018","spring-framework-beans","105","",""
"52912512","1","","","2018-10-21 05:59:00","","-2","64","<p>i was searching for an hour to find a solution to my problem and i i'm using maven to pom.xml to find the library of this import org.springframework.jdbc.core.JdbcTemplate  </p>

<p><strong>my pom.xml</strong>     </p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-css lang-css prettyprint-override""><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;project xmlns=""http://maven.apache.org/POM/4.0.0""
	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd""&gt;
	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
	&lt;groupId&gt;org.sample&lt;/groupId&gt;
	&lt;artifactId&gt;test1&lt;/artifactId&gt;
	&lt;name&gt; Spring boots test&lt;/name&gt;
	&lt;version&gt;0.0.2-SNAPSHOT&lt;/version&gt;
	&lt;dependencies&gt;
		&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter --&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
			&lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;
			&lt;version&gt;2.0.5.RELEASE&lt;/version&gt;
		&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.springframework&lt;/groupId&gt;
    &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;
    &lt;version&gt;3.2.1.RELEASE&lt;/version&gt;
&lt;/dependency&gt;
	&lt;/dependencies&gt;
	&lt;properties&gt;
		&lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;
		&lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;
		&lt;java.version&gt;1.8&lt;/java.version&gt;
	&lt;/properties&gt;

&lt;/project&gt;</code></pre>
</div>
</div>
</p>

<p><em>the result was :-</em> </p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-css lang-css prettyprint-override""><code>[INFO] Scanning for projects...
[INFO] 
[INFO] --------------------------&lt; org.sample:test1 &gt;--------------------------
[INFO] Building Spring boots test 0.0.2-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] Downloading from central: https://repo.maven.apache.org/maven2/org/springframework/spring-jdbc/3.2.1.RELEASE/spring-jdbc-3.2.1.RELEASE.pom
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1.626 s
[INFO] Finished at: 2018-10-21T08:41:16+03:00
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal on project test1: Could not resolve dependencies for project org.sample:test1:jar:0.0.2-SNAPSHOT: Failed to collect dependencies at org.springframework:spring-jdbc:jar:3.2.1.RELEASE: Failed to read artifact descriptor for org.springframework:spring-jdbc:jar:3.2.1.RELEASE: Could not transfer artifact org.springframework:spring-jdbc:pom:3.2.1.RELEASE from/to central (https://repo.maven.apache.org/maven2): sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target -&gt; [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException</code></pre>
</div>
</div>
</p>
","10513776","","","","","2018-10-21 06:09:30","i didn't find ""import org.springframework.jbdc.core.JsbcTemplate""","<java><maven><spring-boot><spring-framework-beans>","1","0","","2018-10-21 07:32:52","","52912512","127018","127018","spring-framework-beans","105","",""
"53322687","1","","","2018-11-15 15:26:47","","0","60","<p>I have 3 tables namely</p>

<p>Port_Register</p>

<pre><code>Mobile_Number(Primary Key) | Gaining_Code(Foreign Key to Telecom_Codes) | Losing_Codes
</code></pre>

<p>Telecom_Codes </p>

<pre><code>Telecom_Code(Primary Key) | Contact_Provider_Id(Foreign_Key to Contact_Provider)
</code></pre>

<p>Contact_Provider</p>

<pre><code>Contact_Provider_Id | Contact_Name
</code></pre>

<p><code>Gaining_Code</code> and <code>Losing_Code</code> are actually <code>Telecom_Code</code></p>

<p>for the following scenario I have written entity classes which look like following</p>

<pre><code>@Entity
@Table(name=""Port_Register"")
public class Port_Register {
    @Id
    @Column(name=""MOBILE_NUMBER"")
    private String mobile_Number;

    @ManyToOne
    @JoinColumn(name=""GAINING_CODE"",referencedColumnName=""TELECOM_CODE"")
    private TelecomCodes gainingCode;

    @ManyToOne
    @JoinColumn(name=""LOSING_CODE"",referencedColumnName=""TELECOM_CODE"")
    private TelecomCodes losingCSPCode;
}


    @Entity
    @Table(name=""Telecom_Codes"")
    public class TelecomCodes {

        @Id
        @Column(name=""TELECOM_CODE"")
        private String telecomCode;

        @OneToOne
        @Column(name = ""CONTACT__Provider_Id"")
        private ContactProvider contactProviderID;
    }
    @Entity
    @Table(name=""ContactProvider"")
    public class ContactProvider {
        @Column(name=""CONTACT__Provider_Id"")
        private String contactProviderId;

        @Column(name=""CONTACT__Provider_NAME"")
        private String ContactProviderName;
    }
</code></pre>

<p>I have to write a function in repository class to fetch data in the format</p>

<pre><code>MobileNumber|Gaining_code|LosingCode| Gaining_provider_Name| Losing_provider_Name
</code></pre>

<p>All I know is for crud there is a predefined repository interface whose function gets to know abt implementation during run time.</p>

<p>so i created a repository that looks like</p>

<pre><code>public interface PortOutRegisterRepository  extends CrudRepository&lt; Ported_Register,String&gt; {

//  public void store(T t);

//  public T retrieve(int id);

    //  public T delete(int id);
}
</code></pre>

<p>I thought I will call </p>

<pre><code>PortOutRegisterRepository customRep;
List&lt;Ported_Register&gt; m=new ArrayList&lt;Ported_Register&gt;();
m=customRep.findall();
</code></pre>

<p>and then
I can use this to get individual info</p>

<pre><code> for(Ported_Register p:m)
    {
    p.getGainingCode().getContactProviderID().getContactName();
    }
</code></pre>

<p>But this is completely wrong.</p>

<p>Please help me on how i should write repository for this. </p>

<p>Any help is appreciated</p>
","10644885","","10644885","","2018-11-15 19:42:44","2018-11-15 19:42:44","writing repository class to fetch data from 3 tables that are linked","<java><hibernate><spring-framework-beans>","1","0","","","","53322687","127018","127018","spring-framework-beans","105","",""
"53370995","1","53371042","","2018-11-19 08:41:52","","2","546","<p>I have seen general practice to create Logger instance as static properties of a class annotated with any of the Spring's Annotation ( <code>@Component</code>, <code>@Service</code> ).</p>

<p>Since, all beans created are by default singleton in nature. Do we really need static fields in this scnerio as there is only going to be once instance after all ?</p>
","1988798","","","","","2018-11-19 09:04:22","Do we need static fields in Spring Beans?","<java><spring><spring-framework-beans>","1","8","0","","","53370995","127018","127018","spring-framework-beans","105","",""
"53399958","1","","","2018-11-20 19:11:56","","0","354","<p>I can autowire by type and by name in the XML config in the following manner</p>

<pre><code>&lt;bean name=""employee1"" class=""com.Class1"" autowire=""byName""&gt;
&lt;bean name=""employee2"" class=""com.Class2"" autowire=""byType""&gt;
</code></pre>

<p>But how can I accomplish the same in Java config? I mean, what is Java Config equivalent of autowire=""byName"" and by autowire=""byType"" attributes?</p>

<pre><code>@Configuration
public class JavaConfig {

//How to configure beans here, like above?

}
</code></pre>

<p>The following code is not working</p>

<pre><code>    @Bean
    public Company company(){
return new Company();
    }

    @Bean
    public Employee employee1(@Autowired Company company){
return new Employee();
    }
</code></pre>

<p>Thanks in advance!</p>
","6323527","","6323527","","2018-11-21 10:46:07","2018-11-21 10:52:27","Spring autowire=""byType"" with Java Config?","<spring><spring-framework-beans>","1","1","","","","53399958","127018","127018","spring-framework-beans","105","",""
"53401442","1","53403170","","2018-11-20 21:00:02","","7","2818","<p>I'm having following config in my production files:</p>

<pre><code>@Configuration
internal class Config {

  @Bean
  fun clock() = Clock.systemUTC()
}
</code></pre>

<p>In tests:</p>

<pre><code>@Configuration
class ClockTestConfiguration {

  @Bean
  fun clock() = SetableClock()
}
</code></pre>

<p>My test annotations:</p>

<pre><code>@SpringBootTest(
  webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT,
  classes = [
    MyApplication::class,
    ClockTestConfiguration::class
  ]
)
class MyTest {
...
</code></pre>

<p>When I was using Spring Boot <code>2.0.5.RELEASE</code> it worked like a charm. After upgrading to <code>2.1.0.RELEASE</code> it fails during bean registration.</p>

<pre><code>Caused by: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'clock' defined in com.foo.clock.ClockTestConfiguration: 
Cannot register bean definition [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=clockTestConfiguration; factoryMethodName=clock; initMethodName=null; destroyMethodName=(inferred); 
defined in com.foo.clock.ClockTestConfiguration] for bean 'clock': There is already [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=config; factoryMethodName=clock; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/foo/clock/Config.class]] bound.
at org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:894)
</code></pre>

<p>Is there a clean way to override such bean?</p>
","296427","","296427","","2018-11-20 22:17:25","2018-11-20 23:29:48","Registering test bean with same name in Spring Framework 5.1","<spring><spring-boot><kotlin><spring-framework-beans>","1","2","","2020-02-07 23:21:05","","53401442","127018","127018","spring-framework-beans","105","",""
"53505727","1","53508712","","2018-11-27 18:12:29","","2","1284","<p>I'm running my gradle project with ""gradle bootrun"" on a cmd prompt window.</p>

<p>The error I get is this:</p>

<ul>
<li>What went wrong:
A problem occurred configuring root project 'kyp4-backend'.

<blockquote>
  <p>Could not resolve all artifacts for configuration ':classpath'.
  Could not find org.springframework.boot:spring-boot-gradle-plugin:1.4.0.BUILD-SNAPSHOT.
   Searched in the following locations:</p>
  
  <ul>
  <li><a href=""https://repo.maven.apache.org/maven2/org/springframework/boot/spring-boot-gradle-plugin/1.4.0.BUILD-SNAPSHOT/maven-metadata.xml"" rel=""nofollow noreferrer"">https://repo.maven.apache.org/maven2/org/springframework/boot/spring-boot-gradle-plugin/1.4.0.BUILD-SNAPSHOT/maven-metadata.xml</a> <strong><em>&lt;-- PRODUCES 404 ERROR when you go to page</em></strong></li>
  <li><a href=""https://repo.maven.apache.org/maven2/org/springframework/boot/spring-boot-gradle-plugin/1.4.0.BUILD-SNAPSHOT/spring-boot-gradle-plugin-1.4.0.BUILD-SNAPSHOT.pom"" rel=""nofollow noreferrer"">https://repo.maven.apache.org/maven2/org/springframework/boot/spring-boot-gradle-plugin/1.4.0.BUILD-SNAPSHOT/spring-boot-gradle-plugin-1.4.0.BUILD-SNAPSHOT.pom</a> <strong><em>&lt;-- PRODUCES 404 ERROR when you go to page</em></strong></li>
  <li><a href=""https://repo.maven.apache.org/maven2/org/springframework/boot/spring-boot-gradle-plugin/1.4.0.BUILD-SNAPSHOT/spring-boot-gradle-plugin-1.4.0.BUILD-SNAPSHOT.jar"" rel=""nofollow noreferrer"">https://repo.maven.apache.org/maven2/org/springframework/boot/spring-boot-gradle-plugin/1.4.0.BUILD-SNAPSHOT/spring-boot-gradle-plugin-1.4.0.BUILD-SNAPSHOT.jar</a> <strong><em>&lt;-- PRODUCES 404 ERROR when you go to page</em></strong>
  Required by:
   project :</li>
  </ul>
</blockquote></li>
</ul>

<p>************ GRADLE *****************</p>

<p>So here's my build.gradle file:</p>

<pre><code>buildscript {
    ext {
        springBootVersion = '1.5.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath(""org.springframework.boot:spring-boot-gradle-plugin:1.4.0.BUILD-SNAPSHOT"") ***&lt;-- THIS DOESN'T EXIST on repo.Spring.io. Only 1.2.0 = 5.x*** or ***&lt;-- on repo.spring.io***
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 
apply plugin: 'org.springframework.boot'
//apply plugin: 'war'

version = '0.0.1'
sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
    flatDir {
        dirs 'repository'
    }
    mavenCentral()
}
ext {
    springCloudVersion = 'Edgware.SR3'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile(""org.springframework.boot:spring-boot-devtools"")
    compile('org.springframework.boot:spring-boot-starter-actuator')

    compile group: 'joda-time', name: 'joda-time'

    compile group: 'com.myfolder', name: 'all_pfs', version: '7.1.9'
    compile group: 'com.myfolder', name: 'pfs-client', version: '7.1.9'
    compile group: 'com.myfolder.pfs.wic', name: 'pfs-wic', version: '1.1.0.RC3'
    compile group: 'com.picketlink.picketlink', name: 'picketlink-fed', version: '2.0.3-SNAPSHOT'

    compile group: 'commons-httpclient', name: 'commons-httpclient', version: '3.1'
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    compile group: 'org.apache.httpcomponents', name: 'httpclient'
    compile group: 'xstream', name: 'xstream', version: '1.2.2'
    compile group: 'javax.ejb', name: 'javax.ejb-api', version: '3.2'

    compile group: 'io.springfox', name: 'springfox-swagger2', version:'2.6.1'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version:'2.6.1'

compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'

compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.8.3'

compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.13'

compile group: 'org.springframework', name: 'spring-messaging', version: '4.2.6.RELEASE'


compile group: 'org.springframework', name: 'spring-websocket', version: '4.3.11.RELEASE'

compile('org.springframework.boot:spring-boot-starter-test')

compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '1.5.6.RELEASE'


testCompile group: 'com.microsoft.sqlserver', name: 'sqljdbc4', version: '4.0'

    compile name: ""sqljdbc4-4.0""

    //Added to implement slf4j logger
    compile group: 'org.slf4j', name:'slf4j-api', version: '1.7.2'                                                                                                                                                                            
    //compile group: 'ch.qos.logback', name:'logback-classic', version: '1.0.9'                                                                                                                                                                 
    //compile group: 'ch.qos.logback', name:'logback-core', version: '1.0.9' 


// jsoup HTML parser library @ https://jsoup.org/
compile 'org.jsoup:jsoup:1.11.3'

compile group: 'com.datastax.cassandra',name: 'cassandra-driver-core',version:'3.2.0'
compile('org.springframework.boot:spring-boot-starter-data-cassandra')

compile('org.projectlombok:lombok:1.18.2')

compile group: 'com.myfolder.service.fusion.audit.client', name: 'audit-client', version: '2.0.1.RELEASE'

compile group: 'org.apache.httpcomponents', name: 'httpasyncclient', version: '4.1.3'

}

dependencyManagement {
    imports {
        mavenBom ""org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}""
    }
}
</code></pre>

<p>But this is all starting with org.springframework.boot/.context/web.client does not exist:</p>

<p>Here's a couple images to show:
<a href=""https://i.stack.imgur.com/Lk5TO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Lk5TO.png"" alt=""Netbeans showing the SpringFramework doesn&#39;t exist""></a></p>

<p><a href=""https://i.stack.imgur.com/zPfHR.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/zPfHR.png"" alt=""Right Click on JDK 1.8 showing CLASSES where I added spring""></a></p>

<p><a href=""https://i.stack.imgur.com/3Ad6r.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3Ad6r.png"" alt=""This shows where the Spring JAR files live based on where Netbeans expects them to live""></a></p>

<p>I deleted the Netbeans CACHE and let Netbeans rebuild projects and indicies... still, no joy!</p>

<p>Any help or insight would be greatly appreciated.</p>
","2547324","","","","","2018-11-27 21:49:47","Trying to compile with gradle bootrun and get cannot find spring-boot-gradle-plugin:1.4.0.BUILD-SNAPSHOT","<java><spring-boot><spring-framework-beans>","1","0","","","","53505727","127018","127018","spring-framework-beans","105","",""
"53607123","1","55459661","","2018-12-04 06:46:58","","0","114","<p>I am creating a cache client wrapper using spring framework. This is to provide cache layer to our application. Right now, we are using redis. I have found out that spring-data-redis library is very good for creating my wrapper.</p>

<p>My application will pass a configuration POJO to my wrapper and will then use the interface that I will provide.</p>

<p>spring-data-redis provides an easy way to access redis using two variables.</p>

<pre><code>RedisConnectionFactory
RedisTemplate&lt;String, Object&gt;
</code></pre>

<p>Although, I will be providing a better interface to my application with my interface functions like:</p>

<pre><code>public Object getValue( final String key ) throws ConfigInvalidException;
public void setValue( final String key, final Object value ) throws ConfigInvalidException;
public void setValueWithExpiry(final String key, final Object value, final int seconds, final TimeUnit timeUnit) throws ConfigInvalidException;
</code></pre>

<p>I still want to provide RedisConnectionFactory and RedisTemplate beans.</p>

<p>My question is how to initialize my wrapper application with this configuration POJO?</p>

<p>Currently my configuration looks like this:</p>

<pre><code>import java.util.List;


public class ClusterConfigurationProperties {

    List&lt;String&gt; nodes;
    public List&lt;String&gt; getNodes() {
        return nodes;
    }

    public void setNodes(List&lt;String&gt; nodes) {
        this.nodes = nodes;
    }
}
</code></pre>

<p>And my AppConfig.java looks like this:</p>

<pre><code>import com.ajio.Exception.ConfigInvalidException;
import com.ajio.configuration.ClusterConfigurationProperties;
import com.ajio.validator.Validator;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.redis.connection.RedisClusterConfiguration;
import org.springframework.data.redis.connection.RedisConnectionFactory;
import org.springframework.data.redis.connection.jedis.JedisConnectionFactory;
import org.springframework.data.redis.core.RedisTemplate;
import org.springframework.data.redis.serializer.GenericToStringSerializer;
import org.springframework.data.redis.serializer.StringRedisSerializer;

@Configuration
public class AppConfig {

    @Autowired
    private ClusterConfigurationProperties clusterConfigurationProperties;
    @Autowired
    private Validator validator;

    @Bean
    ClusterConfigurationProperties clusterConfigurationProperties() {
       return null;
    }
    @Bean
    Validator validator() {
        return new Validator();
    }

    @Bean
    RedisConnectionFactory connectionFactory() throws ConfigInvalidException {
        if (clusterConfigurationProperties == null)
            throw new ConfigInvalidException(""Please provide a cluster configuration POJO in context"");
        validator.validate(clusterConfigurationProperties);
        return new JedisConnectionFactory(new RedisClusterConfiguration(clusterConfigurationProperties.getNodes()));
    }

    @Bean
    RedisTemplate&lt;String, Object&gt; redisTemplate(RedisConnectionFactory factory) throws ConfigInvalidException {

        RedisTemplate&lt;String, Object&gt; redisTemplate = new RedisTemplate&lt;&gt;();
        redisTemplate.setConnectionFactory(connectionFactory());
        redisTemplate.setKeySerializer( new StringRedisSerializer() );
        redisTemplate.setHashValueSerializer( new GenericToStringSerializer&lt;&gt;( Object.class ) );
        redisTemplate.setValueSerializer( new GenericToStringSerializer&lt;&gt;( Object.class ) );

        return redisTemplate;
    }
}
</code></pre>

<p>Here I am expecting a ClusterConfigurationProperties POJO as a bean in application which will be using the interface of wrapper.</p>

<p>But to compile my wrapper, I have created a null bean itself. Then when application uses it, there will be two beans, one of application and one of wrapper.</p>

<p>How should I resolve this problem?</p>
","1936305","","1936305","","2019-04-01 16:18:07","2019-04-01 16:53:30","Injecting configuration dependency","<spring><spring-framework-beans>","1","6","","","","53607123","127018","127018","spring-framework-beans","105","",""
"53816831","1","","","2018-12-17 14:02:47","","0","46","<p>Tried to run an example of  spring framwork version 2.1.0 and spring.core 3.2.5. The type org.springframework.util.concurrent.ListenableFuture cannot be resolved is error while importing kafka template.please suggest the compatable version of spring-kafka</p>
","6937696","","","","","2018-12-17 14:02:47","what is compatable version of spring-kafka for spring framwork 2.1.0","<spring-kafka><spring-framework-beans>","0","3","","","","53816831","127018","127018","spring-framework-beans","105","",""
"53836903","1","","","2018-12-18 16:05:11","","2","93","<p>Hello I am actually working on a REST server using Spring-boot, hibernate, psql and I am experiencing some difficulties after adding an OneToOne relationship between  entities.</p>

<p>Here are the 2 entities:</p>

<p>Pays: </p>

<pre><code>@Entity
@Table(name = ""pays"")
public class Pays implements Serializable {

private static final long serialVersionUID = 1L;

@Id
@JsonProperty(""codePays"")
private String codePays;

@Column(name = ""libelle_pays"")
@JsonProperty(""libellePays"")
private String libellePays;

@OneToOne(mappedBy = ""pays"",cascade = CascadeType.ALL, fetch = FetchType.LAZY, optional=false)
private Traduction traduction;

protected Pays() {
}

public Pays(String codePays,String libellePays) {
    this.codePays = codePays;
    this.libellePays = libellePays;
}
</code></pre>

<p>and Traduction:</p>

<pre><code>@Entity
@Table(name = ""traduction"")
public class Traduction implements Serializable {

private static final long serialVersionUID = 1L;

@Id
@GeneratedValue(strategy = GenerationType.AUTO)
@JsonProperty(""codeTrad"")
private long codeTrad;

@Column(name = ""defaultLanguage"")
@JsonProperty(""defaultLanguage"")
private boolean defaultLanguage;

@OneToOne(cascade = CascadeType.ALL,fetch = FetchType.LAZY)
@JoinColumn(name=""fk_code_pays"")
@JsonProperty(""codePays"")
private Pays pays;

public Traduction(){
}

public Traduction(String codePays,boolean defaultLanguage) {
    this.defaultLanguage = defaultLanguage;
    pays.setCodePays(codePays);
}
</code></pre>

<p>My problem happen when I try to populate my table traduction using a Post method:</p>

<pre><code>@PostMapping(""/traduction"")
public Traduction createTraduction(@RequestBody Traduction trad) {
    System.err.println(trad);
    return repository.save(trad);
}
</code></pre>

<p>when I send JSON data to my server via PostMan like this:</p>

<blockquote>
  <p>{
      ""codeTrad"":0,
      ""defaultLanguage"":true,
      ""fk_code_pays"":""FR""
      }</p>
</blockquote>

<p>or this way:</p>

<blockquote>
  <p>{
      ""codeTrad"":0,
      ""defaultLanguage"":true,
      ""pays"":
      {
          ""codePays"":""FR"",
          ""libellePays"":""France""
      }
  }</p>
</blockquote>

<p>My server doesn't seem to understand the mapping with the object Pays.
Here what the object Traduction look like after my request: 
[codeTrad=0, null, defaultLanguage=true]</p>

<p>and the pretty error:</p>

<blockquote>
  <p>Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: (was java.lang.NullPointerException); nested exception is com.fasterxml.jackson.databind.JsonMappingException: (was java.lang.NullPointerException) (through reference chain: com.auchan.corp.ipon.iponportail.model.Traduction[""codePays""])]</p>
</blockquote>

<p>So I am wondering if the problem comes from my server conception or just my JSON. Do you have an idea?</p>
","10806977","","","","","2018-12-18 17:37:20","Am I using OneToOne relationship right?","<java><json><spring><spring-boot><spring-framework-beans>","2","2","","","","53836903","127018","127018","spring-framework-beans","105","",""
"53979852","1","53979918","","2018-12-30 17:28:30","","1","44","<p>We are using java beans for dependency injection. However, we have found that the beans were not created in a proper way. My question is: what's a proper way to organize those beans? I have read many books or online posts about it but not clear about the solutions. Let me give you an example here. For example, I have a bean called <code>TestBeanA</code>and I put it in <code>moduleA</code>. I have another <code>moduleB</code> which references <code>moduleA</code>, so I can use <code>TestBeanA</code> in <code>moduleB</code>. </p>

<p>1)1st issue is: Now I have another <code>moduleC</code> which is in a different service or package. In order to use <code>TestBean</code> in<code>moduleC</code>, I can add <code>moduleA</code> as a dependency in <code>moduleC</code> then use <code>TestBean</code> there? Is this a good approach? or just create a new bean in <code>moduleC</code>?</p>

<p>2) 2nd issue is that: now if I have another bean <code>TestBeanB</code> in <code>moduleB</code>. How can i use this bean in <code>moduleA</code>? or putting <code>TestBean</code> in <code>moduleB</code> was wrong, and it should be put in <code>moduleA</code> as well?</p>
","6263748","","7294900","","2019-01-04 05:31:43","2019-01-04 05:31:43","Proper way to put spring beans","<java><spring><dependency-injection><inversion-of-control><spring-framework-beans>","1","1","","","","53979852","127018","127018","spring-framework-beans","105","",""
"54339026","1","","","2019-01-24 03:37:00","","0","545","<p>I'm currently working on a project which require redis as its main repository for caching data, using references from <a href=""https://github.com/spring-projects/spring-data-examples"" rel=""nofollow noreferrer"">spring-data-redis-example</a></p>

<p>i'm also require to do things like get and sort the list retrieved from redis, to achieve such cases, what i have tried is like below :</p>

<blockquote>
  <p>PageRequest.of(1, 10, Sort.Direction.ASC, ""rank"")</p>
</blockquote>

<p>and</p>

<blockquote>
  <p>findBySomeAndThingOrderByRankAsc</p>
</blockquote>

<p>but none of the above seem to resolve my issue to be able to sort the data retrieved from redis</p>

<p>here is my redis configuration</p>

<pre><code>@Configuration
@EnableRedisRepositories(basePackages = ""com.example.db.redis.repository"")
public class RedisConfiguration {

    @Bean
    JedisConnectionFactory jedisConnectionFactory() {
        RedisStandaloneConfiguration redisStandaloneConfiguration = new RedisStandaloneConfiguration();
        redisStandaloneConfiguration.setHostName(Properties.getString(""redis.hostname""));
        redisStandaloneConfiguration.setPort(Integer.parseInt(Properties.getString(""redis.port"")));

        return new JedisConnectionFactory(redisStandaloneConfiguration);
    }

    @Bean
    public RedisTemplate&lt;?, ?&gt; redisTemplate() {
        RedisTemplate&lt;?, ?&gt; redisTemplate = new RedisTemplate&lt;&gt;();
        redisTemplate.setConnectionFactory(jedisConnectionFactory());
        redisTemplate.setKeySerializer(new StringRedisSerializer());
        redisTemplate.setValueSerializer(new GenericToStringSerializer&lt;&gt;(Object.class));
        return redisTemplate;
    }

    @Bean
    public StringRedisTemplate strRedisTemplate() {
        StringRedisTemplate redisTemplate = new StringRedisTemplate();
        redisTemplate.setConnectionFactory(jedisConnectionFactory());
        return redisTemplate;
    }
}
</code></pre>

<p>and here is the pojo</p>

<pre><code>@RedisHash(""somehash"")
public class SortOnRedisExample implements Serializable {

    private static final long serialVersionUID = -895893308381522209L;

    @Id
    private String id;
    @Indexed
    private String some;
    @Indexed
    private String thing;
    @Indexed
    private Integer rank;

    public SortOnRedisExample() {}

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public Integer getRank() {
        return rank;
    }

    public void setRank(Integer rank) {
        this.rank = rank;
    }

    public String getSome() {
        return some;
    }

    public void setSome(String some) {
        this.some = some;
    }

    public String getThing() {
        return thing;
    }

    public void setThing(String thing) {
        this.thing = thing;
    }
}
</code></pre>

<p>my question is, is sort/order by supported by <code>spring-data-redis</code> in jpa style? if not, what is the alternative to do so?</p>

<p>any pointer would be highly appreciated, thanks!</p>
","6537751","","6537751","","2019-01-24 03:44:41","2019-01-24 03:44:41","Spring data redis sort/order by","<spring><redis><spring-data-redis><spring-framework-beans>","0","4","","","","54339026","127018","127018","spring-framework-beans","105","",""
"54555744","1","","","2019-02-06 14:19:14","","0","225","<p>org.springframework.web.client.ResourceAccessException: I/O error on GET request for ""Some URL"": Received fatal alert: bad_certificate;nested exception is javax.net.ssl.SSLHandshakeException: Received fatal alert: bad_certificate</p>

<p>Users Register through Apigee.
Uses b2b and Mobile Token.
Seeing this error in PCF logs.</p>

<p>Can anyone give any insights?</p>
","10613585","","10613585","","2019-02-06 15:19:59","2019-02-06 15:19:59","org.springframework.web.client.ResourceAccessException: I/O error on GET request for ""Some URL"": Received fatal alert: bad_certificate","<java><apigee><sslhandshakeexception><pcf><spring-framework-beans>","0","3","","","","54555744","127018","127018","spring-framework-beans","105","",""
"54592747","1","54592823","","2019-02-08 12:43:12","","1","83","<p>I've read some articles on optional bean dependencies, it is usually suggested to use java Optional class, or spring ObjectProvider class. </p>

<p>Those do work, but my case is a little different. What if in my context there are multiple beans of the same type, which annotated with <code>@Qualifier</code> and I don't know if there is a bean I need among them. And I need the one with the specific name.</p>

<pre><code>@ComponentScan(basePackages = ""my.package"")
public class MyClass {

 private final MyOptionalBean myOptionalBean;

 MyClass(ObjectProvider&lt;MyOptionalBean&gt; myOptionalBeanObjectProvider) {
     this.myOptionalBean = myOptionalBeanObjectProvider.getIfAvailable(() -&gt; null);
 }

}
</code></pre>

<p>The example above works. But now imagine, that there are multiple MyOptionalBean beans registered in my context, those beans are named. How do I write the similar code as above, but tell spring to look by the name of specific instance?                              </p>
","8555925","","6032482","","2019-02-08 12:45:55","2019-02-08 13:17:52","Writing optional bean dependency injection by bean name","<java><spring><dependency-injection><spring-framework-beans>","1","0","","","","54592747","127018","127018","spring-framework-beans","105","",""
"54630489","1","","","2019-02-11 12:19:07","","0","656","<p>I have an xml bean that is been (xmlProvider) instantiated from a class :
class ContextResolver implements ContextResolver
We are upgrading from java 8 to java 11 and use gradle 5.1.
In addition we have upgraded from spring 4.2.7 to 5.1.4</p>

<p>On run time I get the following exception.
Does anyone have any input on why this exception comes up</p>

<pre><code>2019-02-11 08:54:31,643 ERROR localhost-startStop-1 - [EVENT UNSPECIFIED null -&gt; /Frameworks/org.springframework.web.context.ContextLoader] Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ClientServiceServer': Cannot resolve reference to bean 'xmlProvider' while setting bean property 'providers' with key [1]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'xmlProvider' defined in class path resource [rest-beans.xml]: Instantiation of bean failed; nested exception is java.lang.InternalError: 
Error occured while invoking reflection on target classes. Make sure all referenced classes are on classpath: interface javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter 
Exception: null
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:378)
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:401)
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:159)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1648)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
    at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
    at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
    at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
    at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
    at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4900)
    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5363)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:145)
    at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:755)
    at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:731)
    at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:717)
    at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:973)
    at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1850)
    at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
    at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
    at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'xmlProvider' defined in class path resource [rest-beans.xml]: Instantiation of bean failed; nested exception is java.lang.InternalError: 
Error occured while invoking reflection on target classes. Make sure all referenced classes are on classpath: interface javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter 
Exception: null
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1270)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
    at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
    at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
    ... 30 more
Caused by: java.lang.InternalError: 
Error occured while invoking reflection on target classes. Make sure all referenced classes are on classpath: interface javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter 
Exception: null
    at com.sun.xml.bind.v2.model.annotation.RuntimeInlineAnnotationReader.getClassValue(RuntimeInlineAnnotationReader.java:143)
    at com.sun.xml.bind.v2.model.annotation.RuntimeInlineAnnotationReader.getClassValue(RuntimeInlineAnnotationReader.java:57)
    at com.sun.xml.bind.v2.model.impl.PropertyInfoImpl.isApplicable(PropertyInfoImpl.java:216)
    at com.sun.xml.bind.v2.model.impl.PropertyInfoImpl.getApplicableAdapter(PropertyInfoImpl.java:227)
    at com.sun.xml.bind.v2.model.impl.PropertyInfoImpl.&lt;init&gt;(PropertyInfoImpl.java:126)
    at com.sun.xml.bind.v2.model.impl.ERPropertyInfoImpl.&lt;init&gt;(ERPropertyInfoImpl.java:57)
    at com.sun.xml.bind.v2.model.impl.ElementPropertyInfoImpl.&lt;init&gt;(ElementPropertyInfoImpl.java:100)
    at com.sun.xml.bind.v2.model.impl.RuntimeElementPropertyInfoImpl.&lt;init&gt;(RuntimeElementPropertyInfoImpl.java:63)
    at com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl.createElementProperty(RuntimeClassInfoImpl.java:175)
    at com.sun.xml.bind.v2.model.impl.ClassInfoImpl.addProperty(ClassInfoImpl.java:882)
    at com.sun.xml.bind.v2.model.impl.ClassInfoImpl.findFieldProperties(ClassInfoImpl.java:408)
    at com.sun.xml.bind.v2.model.impl.ClassInfoImpl.getProperties(ClassInfoImpl.java:311)
    at com.sun.xml.bind.v2.model.impl.RuntimeClassInfoImpl.getProperties(RuntimeClassInfoImpl.java:186)
    at com.sun.xml.bind.v2.model.impl.ModelBuilder.getClassInfo(ModelBuilder.java:261)
    at com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder.getClassInfo(RuntimeModelBuilder.java:103)
    at com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder.getClassInfo(RuntimeModelBuilder.java:84)
    at com.sun.xml.bind.v2.model.impl.ModelBuilder.getClassInfo(ModelBuilder.java:227)
    at com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder.getClassInfo(RuntimeModelBuilder.java:98)
    at com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder.getClassInfo(RuntimeModelBuilder.java:84)
    at com.sun.xml.bind.v2.model.impl.ModelBuilder.getTypeInfo(ModelBuilder.java:375)
    at com.sun.xml.bind.v2.model.impl.TypeRefImpl.calcRef(TypeRefImpl.java:96)
    at com.sun.xml.bind.v2.model.impl.TypeRefImpl.getTarget(TypeRefImpl.java:73)
    at com.sun.xml.bind.v2.model.impl.RuntimeTypeRefImpl.getTarget(RuntimeTypeRefImpl.java:62)
    at com.sun.xml.bind.v2.model.impl.RuntimeTypeRefImpl.getTarget(RuntimeTypeRefImpl.java:55)
    at com.sun.xml.bind.v2.model.impl.ElementPropertyInfoImpl$1.get(ElementPropertyInfoImpl.java:78)
    at com.sun.xml.bind.v2.model.impl.ElementPropertyInfoImpl$1.get(ElementPropertyInfoImpl.java:76)
    at java.base/java.util.AbstractList$Itr.next(AbstractList.java:371)
    at com.sun.xml.bind.v2.model.impl.ModelBuilder.getClassInfo(ModelBuilder.java:275)
    at com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder.getClassInfo(RuntimeModelBuilder.java:103)
    at com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder.getClassInfo(RuntimeModelBuilder.java:84)
    at com.sun.xml.bind.v2.model.impl.ModelBuilder.getClassInfo(ModelBuilder.java:227)
    at com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder.getClassInfo(RuntimeModelBuilder.java:98)
    at com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder.getClassInfo(RuntimeModelBuilder.java:84)
    at com.sun.xml.bind.v2.model.impl.ModelBuilder.getTypeInfo(ModelBuilder.java:375)
    at com.sun.xml.bind.v2.model.impl.ModelBuilder.getTypeInfo(ModelBuilder.java:390)
    at com.sun.xml.bind.v2.runtime.JAXBContextImpl.getTypeInfoSet(JAXBContextImpl.java:465)
    at com.sun.xml.bind.v2.runtime.JAXBContextImpl.&lt;init&gt;(JAXBContextImpl.java:303)
    at com.sun.xml.bind.v2.runtime.JAXBContextImpl.&lt;init&gt;(JAXBContextImpl.java:139)
    at com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder.build(JAXBContextImpl.java:1156)
    at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:165)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.base/java.lang.reflect.Method.invoke(Method.java:566)
    at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:251)
    at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:240)
    at javax.xml.bind.ContextFinder.find(ContextFinder.java:363)
    at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:691)
    at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:632)
    at no.io..ws.ContextResolver.initializeJaxbContext(ContextResolver.java:57)
    at no.io..ws.ContextResolver.&lt;clinit&gt;(ContextResolver.java:44)
    at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
    at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:172)
    at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1262)
    ... 38 more
</code></pre>

<p>Rest</p>
","11043997","","6631209","","2019-02-11 13:24:05","2019-02-11 13:24:05","Make sure all referenced classes are on classpath: interface javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter","<spring><java-11><spring-framework-beans>","0","3","","","","54630489","127018","127018","spring-framework-beans","105","",""
"54783918","1","","","2019-02-20 10:20:00","","0","841","<p>Good day,</p>

<p>I am running a maven program, and it involve connection to db. Here is part of my code of the database config:</p>

<pre><code>    @Bean
    DataSource dataSource() {
        DriverManagerDataSource ds = new DriverManagerDataSource();
        ds.setUrl(environment.getProperty(PROPERTY_URL));
        ds.setUsername(environment.getProperty(PROPERTY_USERNAME));
        ds.setPassword(environment.getProperty(PROPERTY_PASSWORD));
        ds.setDriverClassName(environment.getProperty(PROPERTY_DRIVER));
        return ds;
    }
</code></pre>

<p>I can login successful with the username and password, however, my program keep hitting the following error:</p>

<pre><code>18:13:06,227 WARN  [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] (default task-1) SQL Error: -4214, SQLState: 28000
18:13:06,227 ERROR [org.hibernate.engine.jdbc.spi.SqlExceptionHelper] (default task-1) [jcc][t4][2012][11248][4.19.49] Connection authorization failure occurred.  Reason: Password expired. ERRORCODE=-4214, SQLSTATE=28000
18:13:06,232 ERROR [io.undertow.request] (default task-1) UT005023: Exception handling request to /springData/person2: org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.JDBCConnectionException: Could not open connection
    at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982)
    at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
    at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
    at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85)
    at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
    at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
    at org.wildfly.extension.undertow.security.SecurityContextAssociationHandler.handleRequest(SecurityContextAssociationHandler.java:78)
    at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
    at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)
    at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
    at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
    at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
    at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
    at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
    at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
    at io.undertow.security.handlers.NotificationReceiverHandler.handleRequest(NotificationReceiverHandler.java:50)
    at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
    at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
    at org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)
    at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
    at org.wildfly.extension.undertow.deployment.GlobalRequestControllerHandler.handleRequest(GlobalRequestControllerHandler.java:68)
    at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
    at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
    at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
    at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
    at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
    at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
    at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
    at org.wildfly.extension.undertow.security.SecurityContextThreadSetupAction.lambda$create$0(SecurityContextThreadSetupAction.java:105)
    at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1508)
    at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1508)
    at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1508)
    at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1508)
    at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1508)
    at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
    at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
    at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
    at io.undertow.server.Connectors.executeRootHandler(Connectors.java:326)
    at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:812)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
    at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.transaction.CannotCreateTransactionException: Could not open JPA EntityManager for transaction; nested exception is javax.persistence.PersistenceException: org.hibernate.exception.JDBCConnectionException: Could not open connection
    at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:427)
    at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:371)
    at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:329)
    at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:105)
    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
    at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
    at com.journaldev.spring.services.PersonService$$EnhancerBySpringCGLIB$$4f74dce4.getAllPersons(&lt;generated&gt;)
    at com.journaldev.spring.controller.PersonController2.getAll2(PersonController2.java:26)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:221)
    at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
    at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:114)
    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
    at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
    at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
    at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
    at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
    ... 43 more
Caused by: javax.persistence.PersistenceException: org.hibernate.exception.JDBCConnectionException: Could not open connection
    at org.hibernate.ejb.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1387)
    at org.hibernate.ejb.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1310)
    at org.hibernate.ejb.AbstractEntityManagerImpl.throwPersistenceException(AbstractEntityManagerImpl.java:1397)
    at org.hibernate.ejb.TransactionImpl.begin(TransactionImpl.java:62)
    at org.springframework.orm.jpa.DefaultJpaDialect.beginTransaction(DefaultJpaDialect.java:70)
    at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:377)
    ... 63 more
Caused by: org.hibernate.exception.JDBCConnectionException: Could not open connection
    at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:67)
    at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:49)
    at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:125)
    at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:110)
    at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:221)
    at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection(LogicalConnectionImpl.java:157)
    at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:67)
    at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:160)
    at org.hibernate.internal.SessionImpl.beginTransaction(SessionImpl.java:1426)
    at org.hibernate.ejb.TransactionImpl.begin(TransactionImpl.java:59)
    ... 65 more
Caused by: com.ibm.db2.jcc.am.SqlInvalidAuthorizationSpecException: [jcc][t4][2012][11248][4.19.49] Connection authorization failure occurred.  Reason: Password expired. ERRORCODE=-4214, SQLSTATE=28000
    at com.ibm.db2.jcc.am.kd.a(Unknown Source)
    at com.ibm.db2.jcc.am.kd.a(Unknown Source)
    at com.ibm.db2.jcc.am.kd.a(Unknown Source)
    at com.ibm.db2.jcc.t4.b.f(Unknown Source)
    at com.ibm.db2.jcc.t4.b.b(Unknown Source)
    at com.ibm.db2.jcc.t4.z.r(Unknown Source)
    at com.ibm.db2.jcc.t4.z.k(Unknown Source)
    at com.ibm.db2.jcc.t4.z.c(Unknown Source)
    at com.ibm.db2.jcc.t4.b.k(Unknown Source)
    at com.ibm.db2.jcc.t4.b.b(Unknown Source)
    at com.ibm.db2.jcc.t4.b.a(Unknown Source)
    at com.ibm.db2.jcc.t4.b.b(Unknown Source)
    at com.ibm.db2.jcc.t4.b.a(Unknown Source)
    at com.ibm.db2.jcc.t4.b.a(Unknown Source)
    at com.ibm.db2.jcc.t4.b.a(Unknown Source)
    at com.ibm.db2.jcc.t4.b.&lt;init&gt;(Unknown Source)
    at com.ibm.db2.jcc.DB2SimpleDataSource.getConnection(Unknown Source)
    at com.ibm.db2.jcc.DB2SimpleDataSource.getConnection(Unknown Source)
    at com.ibm.db2.jcc.DB2Driver.connect(Unknown Source)
    at com.ibm.db2.jcc.DB2Driver.connect(Unknown Source)
    at java.sql.DriverManager.getConnection(DriverManager.java:664)
    at java.sql.DriverManager.getConnection(DriverManager.java:208)
    at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:173)
    at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:164)
    at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:153)
    at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:119)
    at org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider.getConnection(InjectedDataSourceConnectionProvider.java:70)
    at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:292)
    at org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:214)
    ... 70 more
</code></pre>

<p>I also just change the db2 user password, also hit back this same error. I believe there is something wrong with my configuration, kindly advise.</p>
","2485458","","","","","2019-02-20 10:20:00","db2 hit Reason: Password expired. ERRORCODE=-4214, SQLSTATE=28000 even password is correct","<java><database><db2><passwords><spring-framework-beans>","0","3","","","","54783918","127018","127018","spring-framework-beans","105","",""
"54914419","1","54915167","","2019-02-27 21:02:04","","1","107","<p>I noticed a few lines of @CacheEvict(""Settings"") in some source code and was curious if does the same thing as CacheEvict(value = ""Settings"" , allEntries = true )?</p>
","6087642","","","","","2019-02-27 23:23:01","What's the difference between @CacheEvict(...) and @CacheEvict(value , allEntries )?","<java><spring-boot><caching><spring-framework-beans>","2","0","","","","54914419","127018","127018","spring-framework-beans","105","",""
"54987935","1","","","2019-03-04 16:53:05","","0","61","<p>I thought naming a bean with id is not mandatory before i get stuck here.</p>

<p>dispatcher-servlet.xml</p>

<pre><code>&lt;mvc:annotation-driven /&gt;
&lt;context:annotation-config /&gt;

&lt;context:component-scan
    base-package=""com.springMVC.*""&gt;&lt;/context:component-scan&gt;
&lt;bean
    class=""org.springframework.web.servlet.view.InternalResourceViewResolver""&gt;
    &lt;property name=""prefix""&gt;
        &lt;value&gt;/WEB-INF/Views/&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name=""suffix""&gt;
        &lt;value&gt;.jsp&lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;

&lt;bean id=""messageSource""
    class=""org.springframework.context.support.ReloadableResourceBundleMessageSource""&gt;
    &lt;property name=""basename""&gt;
    &lt;value&gt;/WEB-INF/messagekeys&lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;
</code></pre>

<p></p>

<p>messagekeys.properties</p>

<pre><code>NotEmpty.user1.name = UserName cannot be empty
Size.user1.name = Name should have a length between 6 and 16
Pattern.user1.name = Name should not contain numeric value
Min.user1.age = Age cannot be less than 12
Max.user1.age = Age cannot be more than 60
NotNull.user1.age = Please enter your age
NotEmpty.user1.email = email cannot be left blank
Email.user1.email = email is not valid
NotEmpty.user1.country = Enter valid country
</code></pre>

<p>User.java</p>

<pre><code>package com.springMVC.model;

import javax.validation.constraints.Email;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

@Component
@Scope(""request"")
public class User {

@NotEmpty
@Size(min=6,max=16)
@Pattern(regexp = ""[^0-9]+"")
private String name;
@Min(value=12)
@Max(value=60)
@NotNull
private Integer age;
@NotEmpty
@Email
private String email;
@NotEmpty
private String country;
public void setName(String name) {
    this.name = name;
}
public void setAge(Integer age) {
    this.age = age;
}
public void setEmail(String email) {
    this.email = email;
}
public void setCountry(String country) {
    this.country = country;
}
public String getName() {
    return name;
}
public Integer getAge() {
    return age;
}
public String getEmail() {
    return email;
}
public String getCountry() {
    return country;
}
}
</code></pre>

<p>When i use the bean <code>InternalResourceViewResolver</code> without bean <code>id</code>, it works fine.</p>

<p>But when i use the bean <code>ReloadableResourceBundleMessageSource</code> without bean id, it doesn't render error messages from <code>messages.properties</code></p>

<p>When i give <code>ReloadableResourceBundleMessageSource</code> bean an <code>id</code>, it works perfect.</p>

<p>So, my question is <strong>Is naming a bean with an id mandatory?</strong></p>

<p>Thanks in advance :)</p>
","5953390","","2696260","","2019-03-04 19:27:32","2019-03-04 19:27:32","Is it really mandatory to give bean an id","<spring><spring-framework-beans>","1","0","1","","","54987935","127018","127018","spring-framework-beans","105","",""
"55019017","1","","","2019-03-06 08:54:59","","0","133","<p>I have a class: </p>

<pre><code>@Component
public class B {
    @Autowired
    private A a; 
}
</code></pre>

<p>and A is a component: </p>

<pre><code>@Component
public class A{}
</code></pre>

<p>In unit test class BTest: </p>

<pre><code>public class BTest {
    @Test
    public void testBMethod() {
    }
}
</code></pre>

<p>I am not using an xml to define context or for beans to be picked from. </p>

<p>What is the cleanest way I can get the test to run? </p>
","3756232","","","","","2019-03-06 10:52:36","autowired @components null in unit test","<spring><junit><junit4><spring-framework-beans>","1","1","","","","55019017","127018","127018","spring-framework-beans","105","",""
"55138030","1","","","2019-03-13 09:10:22","","0","180","<p>I recently built an application (which works fine when built with Java 1.7 and using Tomcat 7) with JDK1.8 and trying to deploy the war under Tomcat 8 when I face  the below issues during start-up.</p>

<p>Logs:</p>

<pre><code>13-Mar-2019 08:52:57.059 SEVERE [localhost-startStop-1] org.apache.catalina.core.StandardContext.listenerStart Exception sending context initialized event to listener instance of class org.springframework.web.context.ContextLoaderListener
 org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'xyzJmsTemplate' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Initialization of bean failed; nested exception is org.springframework.beans.ConversionNotSupportedException: Failed to convert property value of type 'weblogic.jms.client.JMSXAConnectionFactory' to required type 'javax.jms.ConnectionFactory' for property 'connectionFactory'; nested exception is java.lang.IllegalStateException: Cannot convert value of type [weblogic.jms.client.JMSXAConnectionFactory] to required type [javax.jms.ConnectionFactory] for property 'connectionFactory': no matching editors or conversion strategy found
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:638)
    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:942)
    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
    at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:410)
    at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)
    at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:112)
    at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4842)
    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5303)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:147)
    at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:725)
    at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:701)
    at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:717)
    at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:940)
    at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1816)
    at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
    at java.util.concurrent.FutureTask.run(Unknown Source)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
    at java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.beans.ConversionNotSupportedException: Failed to convert property value of type 'weblogic.jms.client.JMSXAConnectionFactory' to required type 'javax.jms.ConnectionFactory' for property 'connectionFactory'; nested exception is java.lang.IllegalStateException: Cannot convert value of type [weblogic.jms.client.JMSXAConnectionFactory] to required type [javax.jms.ConnectionFactory] for property 'connectionFactory': no matching editors or conversion strategy found
    at org.springframework.beans.BeanWrapperImpl.convertIfNecessary(BeanWrapperImpl.java:464)
    at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:495)
    at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:489)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.convertForProperty(AbstractAutowireCapableBeanFactory.java:1465)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1424)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1160)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
    ... 24 more
Caused by: java.lang.IllegalStateException: Cannot convert value of type [weblogic.jms.client.JMSXAConnectionFactory] to required type [javax.jms.ConnectionFactory] for property 'connectionFactory': no matching editors or conversion strategy found
    at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:267)
    at org.springframework.beans.BeanWrapperImpl.convertIfNecessary(BeanWrapperImpl.java:449)
    ... 30 more
</code></pre>

<p>UPDATE:
I removed JMS API jars and now I see the below error in logs</p>

<pre><code>13-Mar-2019 09:28:21.881 SEVERE [localhost-startStop-1] org.apache.catalina.core.StandardContext.listenerStart Exception sending context initialized event to listener instance of class org.springframework.web.context.ContextLoaderListener
 org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.cxf.transport.servlet.ServletTransportFactory' defined in class path resource [META-INF/cxf/cxf-servlet.xml]: Error setting property values; nested exception is org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (2) are:
PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property 'bus' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'xyzConnectionFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.naming.NoInitialContextException: Cannot instantiate class: weblogic.jndi.WLInitialContextFactory [Root exception is java.lang.ClassNotFoundException: weblogic.jndi.WLInitialContextFactory]
PropertyAccessException 2: org.springframework.beans.MethodInvocationException: Property 'transportIds' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'xyzConnectionFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.naming.NoInitialContextException: Cannot instantiate class: weblogic.jndi.WLInitialContextFactory [Root exception is java.lang.ClassNotFoundException: weblogic.jndi.WLInitialContextFactory]
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1455)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1160)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)
</code></pre>
","2967948","","2967948","","2019-03-13 09:32:23","2019-03-13 09:32:23","Apache Tomcat 8 Exception - org.springframework.beans.ConversionNotSupportedException: Failed to convert property value","<java><java-8><tomcat8><spring-framework-beans>","0","3","","","","55138030","127018","127018","spring-framework-beans","105","",""
"55276703","1","55296672","","2019-03-21 08:53:53","","0","120","<p>I am implementing a module with Spring Cache mechanism. The module is generic and can cache different type of entities. So I don't want to change the Java code and want the user to configure the applicationcontext.xml file accordingly. He can put the name of the different types of entities within the applicationcontext.xml and the code should work. For e.g. -</p>

<pre><code>&lt;context:annotation-config/&gt;
&lt;cache:annotation-driven cache-manager=""cacheManager""/&gt;
&lt;context:component-scan base-package=""com.nokia.oss.sure.adapter""/&gt;

&lt;bean id=""NetworkEntityService"" class=""com.nokia.oss.sure.adapter.cache.NetworkEntityServiceImpl""/&gt;

&lt;bean id=""cacheManager"" class=""org.springframework.cache.support.SimpleCacheManager""&gt;
    &lt;property name=""caches""&gt;
        &lt;set&gt;
            &lt;bean class=""org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"" name=""NetworkEntity""/&gt;
        &lt;/set&gt;
    &lt;/property&gt;
&lt;/bean&gt;
</code></pre>

<p>He may change NetworkEntity to ServiceEntity and so on.</p>

<p>So in the Java code I need to mention -</p>

<pre><code>@CacheConfig(cacheNames={""NetworkEntity""})
</code></pre>

<p>Or I can put the same for every method -</p>

<pre><code>@CachePut(cacheNames=""NetworkEntity"", key=""#entity.sureName"")
public Entity addEntity(Entity entity) {
    return entity;
}
</code></pre>

<p>But as I stated earlier, I don't want to put the cache name ""NetworkEntity"" in the Java code, but want to put the same in the applicationcontext.xml file. Is it possible? </p>

<p>Furthermore is it possible to omit all the annotations in the Java file? If I just use <code>AbstractApplicationContext context = new GenericXmlApplicationContext(""applicationContext.xml"");</code> is it possible to mention in the applicationContext.xml file what are the methods where I want to apply the @Cacheable annotation for e.g.</p>

<p>I searched a lot, couldn't find it anywhere.</p>

<p>Thanks
Nirmalya</p>
","2882242","","2882242","","2019-03-22 07:41:51","2019-03-22 09:36:52","Can we replace Springframework annotations (@CacheConfig, @Cacheable, @CachePut) in the XMl file?","<spring><spring-cache><spring-framework-beans>","1","0","","","","55276703","127018","127018","spring-framework-beans","105","",""
"55277013","1","","","2019-03-21 09:12:36","","3","526","<pre><code>    @POST
    @Path("""")
    @Consumes({""application/x-www-form-urlencoded""})
    TokenDTO login(@ApiParam(value = ""The id of the channel used"", required = true )  @HeaderParam(""channel"")  @NotEmpty(message = ""email.notempty"") String channel) throws Exception;
</code></pre>

<p>Hello guys, I am trying to validate the channel parameter so it is not empty.
If I parse it empty it just throws me:</p>

<pre><code>{
""code"": 26,
""message"": ""Validation Error: :NotEmpty"",
""data"": [
    {
        ""type"": ""NotEmpty"",
        ""property"": """",
        ""value"": null,
        ""inputType"": ""body"",
        ""attributes"": null
    }
],
""source"": ""XXXX"",
""type"": ""ValidationException"",
""guid"": ""965ee91a-99a1-4ae5-b721-6415a80dad23""
}
</code></pre>

<p>Can you please tell me how can I customize the validation error message?</p>

<p>EDIT: I have seen many articles describing me how to customize the message of a ""Field"" validation.
But i want to validate a method parameter.</p>
","1024531","","","","","2019-03-21 10:48:55","How to customize java spring @NotNull validation error message","<java><spring><validation><spring-boot><spring-framework-beans>","1","1","","","","55277013","127018","127018","spring-framework-beans","105","",""
"55333451","1","","","2019-03-25 08:02:30","","1","211","<p>I want to change ""camunda-bpm-spring-boot-starter-webapp"" port when I springframework application.
My project is running on 8181 ""application.properties server.port = 8181""
and I did implement camunda-bpm-spring-boot-starter-webapp on my build.gradle.
when I run my project camunda cockpit running on 8181 port.
I want to change when I start project runs on 8181 but camunda cockpit runs on different port.
How can I do this?</p>
","8907142","","290425","","2019-03-27 13:04:24","2019-03-27 13:04:24","How can I change port for Camunda webapp (cockpit) on tomcat","<spring-boot><camunda><embedded-tomcat-8><spring-framework-beans>","0","1","","","","55333451","127018","127018","spring-framework-beans","105","",""
"55516313","1","55516698","","2019-04-04 12:43:53","","0","34","<p>My application references the spring beans schema like so:</p>

<pre><code>http://www.springframework.org/beans/spring-beans-3.2.xsd
</code></pre>

<p>or</p>

<pre><code>http://www.springframework.org/beans/spring-beans-4.1.xsd
</code></pre>

<p>etc</p>

<p>My application is failing because this resource is no longer there.  Starting today.  Is this intended deprecation or something?</p>

<p>My application is down because of this. </p>
","1244113","","","","","2019-04-04 13:03:35","springframework website changed - http://www.springframework.org/beans/ gone?","<spring><spring-framework-beans>","1","0","","","","55516313","127018","127018","spring-framework-beans","105","",""
"56059263","1","","","2019-05-09 12:17:10","","0","24","<p>This is the <code>Exception</code> I get in my code:</p>

<pre><code>org.hibernate.hql.internal.ast.QuerySyntaxException: product is not mapped [from Product]
</code></pre>

<p>This part is the problematic code.</p>

<pre><code>@SuppressWarnings(""unchecked"")
public List&lt;Product&gt; getProducts() {

    Session session = sessionFactory.getCurrentSession();

    Query query = session.createQuery(""from product"");
    List&lt;Product&gt; productList = query.list();
}
</code></pre>

<p>What I have been trying is the following:</p>

<p>1)</p>

<pre><code>Query query = session.createQuery(""from product"");
</code></pre>

<p>Change => ""from Product""
but it does not change Anything</p>

<p>2) Changing</p>

<pre><code>List&lt;Product&gt; result = (List&lt;User&gt;) session.createQuery(""from Product"").list();
session.getTransaction().commit();
return result;
</code></pre>

<p>but it does not change Anything too!!</p>

<p>This is the full code</p>

<pre><code>package kr.ac.hansung.cse.dao;

import java.util.List;    
import org.hibernate.query.Query;    
import org.hibernate.Session;    
import org.hibernate.SessionFactory;    
import org.springframework.beans.factory.annotation.Autowired;    
import org.springframework.stereotype.Repository;    
import org.springframework.transaction.annotation.Transactional;    
import kr.ac.hansung.cse.model.Product;

@Repository    
@Transactional    
public class ProductDao {

    @Autowired
    private SessionFactory sessionFactory;

    @SuppressWarnings(""unchecked"")
    public List&lt;Product&gt; getProducts() {

        Session session = sessionFactory.getCurrentSession();
        Query query = session.createQuery(""from product"");
        List&lt;Product&gt; productList = query.list();

        return productList;
    }

    public Product getProductById(int id) {
        Session session = sessionFactory.getCurrentSession();
        Product product = (Product) session.get(Product.class, id);

        return product;
    }

    public void addProduct(Product product) {

        Session session = sessionFactory.getCurrentSession();
        session.saveOrUpdate(product);
        session.flush(); 

    }

    public void deleteProduct(Product product) {
        Session session = sessionFactory.getCurrentSession();
        session.delete(product);
        session.flush();
    }

    public void updateProduct(Product product) {

        Session session = sessionFactory.getCurrentSession();
        session.saveOrUpdate(product);
        session.flush(); 

    }

}
</code></pre>

<p>HTTP Status 500 – Internal Server Error
java.lang.IllegalArgumentException: org.hibernate.hql.internal.ast.QuerySyntaxException: product is not mapped [from product]</p>
","11475534","","472495","","2019-05-09 16:42:36","2019-05-09 16:42:36","org.hibernate.hql.internal.ast.QuerySyntaxException: table is not mapped [from table X]","<hibernate-mapping><spring-framework-beans>","0","2","","","","56059263","127018","127018","spring-framework-beans","105","",""
"56186186","1","","","2019-05-17 12:12:56","","1","144","<p>I am migrating from apache httpclients-3.x to 4.x and thus have to update <em>org.springframework.ws.transport.http.CommonsHttpMessageSender</em> to <em>org.springframework.ws.transport.http.HttpComponentsMessageSender</em>. </p>

<p>My previous spring-beans.xml configuraion was this:</p>

<pre class=""lang-xml prettyprint-override""><code>&lt;bean id=""signHttpSender"" class=""org.springframework.ws.transport.http.HttpComponentsMessageSender""&gt;
    &lt;property name=""maxConnectionsPerHost""&gt;
      &lt;props&gt;
        &lt;prop key=""*""&gt;20&lt;/prop&gt;
      &lt;/props&gt;
    &lt;/property&gt;
  &lt;/bean&gt;
</code></pre>

<p>""*"" character allowed to set maximum connections for any given host.</p>

<p>If I try the same configuration, I receive <em>java.lang.IllegalArgumentException: Host name may not be null</em>. Looking at the HttpComponentsMessageSender code I see no way of limiting number of cnnections for any host, just total amount of connections or max connections per certain host.</p>

<p>How could I achieve the same result as by using ""*"" in CommonsHttpMessageSender?</p>
","10931003","","10931003","","2019-05-17 12:31:11","2019-05-17 14:53:18","spirngframework.ws HttpComponentsMessageSender - how to set maximum connectons per any host?","<java><spring><apache-httpclient-4.x><spring-framework-beans>","1","0","1","","","56186186","127018","127018","spring-framework-beans","105","",""
"56186629","1","","","2019-05-17 12:40:43","","0","707","<p>Password is stored in mongoDB using org.springframework.security.crypto.bcrypt.BCryptPasswordEncoderdecrypt.
As this API stores password in DB in encrypted format even I store same password it encrypt differently and stores in DB. Now my question is How can I compare entered password is already stored in DB or not.How can I achieve my goal can you please explain?</p>
","8318889","","8318889","","2019-05-17 14:17:03","2019-05-17 14:36:22","How to decrypt password which is stored in mongodb using org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder?","<java><spring><mongodb><spring-framework-beans>","1","3","","","","56186629","127018","127018","spring-framework-beans","105","",""
"56273874","1","56287485","","2019-05-23 11:05:43","","0","135","<p>I am trying to test a method in my UserController named update which looks like the following:</p>

<pre><code>@RequestMapping(path = ""/update"", method = RequestMethod.PUT)
@PreAuthorize(""#user.id != authentication.principal.id"")
public ResponseEntity&lt;User&gt; update(@RequestBody final User user) {
    return new ResponseEntity&lt;&gt;(userService.saveElement(user), HttpStatus.OK);
}
</code></pre>

<p>but I can't seem to be able to access the id(""#user.id != authentication.principal.id"") in the test</p>

<p>When I remove the  @PreAuthorize(""#user.id != authentication.principal.id"")
the Test is green. 
I've tried adding  </p>

<pre class=""lang-java prettyprint-override""><code>    @Test
    @WithMockUser(roles = {""ADMIN""}, id={""1""})
    ...
    }
</code></pre>

<p>or other modifiers too, but it didn't work</p>

<p>UserController.java</p>

<pre class=""lang-java prettyprint-override""><code>@Controller
@RequestMapping(API_PATH)
public class UserController {

    public static final String API_PATH = ""/api/user"";
    private final UserService userService;

    @Autowired
    public UserController(final UserService userService) {
        this.userService = userService;
    }

    @RequestMapping(path = ""/update"", method = RequestMethod.PUT)
    @PreAuthorize(""#user.id != authentication.principal.id"")
    public ResponseEntity&lt;User&gt; update(@RequestBody final User user) {
        return new ResponseEntity&lt;&gt;(userService.saveElement(user), HttpStatus.OK);
    }
}
</code></pre>

<p>UserControllerTest.java</p>

<pre class=""lang-java prettyprint-override""><code>@ExtendWith(SpringExtension.class)
@SpringBootTest
@ContextConfiguration(classes = {TestContextConfiguration.class})
@WebAppConfiguration
class UserControllerTest {

    private MockMvc mvc;

    @Autowired
    private WebApplicationContext context;

    @MockBean
    private UserService userServiceMock;

    @BeforeEach
    void initTest() {
        MockitoAnnotations.initMocks(this);
        mvc = MockMvcBuilders.webAppContextSetup(context).apply(springSecurity()).build();
    }

    @Test
    @WithMockUser(roles = {""ADMIN""})
    void update() throws Exception {
        final String apiPath = UserController.API_PATH + ""/update"";
        final User user = new User();
        final String userAsJsonString = TestUtils.getObjectAsJsonString(user);

        mvc.perform(put(apiPath).contentType(MediaType.APPLICATION_JSON).content(userAsJsonString)).andExpect(status().isOk());

        Mockito.verify(userServiceMock).saveElement(ArgumentMatchers.any(User.class));
    }
}
</code></pre>
","7891659","","","","","2019-05-24 07:08:47","Testing Method Security, how to test @PreAuthorize(""#user.id != authentication.principal.id"")?","<angular><spring-boot><junit><spring-security><spring-framework-beans>","1","0","","","","56273874","127018","127018","spring-framework-beans","105","",""
"56333110","1","","","2019-05-27 22:37:46","","0","15","<p>I am using Wildfly V16 to run a java (1.8) + Spring (4.1.3) app in the Openshift Online (v3) environment. </p>

<p>The application has a class (GiftcardWebService.java) with @Service annotation and its methods are mostly by @Transactional annotation:</p>

<p>The controller class:  </p>

<pre><code>@Controller
@RequestMapping(value = ""/BusinessController/"")
public BusinessController {
   ...
   @Autowired
   private GiftcardWebService service;

   ...
}
</code></pre>

<p>GiftcardWebService.java</p>

<pre><code>@Service
public GiftcardWebService {
  ....

@Transactional 
public Map&lt;String, String&gt; getGiftcardForm (....) {
   ....
  }
 ...
}
</code></pre>

<p>During deployment to Wildfly v15 or v16, an error occurs:</p>

<pre><code> Could not generate CGLIB subclass of class [class com.liquibil.controllers.GiftcardWebService]: Common causes of this problem include using a final class or a non-visible class.
</code></pre>

<p>Interestingly, this same code works for Wildfly 10 thru 14. It only fails (with the aformentioned error) when it is deployed to Wildfly v15 or v16.</p>

<p>I Googled this problem, found some discussions but mainly for Springframework Version 3 when CGLIB requires a default class constructor. My Spring version is 4.1.3.</p>

<p>I also removed the only ""final"" variable (on a logger) but it did not help. I have no clue what would qualify as a non-visible class in this context.</p>

<p>I also removed all @Transactional annotations in GiftcardWebService.java, then the error disappeared (it confirms that the error was due to @Transactional)</p>
","1693207","","","","","2019-05-27 22:37:46","What causes CGLIC error: cannot generate subclass of class [ClassPath] for @Transactional annotation since WildFly v15","<transactions><wildfly><autowired><cglib><spring-framework-beans>","0","0","","","","56333110","127018","127018","spring-framework-beans","105","",""
"56413815","1","","","2019-06-02 09:27:48","","0","24","<p>I had called a web service in my code that contains Deadline Date . the problem is the response in swagger shows like this :</p>

<pre><code>{
    ""id"": ""289"",
    ""serviceName"": ""خدمت 1"",
    ""deadLine"": ""2024/05/06"",
   ...
...
  }
</code></pre>

<p>and I want to show deadline in Shamsi Date like 1398/4/12.
i have used a lot of convertors but it did not worked for me  and still shows the  <code>""deadLine"": ""2024/05/06"",</code></p>

<p>this is my view  : </p>

<pre><code>public String setDeadLine(Date deadLine) {
        this.deadLine = deadLine;
         String dateFa;
       //String  dateFa= DateConvertor.miladi2date(deadLine);

       dateFa=  this.ConvertToPersianToShow(deadLine);
       return dateFa;
    }


    public String ConvertToPersianToShow(Date  deadLine)
    {
        CalendarTool cl = new CalendarTool();
        String date;
        String year = cl.getIranianYearInCentury();
        String Month = cl.getIranianMonthStr();
        String day = cl.getIranianWeekDayStr();

        date = year+""/"" + Month + ""/"" + day;
        return date;
    }
</code></pre>

<p>should I type any code in my controller ? </p>
","8478025","","8478025","","2019-06-02 09:34:15","2019-06-03 10:48:48","how to convert Date(2019/5/10) to shamsiDate(1398/4/12)","<web-services><date><jpa><swagger><spring-framework-beans>","1","0","","","","56413815","127018","127018","spring-framework-beans","105","",""
"56430449","1","56445710","","2019-06-03 15:32:59","","1","384","<p>I'm currently providing coverage - testing the validation of my DTO through MockMVC request call. 
I recently introduced a new field in my Registration ConstraintValidator, supportedSpecializations, of which I inject the values from application.properties for easy maintenance and expandability. see code fragment below:</p>

<pre><code>@Component
public class RegistrationValidator implements ConstraintValidator&lt;Registration, String&gt; {

    //campus.students.supportedspecializations=""J2E,.NET,OracleDB,MySQL,Angular""

    @Value(""${campus.students.supportedspecializations}"")
    private String supportedSpecializations;

    private String specializationExceptionMessage;

    //All ExceptionMessages are maintained in a separate class
    @Override
    public void initialize(Registration constraintAnnotation) {
        exceptionMessage = constraintAnnotation.regionException().getMessage();
    }

    @Override
    public boolean isValid(RegistrationData regData, ConstraintValidatorContext context) {

        String[] specializations = supportedSpecializations.split("","");
        boolean isValidSpecialization = Arrays.stream(specializations)
                    .anyMatch(spec -&gt; spec.equalsIgnoreCase(regData.getSpec()));
        if (!isValidSpecialization){
            context.disableDefaultConstraintViolation();
            context.buildConstraintViolationWithTemplate(specializationExceptionMessage)
                        .addConstraintViolation();
            return false;
            }
        //additional validation logic...
        return true;
    }
}
</code></pre>

<p>Unit tests now fail due to the field not being injected by the defined property of the @Value annotation.
I'm not sure if <strong>ReflectionTestUtils</strong> could help in my case, so any suggestions are greatly appreciated about how to inject the required values in UnitTests.</p>

<hr>

<p>Spring version is 2.1.0
I'm currently testing with the following snippet:</p>

<pre><code>@InjectMocks
private StudentController mockRestController;

@Mock
private StudentService mockStudentService;

@Mock
private ValidationExceptionTranslator mockExceptionTranslator;

@Value(""${campus.students.supportedspecializations}"")
private String supportedSpecializations;

private MockMvc mockMvc;

private static final String VALIDATION_SUCCESSFUL = ""success"";
private static final String VALIDATION_FAILED = ""failed"";

@Before
public void setup() {
    MockitoAnnotations.initMocks(this);
    this.mockMvc = MockMvcBuilders.standaloneSetup(mockRestController).build();

    doReturn(
            ResponseEntity.status(HttpStatus.OK)
            .header(""Content-Type"", ""text/html; charset=utf-8"")
            .body(VALIDATION_SUCCESSFUL))
    .when(mockStudentService).insertStudent(Mockito.any());

    doReturn(
            ResponseEntity.status(HttpStatus.BAD_REQUEST)
            .header(""Content-Type"", ""application/json"")
            .body(VALIDATION_FAILED))
    .when(mockExceptionTranslator).translate(Mockito.any());
}

@Test
public void testValidation_UnsupportedSpecialization() throws Exception {

    MvcResult mvcResult = mockMvc.perform(
            post(""/Students"").contentType(MediaType.APPLICATION_JSON_UTF8).content(
                    ""{\""registrationData\"":{\""spec\"":\""unsupported\""}}""))
            .andExpect(status().isBadRequest())
            .andReturn();

    assertEquals(VALIDATION_FAILED, mvcResult.getResponse().getContentAsString());

    verify(mockExceptionTranslator, times(1)).translate(Mockito.any());
    verify(mockStudentService, times(0)).insertStudent(Mockito.any());
}
</code></pre>

<hr>

<p>I tried annotating my Test class with <strong>@RunWith(SpringRunner.class)</strong> and <strong>@SpringBootTest(classes = Application.class)</strong>, but the validation test still fails due to @Value not being resolved. I might be wrong but I think the ConstraintValidator's instance is created before we reach the restController, so a MockMVC <strong>perform(...)</strong> call couldn't simply just make sure the appropriate @Value in the validator gets injected into supportedSpecializations.</p>
","4134547","","4134547","","2019-06-04 13:11:30","2019-06-27 04:57:09","Spring-Boot UnitTest: @Value in ConstraintValidator","<spring-boot><spring-boot-test><spring-framework-beans><javax.validation>","3","3","","","","56430449","127018","127018","spring-framework-beans","105","",""
"56527942","1","","","2019-06-10 14:01:46","","0","101","<p>I have an email send through SMTP which contains some German characters (umlauts). The encoding used is 'UTF-8', but the content is not displaying correctly.  </p>

<p>But when I choose the 'view source' in outlook app (by right click), the result shows all the umlauts. See in high lighted.
<a href=""https://i.stack.imgur.com/NCvY1.png."" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/NCvY1.png."" alt=""enter image description here""></a></p>

<p>How to solve this problem? The content of the mail is created programmatically through the following code.</p>

<pre><code>MimeMessage mimeMessage = mailSender.createMimeMessage();
MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, false, ""utf-8"");
mimeMessage.setContent(""&lt;html&gt;&lt;head&gt;&lt;meta charset=\""UTF-8\""&gt;&lt;/head&gt;&lt;body&gt;Hallo Saju Paul,&lt;p&gt;Wir....."", ""text/html"");

helper.setTo(""sender@sender.com"");
helper.setSubject(""Setze dein Passwort zurück"");
helper.setFrom(""undefined@variables.env"");
mailSender.send(mimeMessage);
</code></pre>

<p>where mailSender is </p>

<pre><code>org.springframework.mail.javamail.JavaMailSender
</code></pre>

<p>How to solve this problem?</p>
","6103734","","","","","2019-06-10 14:01:46","Microsoft outlook doesn't shows German umlauts","<utf-8><outlook><javamail><spring-framework-beans>","0","3","","","","56527942","127018","127018","spring-framework-beans","105","",""
"56608606","1","","","2019-06-15 08:10:00","","0","57","<p>I want to insert Spring Basics: Dynamically Inject Values With Spring’s @Value. How can I do it?</p>

<p>I tried with the code</p>

<pre><code>@Value(""#{{2: 'Catch22', 22: '1984', 32: 'Pride and Prejudice'}}"")
</code></pre>

<p>but I got exception </p>

<pre><code>private Map &lt;Integer,String&gt;studentTeacherMap;
@Value(""#{{2: 'Catch22', 22: '1984', 32: 'Pride and Prejudice'}}"")
public Map&lt;Integer, String&gt; loki()
return studentTeacherMap;
</code></pre>

<p>I expect the output to be</p>

<pre><code>2= Catch22, 22= 1984, 32= Pride and Prejudice 
</code></pre>

<p>but ended up with the exception: </p>

<p><code>Cannot handle (123) '{'</code></p>
","11588705","","11588705","","2019-06-15 21:16:55","2019-06-15 21:16:55","how to fix java Spring bean Autowire Cannot handle (123) '{'","<spring><autowired><spring-framework-beans>","1","0","","2019-06-15 15:03:34","","56608606","127018","127018","spring-framework-beans","105","",""
"56799345","1","56800365","","2019-06-27 23:05:22","","1","79","<p>I was trying to use a <code>SortedMap</code> with customized comparator in one of my spring project. It is a SortedMap, where i trying to sort by the second half of the string(which is the key). A example of the key ""A:123"". </p>

<p>I added a customized comparator to make sure SortedMap is go by the Integer order instead of String order.</p>

<p>Here is a simplified sample code, 
I have class with SortedMap inside:</p>

<pre><code>class TestObject{
    private SortedMap&lt;String, String&gt; myMap = new TreeMap&lt;String, String&gt;({
            new Comparator&lt;String&gt;()
            {
                @Override
                public int compare(String s1, String s2)
                {
                       int m1 = Integer.parseInt(O1.split("":"")[1]);
                       int m2 = Integer.parseInt(O2.split("":"")[1]);
                       return m1- m2;
                } 
   });    
    void setMap(SortedMap&lt;String, String&gt; maps){
         myMap = maps;
    }    
    void getMap(){ return myMaps; }
}
</code></pre>

<p>And inside my main function I did:</p>

<pre><code>class UpperClass{
  @Autowired
  TestObject object1;    
  public setNewMap(){
      SortedMap&lt;String, String&gt; myInput = new TreeMap&lt;String, String&gt;({
              //my comparator
      });
      myInput.put(""A:10000"", ""XXX"");
      myInput.put(""A:500"",""XXX"");
      myInput.put(""A:200"",""XXX"");
      object1.setMap(myInput);
 }
      pubic getResult(){
          SortedMap&lt;String, String&gt; result = object1.getMap();
      }    
}
</code></pre>

<p>So I remote debugger my application. It appears the comparator inside the class definition never got invoked. I print line by line, and myInput maintained the order of the string by output:</p>

<pre><code>A:200
A:500
A:10000
</code></pre>

<p>However, when my application called get Result, it print out:</p>

<pre><code>A:10000
A:200
A:500
</code></pre>

<p>which is the character order. So I wonder if I did something wrong by putting a comparator inside the class definition. </p>
","9633099","","9633099","","2019-06-28 03:12:14","2019-06-28 03:17:05","Java Spring Comparator for TreeMap","<java><comparator><spring-framework-beans>","1","4","1","","","56799345","127018","127018","spring-framework-beans","105","",""
"56862597","1","","","2019-07-03 03:38:44","","0","21","<p>I have this diagram of classes (only the classes involved).<br/>
The <strong>dependency injection</strong> I have done with <em>set methods</em>.
<a href=""https://i.stack.imgur.com/4OqW3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4OqW3.png"" alt=""enter image description here""></a></p>

<p>I run the unit tests using <code>maven-surefire-plugin</code> and there are no problems when creating the beans. But when executing it with <code>clean install cargo:run</code>, the error is generated:</p>

<p><code>org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'a': Requested bean is currently in creation: Is there an unresolvable circular reference?</code></p>

<p>Please, any suggestions on how to avoid the problem of circular dependence?</p>
","1116802","","1116802","","2019-07-03 03:45:11","2019-07-03 03:45:11","Spring: Circular dependence in cargo-maven2-plugin","<java><spring><maven-surefire-plugin><spring-framework-beans><cargo-maven2-plugin>","0","0","","","","56862597","127018","127018","spring-framework-beans","105","",""
"56901710","1","","","2019-07-05 10:56:03","","0","11","<p>With a FactoryBean implementation, which allows you to register initialization callbacks somewhere else in the code:</p>

<pre><code>@Bean fun documentSettings(): CustomizingFactoryBean&lt;DocumentSettings&gt; = 
                                               CustomizingFactoryBean.create()

@Bean fun documentSettingsCustomizerA(): Customizer&lt;DocumentSettings&gt; = Customizer { 
   settings -&gt; settings.someVal = 1
}

@Bean fun documentSettingsCustomizerB(): Customizer&lt;DocumentSettings&gt; = Customizer { 
   settings -&gt; settings.otherVal = 2
}
</code></pre>

<p>this would create a <code>DocumentSettings</code> instance with both <code>Customizer</code>s run.</p>

<p>What I'd like to achieve is to skip registering <code>CustomizingFactoryBean&lt;DocumentSettings&gt;</code> and rely on component scanning: </p>

<pre><code>@CustomizableComponent
class DocumentSettings( var someVal: Int, var otherVal: Int)
</code></pre>

<p>Do I create a custom BeanFactoryPostProcessor for that?</p>

<p>Do I plug into existing one handling <code>@Service</code>, <code>@Component</code>, <code>@Repository</code>?</p>
","543351","","773623","","2019-07-05 14:38:11","2019-07-05 14:38:11","turn a component scanned class into a factory wrapped bean","<java><spring><spring-framework-beans>","0","0","","","","56901710","127018","127018","spring-framework-beans","105","",""
"57011977","1","","","2019-07-12 17:59:18","","0","28","<p>We are currently facing an issue when successive redeployments happen. We get an  <code>java.lang.OutOfMemoryError: Metaspace.</code> On redeployment, new classloaders are created but there are soft reference which are kept in <code>ConcurrentReferenceHashMap</code> across spring core.</p>

<p>What we see as a general behavior is that softkeys are only freed on garbage collection if a certain memory threshold is reached in <strong>the heap memory</strong>. But there are cases where the keys retain metadata and in that case, if what is stressed is the metaspace we arrive to an OOM Metaspace because the softkeys are not freed in the heap memory.</p>

<p>We are currently considering to change the DEFAULT_REFERENCE_TYPE to WEAK through reflection, but taken into account the following comment:</p>

<p><a href=""https://github.com/spring-projects/spring-framework/issues/16021#issuecomment-453409588"" rel=""nofollow noreferrer"">https://github.com/spring-projects/spring-framework/issues/16021#issuecomment-453409588</a></p>

<p>Shouldn't spring provide a way to change the default reference type which is now private?</p>
","11777059","","2029022","","2019-07-13 03:54:14","2019-07-13 03:54:14","ConcurrentReferenceHashMap default DEFAULT_REFERENCEY_TYPE","<spring><spring-framework-beans>","0","0","","","","57011977","127018","127018","spring-framework-beans","105","",""
"57106583","1","","","2019-07-19 06:17:46","","0","1045","<p>I am trying to run one sample application integrated with keycloak (for IAM).
Build is success but while running the application, I get below error ...</p>

<pre><code>Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-07-19 11:30:28.660 ERROR 103440 --- [           main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'defaultValidator' defined in class path resource [org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration.class]: Invocation of init method failed; nested exception is java.lang.NoClassDefFoundError: com/fasterxml/classmate/TypeResolver
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1708) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]
    at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317) ~[spring-beans-5.0.7.RELEASE.jar:5.0.7.RELEASE]

at org.keycloak.quickstarts.devconf2019.app.CarsApp.main(CarsApp.java:38) [classes/:na]
Caused by: java.lang.NoClassDefFoundError: com/fasterxml/classmate/TypeResolver


</code></pre>

<p>I have added com.fasterxml.jackson.core(2.9.5) and com.fasterxml(1.3.1) as dependency.
Springboot version is - 2.0.3.RELEASE</p>

<p>Is there any version compatibility issue with fasterxml dependency ? How to find the missing dependency and resolve this ?</p>
","5991444","","","","","2019-07-19 06:17:46","How to resolve java.lang.NoClassDefFoundError: com/fasterxml/classmate/TypeResolver while running spring boot app","<spring><spring-boot><keycloak><spring-framework-beans>","0","2","","","","57106583","127018","127018","spring-framework-beans","105","",""
"57343967","1","","","2019-08-04 05:06:15","","0","33","<p>I am updating a DAO bean in a Spring application using java. When the DAO is initialize, the initialization method (InitDao) accesses an Oracle database and return 4 rows of data from a table. The class caches the data and when the application needs the data during message processing, it uses the cached data unless the last access time was more than 15 minutes ago. When I ran the application the first time, the data was returned correctly.  I updated the data in the database and the application never uses the new data.  If I redeploy the application with a new version, even during initialization, the data is the original data.  The cache never updates.  The cache time is set and updated after 15 minutes.  The method to query the database is also run.  Yet the data does not change.</p>

<p>I am new to this framework so I am not entirely sure how beans are initialized and how the process works. But this is what I know.</p>

<p>I updated the xml file that defines the bean in this way:</p>

<pre><code>&lt;bean id=""applicationControlDao""         
   class=""tms.common.repository.appControl.cache.dao.ApplicationControlDao""&gt;
   &lt;property name=""dataSource""&gt;
        &lt;ref bean=""dataSource"" /&gt;
   &lt;/property&gt;
   &lt;property name=""applications""&gt;
        &lt;value&gt;TRIPMESSAGINGSERVICE&lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;
</code></pre>

<p>This is the initialization method.</p>

<pre><code>public void initDao() throws Exception {
        this.selectApplicationControlQuery = new ApplicationControlDao.SelectApplicationControlQuery(this.getDataSource(), ""select application, appl_parm_key, parameter from tms_application_control where application = ?"");
        this.applicationControlDtos = this.querySelectApplicationControl(this.selectApplicationControlQuery, this.applications);
        this.resetExpiration();
        this.lastCacheRefreshTime = GregorianCalendar.getInstance();
    }
</code></pre>

<p>This is how the cache is updated in the application:</p>

<pre><code>public boolean isParameterFlagYes(String parameterKey) {
        String[] application = {MessageServiceConstants.APPLICATION_NAME};
        log.info(""Last refresh time: "" + applicationControlDao.getLastRefreshTime());
        List&lt;IApplicationControlDTO&gt; applicationControlDtoList =  applicationControlDao.selectApplicationControl(application);
        for(IApplicationControlDTO appControls : applicationControlDtoList)
        {
            log.info(""App Control Parameter Key: "" + appControls.getParamKey() + "" Parameter Value: "" + appControls.getParameter());
        }
        Optional&lt;IApplicationControlDTO&gt; applicationControlDto = applicationControlDtoList.stream().
                filter(p -&gt; p.getParamKey().equals(parameterKey) &amp;&amp;
                        p.getParameter().equalsIgnoreCase(CoreConstants.YES_FLAG)).findAny();
        if (applicationControlDto.isPresent()) {
            log.info(""App Control Flag is true for "" + parameterKey );
            return true;
        }
        log.info(""App Control Flag is false for "" + parameterKey );
        return false;
    }
</code></pre>

<p>Why doesn't the cache clear and data get updated?
I have also tried to call a 'resetCache' method that is part of the ApplicationControlDAO and the database values do not change.  They are the original values when I first ran the application.</p>

<p>Thanks</p>
","1724560","","1724560","","2019-08-04 05:21:41","2019-08-04 05:21:41","Spring Framework bean initialization not returning correct data from database","<java><spring-framework-beans>","0","2","","","","57343967","127018","127018","spring-framework-beans","105","",""
"57367400","1","","","2019-08-06 00:11:55","","0","139","<p>My project works and runs successfully on the Eclipse IDE. To export my project I right click on the project and export it as a runnable jar. Now every time I try to run the jar via cmd, using java -jar test1.jar, I get the same error:</p>

<p>""No auto configuration classes found in META-INF/spring.factories. If you are using a custom packaging, make sure that file is correct.""</p>

<p>My build.gradle:</p>

<pre><code>buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath(""org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.7

repositories {
    mavenCentral()
        flatDir {
         dirs 'F:/flatRepo'
     }     
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.session:spring-session')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    runtime('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    runtime('org.hsqldb:hsqldb')
    runtime('mysql:mysql-connector-java')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
    //
//   Dimensions dependencies

    // log4j
    compile group: 'log4j', name: 'log4j', version: '1.2.17'

// https://mvnrepository.com/artifact/javax.mail/mail
compile group: 'javax.mail', name: 'mail', version: '1.4.1'

// https://mvnrepository.com/artifact/commons-codec/commons-codec
compile group: 'commons-codec', name: 'commons-codec', version: '1.4'

// https://mvnrepository.com/artifact/javax.inject/javax.inject
compile group: 'javax.inject', name: 'javax.inject', version: '1'


}

task setHttpProxyFromEnv {
    def map = ['HTTP_PROXY': 'http', 'HTTPS_PROXY': 'https']
    for (e in System.getenv()) {
        def key = e.key.toUpperCase()
        if (key in map) {
            def base = map[key]
            def url = e.value.toURL()
            println "" - systemProp.${base}.proxy=${url.host}:${url.port}""
            System.setProperty(""${base}.proxyHost"", url.host.toString())
            System.setProperty(""${base}.proxyPort"", url.port.toString())
        }
    }
}

build.dependsOn setHttpProxyFromEnv
</code></pre>
","8447638","","","","","2019-08-06 00:11:55","GRADLE - No auto configuration classes found in META-INF/spring.factories. If you are using a custom packaging, make sure that file is correct","<eclipse><spring-boot><gradle><build.gradle><spring-framework-beans>","0","1","","","","57367400","127018","127018","spring-framework-beans","105","",""
"57420832","1","57421165","","2019-08-08 21:27:55","","0","72","<p>I am adding some new components to an existing SpringBoot application, and am experiencing bean definition exceptions when starting the application.</p>

<p>All bean/service and other components are configured via annotations rather than via spring xml configurations (I am more familiar with xml based spring configurations).  Unfortunately to explain my issue, I have to obfiscate a bit below rather than provide real code. </p>

<p>Within the application I have added a new factory component, call it FooSheetFactory:</p>

<pre><code>package some.package;  

@Component
public class FooSheetFactory {

private final List&lt;FooSheet&gt; fooSheetList;

@autowired
public FooSheetFactory(List&lt;FooSheet&gt; fooSheetList) {
  this. fooSheetList = fooSheetList;
}

.
.
(other stuff)
.
}
</code></pre>

<p>This class uses a component called FooSheet:</p>

<pre><code>package some.package;

@Component
public interface FooSheet {

public Foo getFoo(int param1, String param2);
}
</code></pre>

<p>The factory is instantiated elsewhere in the application in a manner like:</p>

<pre><code>.
.
@Autowire
FooSheetFactory fsf;
.
.
</code></pre>

<p>When starting the SpringBoot app, I get the following error:</p>

<pre><code>Error creating bean with name ""FooSheetFactory "" defined 
in file [ ~path/target/classes/..../FooSheetFactory.class]: Unsatisfied dependency 
expressed through constructor parameter 0; nested exception 
is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of 
type 'java.util.List&lt;some.package.FooSheet&gt;' available. Expected at least 1 bean which 
qualifies as autowire candidate. Dependency annotations: {}
</code></pre>

<p>On the surface this instantiation to me is similar to how we are using spring elsewhere in the application. Both the class and the interface are in the same package and other classes in this package using similar annotations are not throwing errors at start-up. I would grateful for any insights into what my problem might be. Thank you.</p>
","8796806","","","","","2019-08-08 22:01:12","No Qualifying Bean (NoSuchBeanDefinitionException) Available Error When Starting a SpringBoot Application","<java><spring-boot><spring-framework-beans>","1","0","","","","57420832","127018","127018","spring-framework-beans","105","",""
"57476276","1","","","2019-08-13 10:54:10","","0","156","<p>I'm pretty new to Spring and this code is based on different tutorials, so keep that in mind when continuing to read please.</p>

<p>So this is the task:</p>

<p>I'm creating a web frontend on top of an existing web service using SpringMVC which runs on Websphere Application Server 8.5.5.</p>

<p>The frontend simply shows some database tables, nothing fancy.</p>

<p>I tried using the <code>WebapplicationContext.getBean()</code> method with a result of a org.springframework.beans.factory.BeanCreationException for the controller.
It's cause is a java.lang.NullPointerException in the line I'm trying to autowire my bean.</p>

<p>Therefore I was searching on Stackoverflow and google for someone with a similar issue, couldn't find any suitable post.</p>

<p>Here are my classes.</p>

<p>@ComponenScan Class</p>

<pre><code>@Configuration
@ComponentScan(basePackages= {""com.xyz.webservice.services"", ""com.xyz.webservice.web""})
public class AppConfig {
}
</code></pre>

<p>Controller</p>

<pre><code>@Controller
public class IndexController {
    @Autowired //this works fine
    private WebApplicationContext ctx;

//--&gt; the error
    /* this doesn't work
    @Autowired
    private GridService gs;
    */
    //neither does this work
    private GridService gs = (GridService) ctx.getBean(""gridService"");
//&lt;--


    @RequestMapping(value= {"""", ""/"", ""/index""}, method=RequestMethod.GET)
    public ModelAndView showIndex(ModelAndView mv,
            HttpSession session) {
        Grid grid = getGrid();

        ...

        return mv;
    }

    private Grid getGrid() {
        return (Grid) ctx.getBean(""grid""); //this works totally fine
    }
    ...
}
</code></pre>

<p>Service</p>

<pre><code>package com.xyz.webservice.services;

@Service
@Scope(value = WebApplicationContext.SCOPE_SESSION, proxyMode = ScopedProxyMode.TARGET_CLASS)
public class GridService {
    ...
}
</code></pre>

<p>POJO</p>

<pre><code>package com.xyz.webservice.web;

@Component
@Scope(value = WebApplicationContext.SCOPE_SESSION, proxyMode = ScopedProxyMode.TARGET_CLASS)
public class Grid {
    private List&lt;String&gt; columnNames;
    private List&lt;Page&gt; pages;
    private int currentPageNumber;
    private CrmEmsHistoryProperties sortedBy;
    private boolean isSortedDescending;

    //Getters and Setters
</code></pre>

<p>The GridService provides the methods to work with the Grid.
Therefore the Controller injects both, the Grid (by using ctx.getBean(""grid"");), which works fine and the GridService, which doesn't work at all.</p>

<p>Expected result:
The controller should be able to inject the GridService from Spring's IoC-Container.</p>

<p>Actual result:
The controller is not able to inject the GridService from Spring's IoC-Container.</p>

<p>WebApplicationContext.getBean() throws this exception:</p>

<pre><code>[8/13/19 12:23:17:785 CEST] 0000008b ServletWrappe E com.ibm.ws.webcontainer.servlet.ServletWrapper init SRVE0271E: Uncaught init() exception created by servlet [dispatcher] in application [WebserviceEAR]: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'indexController': Unsatisfied dependency expressed through field 'gs'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.xyz.webservice.services.GridService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:668)
at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:540)
at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:494)
at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:171)
at javax.servlet.GenericServlet.init(GenericServlet.java:161)
at com.ibm.ws.webcontainer.servlet.ServletWrapper.init(ServletWrapper.java:345)
at com.ibm.ws.webcontainer.servlet.ServletWrapperImpl.init(ServletWrapperImpl.java:168)
at com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:637)
at com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:481)
at com.ibm.ws.webcontainer.servlet.ServletWrapperImpl.handleRequest(ServletWrapperImpl.java:178)
at com.ibm.ws.webcontainer.filter.WebAppFilterManager.invokeFilters(WebAppFilterManager.java:1114)
at com.ibm.ws.webcontainer.webapp.WebApp.handleRequest(WebApp.java:4047)
at com.ibm.ws.webcontainer.webapp.WebGroup.handleRequest(WebGroup.java:304)
at com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:1016)
at com.ibm.ws.webcontainer.WSWebContainer.handleRequest(WSWebContainer.java:1817)
at com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:213)
at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:463)
at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewRequest(HttpInboundLink.java:530)
at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.processRequest(HttpInboundLink.java:316)
at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.ready(HttpInboundLink.java:287)
at com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.sendToDiscriminators(NewConnectionInitialReadCallback.java:214)
at com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.complete(NewConnectionInitialReadCallback.java:113)
at com.ibm.ws.tcp.channel.impl.AioReadCompletionListener.futureCompleted(AioReadCompletionListener.java:175)
at com.ibm.io.async.AbstractAsyncFuture.invokeCallback(AbstractAsyncFuture.java:217)
at com.ibm.io.async.AsyncChannelFuture.fireCompletionActions(AsyncChannelFuture.java:161)
at com.ibm.io.async.AsyncFuture.completed(AsyncFuture.java:138)
at com.ibm.io.async.ResultHandler.complete(ResultHandler.java:204)
at com.ibm.io.async.ResultHandler.runEventProcessingLoop(ResultHandler.java:775)
at com.ibm.io.async.ResultHandler$2.run(ResultHandler.java:905)
at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1892)

Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.xyz.webservice.services.GridService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1493)
at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1104)
at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
... 42 more
</code></pre>

<p>@Autowire throws this exception:</p>

<pre><code>[8/13/19 12:14:35:106 CEST] 00000086 ServletWrappe E com.ibm.ws.webcontainer.servlet.ServletWrapper init SRVE0271E: Uncaught init() exception created by servlet [dispatcher] in application [WebserviceEAR]: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'indexController' defined in file [/home/abc/Repositories/JEE/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/Webservice/WEB-INF/classes/com/xyz/webservice/controller/IndexController.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.xyz.webservice.controller.IndexController]: Constructor threw exception; nested exception is java.lang.NullPointerException
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1155)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1099)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:668)
at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:540)
at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:494)
at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:171)
at javax.servlet.GenericServlet.init(GenericServlet.java:161)
at com.ibm.ws.webcontainer.servlet.ServletWrapper.init(ServletWrapper.java:345)
at com.ibm.ws.webcontainer.servlet.ServletWrapperImpl.init(ServletWrapperImpl.java:168)
at com.ibm.ws.webcontainer.servlet.ServletWrapper.load(ServletWrapper.java:1378)
at com.ibm.ws.webcontainer.filter.WebAppFilterManager.invokeFilters(WebAppFilterManager.java:1027)
at com.ibm.ws.webcontainer.servlet.CacheServletWrapper.handleRequest(CacheServletWrapper.java:87)
at com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:949)
at com.ibm.ws.webcontainer.WSWebContainer.handleRequest(WSWebContainer.java:1817)
at com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:213)
at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:463)
at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewRequest(HttpInboundLink.java:530)
at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.processRequest(HttpInboundLink.java:316)
at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.ready(HttpInboundLink.java:287)
at com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.sendToDiscriminators(NewConnectionInitialReadCallback.java:214)
at com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.complete(NewConnectionInitialReadCallback.java:113)
at com.ibm.ws.tcp.channel.impl.AioReadCompletionListener.futureCompleted(AioReadCompletionListener.java:175)
at com.ibm.io.async.AbstractAsyncFuture.invokeCallback(AbstractAsyncFuture.java:217)
at com.ibm.io.async.AsyncChannelFuture.fireCompletionActions(AsyncChannelFuture.java:161)
at com.ibm.io.async.AsyncFuture.completed(AsyncFuture.java:138)
at com.ibm.io.async.ResultHandler.complete(ResultHandler.java:204)
at com.ibm.io.async.ResultHandler.runEventProcessingLoop(ResultHandler.java:775)
at com.ibm.io.async.ResultHandler$2.run(ResultHandler.java:905)
at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1892)

Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.xyz.webservice.controller.IndexController]: Constructor threw exception; nested exception is java.lang.NullPointerException
at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:154)
at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:89)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1147)
... 37 more

Caused by: java.lang.NullPointerException
at com.xyz.webservice.controller.IndexController.&lt;init&gt;(IndexController.java:24)
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:83)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:57)
at java.lang.reflect.Constructor.newInstance(Constructor.java:437)
at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:142)
... 39 more
</code></pre>

<p>Hope somone can help me with this.</p>
","10955817","","13302","","2019-11-04 20:49:26","2019-11-04 20:49:26","Cannot obtain Bean using @Autowired / WebApplicationContext.getBean()","<java><spring><spring-mvc><spring-framework-beans>","2","0","","","","57476276","127018","127018","spring-framework-beans","105","",""
"58049980","1","","","2019-09-22 14:07:56","","0","20","<p>I want to keep the Spring container running forever after it starts. How can I do this?  </p>

<p>I tried to keep the main thread asleep after starting the container, which guarantees that the program will not exit.  </p>

<pre class=""lang-java prettyprint-override""><code>ApplicationContext context = new AnnotationConfigApplicationContext(""com.example"");

while (true) {
  try {
    Thread.sleep(300000);
  } catch (InterruptedException exception) {
    exception.printStackTrace();
  }
}
</code></pre>

<p>But this way looks very unattractive, I want to know if there is a more elegant way, and I want to know how SpringBoot implements this requirement.  </p>
","6607559","","","","","2019-09-22 14:07:56","How to start the spring container to run forever","<spring><spring-framework-beans>","0","0","","","","58049980","127018","127018","spring-framework-beans","105","",""
"58205307","1","","","2019-10-02 16:08:00","","0","25","<p>I have a spring application(not springboot). I need trigger application running using schedule tasks using @Scheduled. I am using annotation based spring configuration:</p>

<pre><code>package kz.user.integration.configuration;

import org.apache.log4j.Logger;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
import org.springframework.jdbc.datasource.lookup.JndiDataSourceLookup;
import org.springframework.jndi.JndiObjectFactoryBean;
import org.springframework.orm.jpa.JpaTransactionManager;
import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;
import org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter;
import org.springframework.scheduling.annotation.EnableScheduling;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.annotation.EnableTransactionManagement;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;

import javax.naming.NamingException;
import javax.persistence.EntityManager;
import javax.sql.DataSource;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;


@Configuration
@EnableWebMvc
@EnableScheduling
@ComponentScan(basePackages = {""kz.user.integration""})
@EnableTransactionManagement
@EnableJpaRepositories(basePackages = {""kz.user.integration""})
public class SpringConfiguration {
    private final static Logger LOG = Logger.getLogger(SpringConfiguration.class);


    @Bean(name = ""MyDataSource"")
    public DataSource dataSource() {
        final JndiDataSourceLookup dsLookup = new JndiDataSourceLookup();
        dsLookup.setResourceRef(true);
        DataSource dataSource = dsLookup.getDataSource(""java:jboss/datasources/MyDB/"");

        return dataSource;
    }

    @Bean
    public EntityManager entityManager() {
        return entityManagerFactory().getObject().createEntityManager();
    }

    @Bean
    public LocalContainerEntityManagerFactoryBean entityManagerFactory() {
        LocalContainerEntityManagerFactoryBean em = new LocalContainerEntityManagerFactoryBean();
        em.setDataSource(dataSource());
        em.setJpaVendorAdapter(new HibernateJpaVendorAdapter());
        em.setJpaProperties(jpaMappingProps());
        em.setPackagesToScan(""kz.user.integration.model.entity"");
        return em;
    }

    @Bean
    Properties jpaMappingProps() {
        Properties p = new Properties();
        p.setProperty(""hibernate.hbm2ddl.auto"", ""update"");
        p.setProperty(""show_sql"", ""true"");
        p.setProperty(""hibernate.dialect"", ""org.hibernate.dialect.Oracle10gDialect"");
        return p;
    }

    @Bean(name = ""transactionManager"")
    public PlatformTransactionManager transactionManager() {
        JpaTransactionManager txManager = new JpaTransactionManager();
        txManager.setEntityManagerFactory(entityManagerFactory().getObject());
        return txManager;
    }

}
</code></pre>

<p>This is my class with shedule task:</p>

<pre><code>package kz.user.integration.service;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;


@Component
public class ScheduledTasks {
    private final static Logger LOG = Logger.getLogger(ScheduledTasks.class);


    @Autowired
    EmailService emailService;


    @Scheduled(fixedRate = 120000)
    public void readTables() throws Exception {
        try {
           //some jobs
        } catch (Exception e) {
            LOG.error(""job error: "" + e);
            emailService.send(""error"", ""reason "" + e);
        }
    }
}
</code></pre>

<p>But sheduling does not work. It works only if I create class (in package declared in @ComponentScan) which extends AbstractAnnotationConfigDispatcherServletInitializer and make my SpringConfiguration extend WebMvcConfigurerAdapter . 
Why do I need class extending AbstractAnnotationConfigDispatcherServletInitializer if I am not using spring MVC. I could not find any other solution how to initialize spring context and trigger @Scheduled annotated method. So the question is how to properly initialize spring context and trigger Scheduled method execution?</p>
","3361637","","","","","2019-10-02 16:18:10","proper spring context initialization","<spring><spring-bean><spring-framework-beans>","0","0","","","","58205307","127018","127018","spring-framework-beans","105","",""
"58443457","1","","","2019-10-18 03:14:31","","0","92","<p>I am new to Spring but I haven't found an answer to this after searching for over an hour.  I am making a simple deck of cards and I can't get my Card object to instantiate with two Enums as parameters in the constructor.  Are Enums possible with Spring?  Can I not hardwire in the config class? Here is my code:</p>

<pre><code>@Component
public class Card {

    EnumValue value;
    EnumSuit suit;

    public Card(EnumValue v, EnumSuit s) {
        value = v;
        suit = s;

    }

    public EnumValue getValue() {
        return value;
    }

    public void setValue(EnumValue value) {
        this.value = value;
    }

    public EnumSuit getSuit() {
        return suit;
    }

    public void setSuit(EnumSuit suit) {
        this.suit = suit;
    }

    @Override
    public String toString() {
        return String.format(""[%s][%s]"", value.getShortName(), suit.getShortName());
    }
}

@Component
public enum EnumValue {
    ACE(""A"",1), TWO(""2"", 2), THREE(""3"", 3), FOUR(""4"", 4), FIVE(""5"", 5), SIX(""6"", 6), SEVEN(""7"", 7), 
    EIGHT(""8"", 8), NINE(""9"", 9), TEN(""T"", 10), JACK(""J"", 10), QUEEN(""Q"", 10), KING(""K"", 10);

    private String shortName;
    private int points;


    EnumValue(String name, int score){
        shortName = name;
        points = score;
    }


    public String getShortName() {
        return shortName;
    }


    public void setShortName(String shortName) {
        this.shortName = shortName;
    }


    public int getPoints() {
        return points;
    }

    public void setPoints(int points) {
        this.points = points;
    }
}


@Component
public enum EnumSuit {
    CLUBS, DIAMONDS, HEARTS, SPADES;

    public String getShortName() {
        return this.toString().substring(0,1);
    }
}


@Configuration
@ComponentScan(basePackages = ""com.betterstuff.learnspring"")
public class AppConfig {

    @Bean
    public Card getSampleCard() {
        return new Card(EnumValue.ACE, EnumSuit.CLUBS);
    }
}

public class App {

    public static void main(String[] args) {
        ApplicationContext context = new AnnotationConfigApplicationContext(AppConfig.class);

        Card obj = (Card) context.getBean(Card.class);

        System.out.println(""My Card is: "" + obj.toString());

    }

}
</code></pre>

<p>I am getting the error:</p>

<pre><code>WARNING: Exception encountered during context initialization - cancelling refresh attempt: UnsatisfiedDependencyException: Error creating bean with name 'card' defined in file [...\Card.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is NoSuchBeanDefinitionException: No qualifying bean of type 'com...EnumValue' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
Exception in thread ""main"" UnsatisfiedDependencyException: Error creating bean with name 'card' defined in file [...\Card.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is NoSuchBeanDefinitionException: No qualifying bean of type 'com...EnumValue' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
</code></pre>
","11907992","","","","","2019-10-18 03:41:57","Java Spring Cannot Create Bean with Enums as Constructor Parameters","<java><spring><enums><spring-framework-beans>","1","1","","","","58443457","127018","127018","spring-framework-beans","105","",""
"58449981","1","","","2019-10-18 11:29:57","","0","38","<p>I use Springframework's ClassPathXMLApplicationContext to initialize some beans as follows:</p>

<pre class=""lang-java prettyprint-override""><code>ctx = new ClassPathXMLApplicationContext(filename);
</code></pre>

<p>And I call <code>ctx.close()</code> on application exit.</p>

<p>However, sometimes the creation of ctx itself gives an exception (due to error in some bean creation) due to which I don't get the ctx object. But some of the beans might have initialized successfully before this exception.</p>

<p>My question is how do I do an equivalent of <code>ctx.close()</code> in this case to clean up the beans that might have got initialized?</p>
","5186509","","9318492","","2019-10-18 11:38:19","2019-10-18 12:31:28","Destroy created beans on failure in ClassPathXmlApplicationContext","<java><spring><applicationcontext><spring-framework-beans>","1","0","","","","58449981","127018","127018","spring-framework-beans","105","",""
"58553219","1","","","2019-10-25 06:22:50","","2","416","<p>I am using a new BasicAuthorizationInterceptor to do the basic authentication in oauth2.0. I can't find a replacement for the deprecated BasicAuthorizationInterceptor. Please help me with it</p>
","10722200","","","","","2020-04-16 15:04:59","What is the replacement for deprecated BasicAuthorizationInterceptor?","<java><spring><oauth-2.0><spring-framework-beans>","2","2","","","","58553219","127018","127018","spring-framework-beans","105","",""
"59159931","1","","","2019-12-03 15:00:52","","0","16","<p>I modified tsp-config.xml in dss-demo-webapp 5.5 to use other TS for signatures. It has following content:</p>

<pre><code>&lt;beans xmlns=""http://www.springframework.org/schema/beans""
 xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
 xmlns:context=""http://www.springframework.org/schema/context""
 xsi:schemaLocation=""
 http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd""&gt;

 &lt;bean id=""timestampDataLoader"" class=""eu.europa.esig.dss.client.http.commons.TimestampDataLoader""&gt;
 &lt;property name=""proxyConfig"" ref=""proxyConfig"" /&gt;
 &lt;/bean&gt;

 &lt;bean id=""tspSource"" class=""eu.europa.esig.dss.client.tsp.OnlineTSPSource""&gt;
 &lt;property name=""dataLoader"" ref=""timestampDataLoader"" /&gt;
 &lt;property name=""tspServer"" value=""http://&lt;myip&gt;/ts"" /&gt;
 &lt;/bean&gt;
&lt;/beans&gt;
</code></pre>

<p>I get error message about unsatisfied dependency during execution.
<a href=""https://i.stack.imgur.com/KjvXa.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/KjvXa.png"" alt=""enter image description here""></a></p>

<p><code>DSSBeanConfig</code> class is located here: <a href=""https://github.com/esig/dss-demonstrations/blob/master/dss-demo-webapp/src/main/java/eu/europa/esig/dss/web/config/DSSBeanConfig.java"" rel=""nofollow noreferrer"">https://github.com/esig/dss-demonstrations/blob/master/dss-demo-webapp/src/main/java/eu/europa/esig/dss/web/config/DSSBeanConfig.java</a></p>
","3946482","","","","","2019-12-03 15:00:52","Unable to start SD-DSS DemoWebapp after tspSource change","<digital-signature><spring-framework-beans>","0","0","","","","59159931","127018","127018","spring-framework-beans","105","",""
"59271535","1","","","2019-12-10 16:20:17","","0","25","<p>My sqlite db file is in:</p>

<pre><code>\shop\src\main\webapp\WEB-INF\data\shop.db
</code></pre>

<p>After I deploy to <strong>Tomcat 9</strong> my app <code>shop.war</code> it's deploy with the next folders:</p>

<pre><code>shop\WEB-INF
shop\META-INF
</code></pre>

<p>and in <code>META-INF</code></p>

<p>has the next folders:</p>

<pre><code>classes\
data\
lib\
spring\
views\
web.xml
</code></pre>

<p>in folder data has db file: <code>\data\shop.db</code></p>

<p>And this path I set in servlet-context.xml:</p>

<pre><code>&lt;beans:bean id=""dataSource""
        class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close""&gt;
        &lt;beans:property name=""driverClassName""
            value=""org.sqlite.JDBC"" /&gt;
        &lt;beans:property name=""url""
            value=""jdbc:sqlite:WEB-INF\data\shop.db"" /&gt;
        &lt;beans:property name=""username"" value="""" /&gt;
        &lt;beans:property name=""password"" value="""" /&gt;
    &lt;/beans:bean&gt;
</code></pre>

<p>But when start my project (shop) in Tomcat I get the next error:</p>

<pre><code>DEBUG: 10.12.2019 18:18:25.214 org.hibernate.internal.SessionFactoryImpl.&lt;init&gt;(SessionFactoryImpl.java:505)
    Instantiated session factory
ERROR: 10.12.2019 18:18:25.225 org.hibernate.hql.spi.PersistentTableBulkIdStrategy.exportTableDefinitions(PersistentTableBulkIdStrategy.java:183)
    Unable obtain JDBC Connection
org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (path to 'WEB-INF\data\shop.db': 'd:\Programs\apache-tomcat-9.0.16\bin\WEB-INF' does not exist)
        at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
        at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
        at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
        at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:139)
        at org.hibernate.internal.SessionFactoryImpl$2.obtainConnection(SessionFactoryImpl.java:607)
        at org.hibernate.hql.spi.PersistentTableBulkIdStrategy.exportTableDefinitions(PersistentTableBulkIdStrategy.java:138)
        at org.hibernate.hql.spi.PersistentTableBulkIdStrategy.prepare(PersistentTableBulkIdStrategy.java:104)
        at org.hibernate.internal.SessionFactoryImpl.&lt;init&gt;(SessionFactoryImpl.java:507)
        at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1857)
        at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1928)
</code></pre>
","6813231","","","","","2019-12-10 16:20:17","Can't set path to SQLite db file for Tomcat: Unable obtain JDBC Connection","<java><sqlite><tomcat8><spring-framework-beans>","0","0","","","","59271535","127018","127018","spring-framework-beans","105","",""
"59358822","1","","","2019-12-16 14:38:59","","0","33","<p>I am working on a spring framework beans and I have come across an issue that says:</p>

<blockquote>
  <p><em>Exhausted after delivery attempt: 1 caught: org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: ORA-00923: FROM keyword not found where expected</em></p>
</blockquote>

<p>And this is the source</p>

<pre><code>&lt;to id=""_toGetSQL"" uri=""sql:SELECT TRIM(T007.ACCOUNT) AS ACCOUNT, T007.IDENTCLI AS IDENTTIT, T013.IDENTCLI AS IDENTADIC, TRIM(T026.DESTIPT) AS DESTIPT, T043.PRODUCT AS product043, T043.SUBPRODU AS subproduct043, TRIM(T043.DESPROD) AS DESPROD, T175.CODESTCTA AS t175CODESTCTA, TRIM(T175.DESESTCTA) AS DESESTCTA, T043.LINEAPR AS t043LINEAPR from MPDT007 T007, MPDT013 T013, MPDT026 T026, MPDT043 T043, MPDT175 T175 WHERE T007.ACCOUNT = :#${body[ACCOUNT]} AND T007.ACCOUNT = T013.ACCOUNT AND T013.NUMBENCTA = :#${body[numbencta]} AND T013.CODENT = :#${body[codent]} AND T026.INDTIPT = :#${body[indtipt]} AND T007.PRODUCT = T043.PRODUCT AND T007.SUBPRODU = T043.SUBPRODU AND T007.CODESTCTA = T175.CODESTCTA AND T043.LINEAPR = T175.LINEA AND T043.LINEAPR &amp;lt;&amp;gt; :#${property.xonerada}"" /&gt;
</code></pre>

<p>What could be the issue? Thank You</p>
","11499990","","6029001","","2019-12-16 15:53:24","2019-12-16 15:53:24","Spring Framework: bad SQL grammar []","<oracle><spring-framework-beans>","0","0","","","","59358822","127018","127018","spring-framework-beans","105","",""
"59453372","1","59454233","","2019-12-23 10:03:54","","1","53","<p>I want to create a file upload system that works with byte arrays using Spring Framework. I have a controller as below:</p>

<pre><code>@Controller
public class FileUploadController {

    @Autowired
    FileUploadService fileService;

    @GetMapping(""/"")
    public void index() {
        System.out.println(""Show Upload Page"");
    }

    @PostMapping(""/"")
    public void uploadFile(@RequestParam(""file"") byte[] file, @RequestParam(""fileName"")String fileName, @RequestParam(""fileType"") String fileType, RedirectAttributes redirectAttributes) {

        try {

            HashMap&lt;String, String&gt; result = fileService.saveFile(file,fileName,fileType);
            String filePath = result.get(""filePath"");
            String fileSize = result.get(""fileSize"");

            System.out.println(""Path "" + filePath + "" "" + fileSize + "" Bytes"");

        } catch (Exception e) {
            e.printStackTrace();
        }

    }
}
</code></pre>

<p>and a service like so:</p>

<pre><code>@Service
public class FileUploadService {

    @Value(""${app.upload.dir:${user.home}}"")
    public String uploadDir;

    public HashMap&lt;String, String&gt; saveFile(byte[] file, String fileName, String fileType) throws Exception {

        try {
            Path copyLocation = Paths
                    .get(uploadDir + File.separator + StringUtils.cleanPath(fileName));
            String pathString = copyLocation.toString();
            FileOutputStream stream = new FileOutputStream(pathString);
            stream.write(file);
            String fileSize = String.valueOf(Files.size(copyLocation));
            HashMap&lt;String, String&gt; result = new HashMap&lt;String, String&gt;();
            result.put(""filePath"", pathString);
            result.put(""fileSize"", fileSize);

            return result;

        } catch (Exception e) {
            e.printStackTrace();
            throw new Exception(""Could not store file "" + fileName
                    + "". Please try again!"");
        }

    }

}
</code></pre>

<p>And I am testing this API using this code which uses Apache HttpClient:</p>

<pre><code>public class app {

        public static void main(String[] args) throws IOException, InterruptedException {

            byte[] array = Files.readAllBytes(Paths.get(""/Users/hemodd/Desktop/test-pic.png""));

            CloseableHttpClient client = HttpClients.createDefault();
            HttpPost httpPost = new HttpPost(""http://localhost:8080"");

            MultipartEntityBuilder builder = MultipartEntityBuilder.create();
            builder.addTextBody(""fileName"", ""Newwwww"");
            builder.addTextBody(""fileType"", ""png"");
            builder.addBinaryBody(""file"", array);

            HttpEntity multipart = builder.build();
            httpPost.setEntity(multipart);

            CloseableHttpResponse response = client.execute(httpPost);
            client.close();
        }
    }
</code></pre>

<p>Now, the problem is that the result of the writing of the received byte array is a corrupted file. I don't want to use MultipartFile and I need to stick with byte arrays. 
Any help is appreciated.</p>
","10910772","","","","","2019-12-23 11:04:23","Spring Framework: Byte Array is corrupted when received","<java><arrays><spring><rest><spring-framework-beans>","1","4","","","","59453372","127018","127018","spring-framework-beans","105","",""
"59668853","1","","","2020-01-09 16:59:38","","0","178","<p>I am getting the below error in my program after adding the below maven dependencies.</p>

<pre><code>&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
&lt;version&gt;2.2.2.RELEASE&lt;/version&gt;
</code></pre>

<p>Error</p>

<blockquote>
  <p>Unsatisfied dependency expressed through constructor parameter 2;
  nested exception is
  org.springframework.beans.factory.NoSuchBeanDefinitionException: No
  qualifying bean of type
  'org.springframework.http.codec.ServerCodecConfigurer' available:
  expected at least 1 bean which qualifies as autowire candidate.
  Dependency annotations: {}</p>
</blockquote>

<p>Action:</p>

<p>Consider defining a bean of type 'org.springframework.http.codec.ServerCodecConfigurer' in your configuration.</p>

<p>Please suggest how to create org.springframework.http.codec.ServerCodecConfigurer.</p>

<hr>

<p>The issue is solved by adding the below code.</p>

<pre><code>@Bean
public ServerCodecConfigurer serverCodecConfigurer() {
   return ServerCodecConfigurer.create();
}
</code></pre>
","5934386","","5934386","","2020-01-10 04:16:59","2020-01-10 04:16:59","Exception : a bean of type 'org.springframework.http.codec.ServerCodecConfigurer' that could not be found","<java><spring-boot><javabeans><spring-framework-beans>","0","6","","","","59668853","127018","127018","spring-framework-beans","105","",""
"60905464","1","","","2020-03-28 18:52:32","","0","22","<p>I have a Spring app and am trying to setup the tests but I cant get the configuration to work when running mvn test. </p>

<p>The entire thing works perfectly fine on build and when deployed. </p>

<p>The error i'm getting doesn't really (that I can tell) tell me much information. </p>

<pre><code>java.lang.IllegalStateException: Failed to load ApplicationContext
        at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
        at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
        at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
        at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
        at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
        at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
        at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
        at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
        at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
        at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
        at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
        at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
        at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
        at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
        at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
        at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
        at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
        at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
        at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
        at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
        at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: file [c:my\filepath\model\persistence\MyClass.class]; nested exception is java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
        at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:454)
        at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:316)
        at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)
        at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
        at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:290)
        at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:245)
        at org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:587)
        at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:305)
        at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:245)
        at org.springframework.context.annotation.ConfigurationClassParser.processImports(ConfigurationClassParser.java:587)
        at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:305)
        at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:245)
        at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:202)
        at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:170)
        at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:325)
        at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:242)
        at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:275)
        at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:95)
        at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:706)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532)
        at org.springframework.test.context.web.AbstractGenericWebContextLoader.loadContext(AbstractGenericWebContextLoader.java:129)
        at org.springframework.test.context.web.AbstractGenericWebContextLoader.loadContext(AbstractGenericWebContextLoader.java:61)
        at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275)
        at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243)
        at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
        at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
        ... 31 more
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
        at java.util.ArrayList.rangeCheck(ArrayList.java:657)
        at java.util.ArrayList.get(ArrayList.java:433)
        at org.springframework.core.annotation.AnnotationTypeMappings.get(AnnotationTypeMappings.java:165)
        at org.springframework.core.annotation.TypeMappedAnnotation.of(TypeMappedAnnotation.java:638)
        at org.springframework.core.annotation.MergedAnnotation.of(MergedAnnotation.java:596)
        at org.springframework.core.type.classreading.MergedAnnotationReadingVisitor.visitEnd(MergedAnnotationReadingVisitor.java:96)
        at org.springframework.asm.ClassReader.readElementValues(ClassReader.java:2775)
        at org.springframework.asm.ClassReader.accept(ClassReader.java:572)
        at org.springframework.asm.ClassReader.accept(ClassReader.java:400)
        at org.springframework.core.type.classreading.SimpleMetadataReader.&lt;init&gt;(SimpleMetadataReader.java:50)
        at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
        at org.springframework.core.type.classreading.CachingMetadataReaderFactory.getMetadataReader(CachingMetadataReaderFactory.java:123)
        at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:430)
        ... 56 more
</code></pre>

<p>What could be causing this? </p>

<p>Contents of MyClass...</p>

<pre><code>@Entity
@Table(name = ""MyClass"")
public class MyClass implements Serializable {
    private static final long serialversionUID = 1L;

    @Id
    @Column(name = ""ID"")
    private Long id; 
    @JsonBackReference
    @OneToMany(fetch = FetchType.LAZY)
    @JoinColumn(name = ""OUID"", insertable=false, updateable=false);
    private Set&lt;AnotherClass&gt; another = new HasSet&lt;AnotherClass&gt;();
    //A bunch of other 'regular' columns and fields
    public Myclass(){}
    //hash method and toString



}
</code></pre>
","4608207","","4608207","","2020-03-28 19:46:02","2020-03-28 19:46:02","Spring configurartion and Component scan break when trying to create tests","<spring><junit><junit4><spring-framework-beans>","0","5","","","","60905464","127018","127018","spring-framework-beans","105","",""
"61009939","1","","","2020-04-03 10:33:52","","0","14","<p>I am getting error after running Spring Boot Application:</p>

<pre><code>Exception in thread ""main"" java.lang.IllegalArgumentException: Cannot instantiate interface org.springframework.context.ApplicationListener : org.springframework.boot.builder.ParentContextCloserApplicationListener
at org.springframework.boot.SpringApplication.createSpringFactoriesInstances(SpringApplication.java:445)
    at org.springframework.boot.SpringApplication.getSpringFactoriesInstances(SpringApplication.java:427)
    at org.springframework.boot.SpringApplication.getSpringFactoriesInstances(SpringApplication.java:420)
    at org.springframework.boot.SpringApplication.&lt;init&gt;(SpringApplication.java:273)
    at org.springframework.boot.SpringApplication.&lt;init&gt;(SpringApplication.java:253)
    at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
    at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
</code></pre>

<p>My pom file:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd""&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
    &lt;parent&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
        &lt;version&gt;2.2.6.RELEASE&lt;/version&gt;
        &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;
    &lt;/parent&gt;
    &lt;groupId&gt;com.tanya.example&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-graphql-eg&lt;/artifactId&gt;
    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
    &lt;name&gt;spring-boot-graphql-eg&lt;/name&gt;
    &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;

    &lt;properties&gt;
        &lt;java.version&gt;1.8&lt;/java.version&gt;
    &lt;/properties&gt;

    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework&lt;/groupId&gt;
            &lt;artifactId&gt;spring-beans&lt;/artifactId&gt;
            &lt;version&gt;3.0.5.RELEASE&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.graphql-java&lt;/groupId&gt;
            &lt;artifactId&gt;graphql-spring-boot-starter&lt;/artifactId&gt;
            &lt;version&gt;3.6.0&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.graphql-java&lt;/groupId&gt;
            &lt;artifactId&gt;graphql-java-tools&lt;/artifactId&gt;
            &lt;version&gt;3.2.0&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;org.hsqldb&lt;/groupId&gt;
            &lt;artifactId&gt;hsqldb&lt;/artifactId&gt;
            &lt;scope&gt;runtime&lt;/scope&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;
            &lt;artifactId&gt;lombok&lt;/artifactId&gt;
            &lt;optional&gt;true&lt;/optional&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
            &lt;scope&gt;test&lt;/scope&gt;
            &lt;exclusions&gt;
                &lt;exclusion&gt;
                    &lt;groupId&gt;org.junit.vintage&lt;/groupId&gt;
                    &lt;artifactId&gt;junit-vintage-engine&lt;/artifactId&gt;
                &lt;/exclusion&gt;
            &lt;/exclusions&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;

    &lt;build&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;

&lt;/project&gt;
</code></pre>
","10348974","","1063673","","2020-04-03 11:33:41","2020-04-03 11:33:41","Cannot instantiate interface org.springframework.context.ApplicationListener","<java><graphql><spring-framework-beans>","0","0","","","","61009939","127018","127018","spring-framework-beans","105","",""
"61082078","1","","","2020-04-07 14:14:56","","0","33","<p>I couldn't find the solution in any other questions posted here.</p>

<p>I have multiple beans with conditionalOnProperty invoking different beans like below</p>

<pre><code>
    @Bean
    @ConditionalOnProperty(name = 'invoke.bean', havingValue = 'bean1', matchIfMissing = true)
    SupportingInterface bean1() {
        return new Bean1()
    }

    @Bean
    @ConditionalOnProperty(name = 'invoke.bean', havingValue = 'bean2')
    SupportingInterface bean2() {
        return new Bean2()
    }
</code></pre>

<p>in the yml file if I do invoke.bean: bean1 or invoke.bean: bean2 individually works fine but if I want to use both invoke.bean: bean1, bean2 how can I do it?</p>
","5400207","","","","","2020-04-07 14:14:56","Invoke multiple ConditionalOnProperties in the YAML file","<spring><spring-boot><yaml><spring-framework-beans>","0","7","","","","61082078","127018","127018","spring-framework-beans","105","",""
"61096022","1","","","2020-04-08 08:04:16","","0","19","<p>This is related to spring bug <a href=""https://github.com/spring-projects/spring-framework/issues/21310"" rel=""nofollow noreferrer"">#21310</a></p>

<p>I'm using the latest <strong>spring boot version 2.2.6</strong> and latest <strong>Spring Cloud Config  version 2.2.2</strong>.</p>

<p>I use GitHub as source of truth for fetching my configurations from base yml file. 
Check the property <code>cards: [""""]</code> in line number 4.</p>

<p><a href=""https://i.stack.imgur.com/qBhJO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/qBhJO.png"" alt=""github xml properties""></a></p>

<p>The response i get from my service for fetching the configuration is as below snapshot for a default profile API to spring cloud config server.</p>

<p>line number 23 in below snapshot : ""default.oihs.cards"": """"</p>

<p><a href=""https://i.stack.imgur.com/lyDlz.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/lyDlz.png"" alt=""spring cloud config server -default profile API response""></a></p>
","3433139","","3665662","","2020-04-10 10:09:45","2020-04-10 10:09:45","YamlPropertiesFactoryBean has empty string returned when empty array value is present in the YAML document","<spring-boot><spring-framework-beans><spring-cloud-config-server>","0","1","","","","61096022","127018","127018","spring-framework-beans","105","",""
"61116007","1","","","2020-04-09 07:28:16","","0","10","<p>I want to use spring-cloud-starter-openfeign in my project. When I add it, I encounter following exception:</p>

<blockquote>
  <p>============================== 2020-04-09 12:41:15.195  INFO 12980 --- [  restartedMain] o.e.j.s.Server                           : Started
  @17579ms 2020-04-09 12:41:15.229  WARN 12980 --- [  restartedMain]
  ConfigServletWebServerApplicationContext : Exception encountered
  during context initialization - cancelling refresh attempt:
  org.springframework.beans.factory.BeanCreationException: Error
  creating bean with name 'com.dev.service.IntegerServiceClient':
  Initialization of bean failed; nested exception is
  java.lang.NoSuchMethodError:
  org.springframework.util.ClassUtils.hasMethod(Ljava/lang/Class;Ljava/lang/reflect/Method;)Z
  2020-04-09 12:41:15.237  INFO 12980 --- [  restartedMain]
  o.e.j.s.session                          : node0 Stopped scavenging
  2020-04-09 12:41:15.243  INFO 12980 --- [  restartedMain]
  o.e.j.s.h.ContextHandler                 : Stopped
  o.s.b.w.e.j.JettyEmbeddedWebAppContext@3f8fd40b{application,/,[file:///C:/Users/nsoni/AppData/Local/Temp/jetty-docbase.1753062893437368891.8081/],UNAVAILABLE}
  2020-04-09 12:41:15.293  INFO 12980 --- [  restartedMain]
  ConditionEvaluationReportLoggingListener : </p>
  
  <p>Error starting ApplicationContext. To display the conditions report
  re-run your application with 'debug' enabled. 2020-04-09 12:41:15.322
  ERROR 12980 --- [  restartedMain]
  o.s.b.d.LoggingFailureAnalysisReporter   : </p>
  
  <p>*************************** APPLICATION FAILED TO START</p>
  
  <hr>
</blockquote>

<p>Description:</p>

<p>An attempt was made to call a method that does not exist. The attempt was made from the following location:</p>

<pre><code>org.springframework.beans.factory.support.AutowireUtils.isSetterDefinedInInterface(AutowireUtils.java:115)
</code></pre>

<p>The following method did not exist:</p>

<pre><code>org.springframework.util.ClassUtils.hasMethod(Ljava/lang/Class;Ljava/lang/reflect/Method;)Z
</code></pre>

<p>The method's class, org.springframework.util.ClassUtils, is available from the following locations:</p>

<pre><code>jar:file:/C:/Users/nsoni/.m2/repository/org/springframework/spring-core/5.2.2.RELEASE/spring-core-5.2.2.RELEASE.jar!/org/springframework/util/ClassUtils.class
jar:file:/C:/Users/nsoni/.m2/repository/org/springframework/spring-core/5.2.1.RELEASE/spring-core-5.2.1.RELEASE.jar!/org/springframework/util/ClassUtils.class
</code></pre>

<p>It was loaded from the following location:</p>

<pre><code>file:/C:/Users/nsoni/.m2/repository/org/springframework/spring-core/5.2.2.RELEASE/spring-core-5.2.2.RELEASE.jar
</code></pre>

<p>Action:</p>

<p>Correct the classpath of your application so that it contains a single, compatible version of org.springframework.util.ClassUtils</p>

<p>2020-04-09 12:41:15.323 ERROR 12980 --- [  restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : </p>

<hr>

<p>APPLICATION FAILED TO START</p>

<hr>

<p>Description:</p>

<p>An attempt was made to call a method that does not exist. The attempt was made from the following location:</p>

<pre><code>org.springframework.beans.factory.support.AutowireUtils.isSetterDefinedInInterface(AutowireUtils.java:115)
</code></pre>

<p>The following method did not exist:</p>

<pre><code>org.springframework.util.ClassUtils.hasMethod(Ljava/lang/Class;Ljava/lang/reflect/Method;)Z
</code></pre>

<p>The method's class, org.springframework.util.ClassUtils, is available from the following locations:</p>

<pre><code>jar:file:/C:/Users/nsoni/.m2/repository/org/springframework/spring-core/5.2.2.RELEASE/spring-core-5.2.2.RELEASE.jar!/org/springframework/util/ClassUtils.class
jar:file:/C:/Users/nsoni/.m2/repository/org/springframework/spring-core/5.2.1.RELEASE/spring-core-5.2.1.RELEASE.jar!/org/springframework/util/ClassUtils.class
</code></pre>

<p>It was loaded from the following location:</p>

<pre><code>file:/C:/Users/nsoni/.m2/repository/org/springframework/spring-core/5.2.2.RELEASE/spring-core-5.2.2.RELEASE.jar
</code></pre>

<p>==============================</p>

<p>following is use pom file:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd""&gt;
   &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
   &lt;groupId&gt;com.dev&lt;/groupId&gt;
   &lt;artifactId&gt;StringService&lt;/artifactId&gt;
   &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
   &lt;name&gt;StringService&lt;/name&gt;
   &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;
   &lt;properties&gt;
      &lt;java.version&gt;1.8&lt;/java.version&gt;
   &lt;/properties&gt;
   &lt;dependencies&gt;
      &lt;dependency&gt;
         &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
         &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;
         &lt;scope&gt;compile&lt;/scope&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
         &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
         &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
         &lt;version&gt;2.2.2.RELEASE&lt;/version&gt;
         &lt;scope&gt;compile&lt;/scope&gt;
         &lt;exclusions&gt;
            &lt;exclusion&gt;
               &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
               &lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt;
            &lt;/exclusion&gt;
            &lt;exclusion&gt;
               &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;
               &lt;artifactId&gt;log4j-to-slf4j&lt;/artifactId&gt;
            &lt;/exclusion&gt;
            &lt;exclusion&gt;
               &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;
               &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;
            &lt;/exclusion&gt;
         &lt;/exclusions&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
         &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
         &lt;artifactId&gt;spring-boot-starter-jetty&lt;/artifactId&gt;
         &lt;version&gt;2.2.2.RELEASE&lt;/version&gt;
         &lt;scope&gt;compile&lt;/scope&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
         &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;
         &lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;
         &lt;version&gt;3.0&lt;/version&gt;
         &lt;scope&gt;compile&lt;/scope&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
         &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
         &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;
         &lt;version&gt;1.7.30&lt;/version&gt;
         &lt;scope&gt;compile&lt;/scope&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
         &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;
         &lt;artifactId&gt;log4j-api&lt;/artifactId&gt;
         &lt;version&gt;2.13.0&lt;/version&gt;
         &lt;scope&gt;compile&lt;/scope&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
         &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;
         &lt;artifactId&gt;log4j-core&lt;/artifactId&gt;
         &lt;version&gt;2.13.0&lt;/version&gt;
         &lt;scope&gt;compile&lt;/scope&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
         &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;
         &lt;artifactId&gt;log4j-slf4j-impl&lt;/artifactId&gt;
         &lt;version&gt;2.13.0&lt;/version&gt;
         &lt;scope&gt;compile&lt;/scope&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
         &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
         &lt;artifactId&gt;spring-cloud-starter-openfeign&lt;/artifactId&gt;
         &lt;version&gt;2.2.2.RELEASE&lt;/version&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
         &lt;groupId&gt;com.smarsh.starter&lt;/groupId&gt;
         &lt;artifactId&gt;spring-boot-test-starter&lt;/artifactId&gt;
         &lt;version&gt;0.0.1.RELEASE&lt;/version&gt;
         &lt;type&gt;pom&lt;/type&gt;
         &lt;scope&gt;test&lt;/scope&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
         &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
         &lt;artifactId&gt;spring-boot-starter-amqp&lt;/artifactId&gt;
         &lt;version&gt;2.2.2.RELEASE&lt;/version&gt;
         &lt;exclusions&gt;
            &lt;exclusion&gt;
               &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;
               &lt;artifactId&gt;log4j-to-slf4j&lt;/artifactId&gt;
            &lt;/exclusion&gt;
            &lt;exclusion&gt;
               &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;
               &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;
            &lt;/exclusion&gt;
         &lt;/exclusions&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
         &lt;groupId&gt;com.fasterxml.jackson.datatype&lt;/groupId&gt;
         &lt;artifactId&gt;jackson-datatype-jsr310&lt;/artifactId&gt;
         &lt;version&gt;2.10.2&lt;/version&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
         &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
         &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;
         &lt;version&gt;2.2.2.RELEASE&lt;/version&gt;
         &lt;scope&gt;runtime&lt;/scope&gt;
         &lt;optional&gt;true&lt;/optional&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
         &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
         &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
         &lt;version&gt;2.2.2.RELEASE&lt;/version&gt;
         &lt;scope&gt;test&lt;/scope&gt;
         &lt;exclusions&gt;
            &lt;exclusion&gt;
               &lt;groupId&gt;org.junit.vintage&lt;/groupId&gt;
               &lt;artifactId&gt;junit-vintage-engine&lt;/artifactId&gt;
            &lt;/exclusion&gt;
         &lt;/exclusions&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
         &lt;groupId&gt;org.springframework.amqp&lt;/groupId&gt;
         &lt;artifactId&gt;spring-rabbit-test&lt;/artifactId&gt;
         &lt;version&gt;2.2.2.RELEASE&lt;/version&gt;
         &lt;scope&gt;test&lt;/scope&gt;
      &lt;/dependency&gt;
   &lt;/dependencies&gt;
   &lt;dependencyManagement&gt;
      &lt;dependencies&gt;
         &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
            &lt;artifactId&gt;spring-cloud-starter-parent&lt;/artifactId&gt;
            &lt;version&gt;Hoxton.RELEASE&lt;/version&gt;
            &lt;type&gt;pom&lt;/type&gt;
            &lt;scope&gt;import&lt;/scope&gt;
         &lt;/dependency&gt;
      &lt;/dependencies&gt;
   &lt;/dependencyManagement&gt;
   &lt;build&gt;
      &lt;plugins&gt;
         &lt;plugin&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
         &lt;/plugin&gt;
         &lt;plugin&gt;
            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
            &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
            &lt;configuration&gt;
               &lt;source&gt;1.8&lt;/source&gt;
               &lt;target&gt;1.8&lt;/target&gt;
            &lt;/configuration&gt;
         &lt;/plugin&gt;
      &lt;/plugins&gt;
   &lt;/build&gt;
&lt;/project&gt;
</code></pre>
","4506063","","5792244","","2020-04-10 20:42:50","2020-04-10 20:42:50","openfeign initailization bean failed","<spring-boot><spring-framework-beans><openfeign>","0","0","","","","61116007","127018","127018","spring-framework-beans","105","",""
"61206410","1","","","2020-04-14 11:15:26","","0","22","<p>Normally Null pointer exceptions are easy and straight forward to fix but this one involves generics. I got stuck a little.
I have this interface here:</p>

<pre><code>public interface searchQuery&lt;T, U&gt; {

  T getTClazz();

  U getUClazz();

  IBundle search(SearchParams params);
}
</code></pre>

<p>And its implementation here:</p>

<pre class=""lang-java prettyprint-override""><code>@NoArgsConstructor
public class SearchQueryImpl&lt;T extends ToDao, U implements dtos&gt; implements SearchQuery&lt;&gt; {

private T theTClazz;
private U theUClazz;

  public SearchQueryImpl(T theTClazz, U theUClazz) {
  this.theTClazz = theTClazz;
  this.theUClazz = theUClazz;
  } 

  @Override
  public T getTClazz() {
   return this.theTClazz;
  }

  @Override
  public U getUClazz() {
   return this.theUClazz;
  }

  @Override
  public IBundle search() {
   /** On calling getTClazz() here it throws a NPE
    * How can I instantiate the generic type of T and U
    */
   // Search implementation here
  }


}
</code></pre>

<p>How can I instantiate the generic type of T and U or inject (@Autowire) it's bean generically? to fix the NPE</p>
","6552341","","","","","2020-04-14 11:15:26","NPE when dealing with generic in Java Spring","<java><spring><generics><dependency-injection><spring-framework-beans>","0","1","","","","61206410","127018","127018","spring-framework-beans","105","",""
"61393139","1","","","2020-04-23 17:16:02","","0","9","<p>I am trying to override RedisCustomConversions [initial post] (<a href=""https://stackoverflow.com/questions/61280275/rediscustomconversions-using-redis-repository)and"">RedisCustomConversions using Redis Repository</a> noticed some inconsistent behaviour.</p>

<p>When I run the spring boot app from IDE I get the error mentioned in the above post, but it works fine if the app is executed using <strong>java -jar myapp.jar</strong>. Which sounds okay but that makes me question if this behaviour is consistent? i.e will my overloaded bean will always be wired? or is it random?</p>

<p>I also noticed from <strong>/actuator/beans</strong> endpoint that when executed in IDE I get this</p>

<pre><code>redisCustomConversions: {
  aliases: [ ],
  scope: ""singleton"",
  type: ""org.springframework.data.redis.core.convert.RedisCustomConversions"",
  dependencies: []
</code></pre>

<p>But running from the command line I see this. </p>

<pre><code>redisCustomConversions: {
  aliases: [ ],
  scope: ""singleton"",
  type: ""org.springframework.data.redis.core.convert.RedisCustomConversions"",
  resource: ""class path resource [com/my/project/cache/config/RedisConfig.class]"",
  dependencies: [
   ""MyWriterConverter"",
   ""MyReaderConverter""
]
</code></pre>

<p>So the question is, can we rely on this behaviour? or it's random and for some deployments, the default RedisCustomConversions will be loaded and for other my custom RedisCustomConversions will be loaded (this will crash the application as data format in REDIS will be different)? </p>
","8940973","","","","","2020-04-23 17:16:02","Spring Bean Override for Spring-Data REDIS","<spring-boot><redis><spring-data><spring-data-redis><spring-framework-beans>","0","0","","","","61393139","127018","127018","spring-framework-beans","105","",""
"61424966","1","","","2020-04-25 11:31:58","","0","23","<p>I'm very new to grails and therefore I'm trying to do the following tutorial with IntelliJ: <a href=""https://guides.grails.org/creating-your-first-grails-app/guide/index.html"" rel=""nofollow noreferrer"">https://guides.grails.org/creating-your-first-grails-app/guide/index.html</a>
After I cloned the repository, the README is asking me to run the following command:
gradle publishGuide
But I get the following error:</p>

<pre><code>sam@sam-USMC:~/IdeaProjects/creating-your-first-grails-app$ gradle publishGuide
Cannot resolve reloading agent JAR: Failed to resolve imported Maven boms: Cannot resolve external dependency org.springframework.boot:spring-boot-dependencies:2.1.9.RELEASE because no repositories are defined.
Required by:
    project :complete
Project evaluation failed including an error in afterEvaluate {}. Run with --stacktrace for details of the afterEvaluate {} error.

FAILURE: Build failed with an exception.

* Where:
Build file '/home/sam/IdeaProjects/creating-your-first-grails-app/complete/build.gradle' line: 19

* What went wrong:
A problem occurred evaluating project ':complete'.
&gt; org.codehaus.groovy.runtime.DefaultGroovyMethods.each([Ljava/lang/Object;Lgroovy/lang/Closure;)[Ljava/lang/Object;

* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.

* Get more help at https://help.gradle.org

BUILD FAILED in 1s
</code></pre>

<p>Line 19 of the build.gradle file looks like this:</p>

<pre><code>apply plugin:""org.grails.grails-web""
</code></pre>

<p>Grateful for any help!</p>
","13383088","","","","","2020-04-25 11:31:58","Failed to resolve imported Maven boms: Cannot resolve external dependency","<maven><intellij-idea><grails><groovy><spring-framework-beans>","0","1","","","","61424966","127018","127018","spring-framework-beans","105","",""